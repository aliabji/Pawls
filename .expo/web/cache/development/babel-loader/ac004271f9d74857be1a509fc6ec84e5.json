{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"onAnimationStart\", \"onAnimationEnd\", \"enterFrom\", \"exitTo\", \"forwardedRef\", \"style\", \"onLayout\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback, useImperativeHandle } from 'react';\nimport Animated from 'react-native-reanimated';\nimport View from \"../../components/view\";\nimport { forwardRef } from \"../../commons/new\";\nimport useHiddenLocation from \"../hooks/useHiddenLocation\";\nimport { TransitionViewAnimationType } from \"./useAnimationEndNotifier\";\nimport { TransitionViewDirection, TransitionViewDirectionEnum } from \"./useAnimatedTranslator\";\nimport useAnimatedTransition from \"./useAnimatedTransition\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AnimatedView = Animated.createAnimatedComponent(View);\nexport { TransitionViewDirection, TransitionViewDirectionEnum, TransitionViewAnimationType };\n\nvar TransitionView = function TransitionView(props) {\n  var onAnimationStart = props.onAnimationStart,\n      onAnimationEnd = props.onAnimationEnd,\n      enterFrom = props.enterFrom,\n      exitTo = props.exitTo,\n      forwardedRef = props.forwardedRef,\n      propsStyle = props.style,\n      propsOnLayout = props.onLayout,\n      others = _objectWithoutProperties(props, _excluded);\n\n  var containerRef = React.createRef();\n\n  var _useHiddenLocation = useHiddenLocation({\n    containerRef: containerRef\n  }),\n      hiddenLocationOnLayout = _useHiddenLocation.onLayout,\n      hiddenLocation = _useHiddenLocation.hiddenLocation;\n\n  var _useAnimatedTransitio = useAnimatedTransition({\n    hiddenLocation: hiddenLocation,\n    enterFrom: enterFrom,\n    exitTo: exitTo,\n    onAnimationStart: onAnimationStart,\n    onAnimationEnd: onAnimationEnd\n  }),\n      exit = _useAnimatedTransitio.exit,\n      animatedStyle = _useAnimatedTransitio.animatedStyle;\n\n  useImperativeHandle(forwardedRef, function () {\n    return {\n      animateOut: exit\n    };\n  }, [exit]);\n  var onLayout = useCallback(function (event) {\n    hiddenLocationOnLayout(event);\n    propsOnLayout == null ? void 0 : propsOnLayout(event);\n  }, []);\n  return _jsx(AnimatedView, _objectSpread(_objectSpread({}, others), {}, {\n    onLayout: onLayout,\n    style: [propsStyle, animatedStyle],\n    ref: containerRef\n  }));\n};\n\nTransitionView.displayName = 'TransitionView';\nTransitionView.directions = TransitionViewDirectionEnum;\nexport default forwardRef(TransitionView);","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/TransitionView/index.js"],"names":["React","useCallback","useImperativeHandle","Animated","View","forwardRef","useHiddenLocation","TransitionViewAnimationType","TransitionViewDirection","TransitionViewDirectionEnum","useAnimatedTransition","AnimatedView","createAnimatedComponent","TransitionView","props","onAnimationStart","onAnimationEnd","enterFrom","exitTo","forwardedRef","propsStyle","style","propsOnLayout","onLayout","others","containerRef","createRef","hiddenLocationOnLayout","hiddenLocation","exit","animatedStyle","animateOut","event","displayName","directions"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,mBAA7B,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP;AACA,SAASC,UAAT;AACA,OAAOC,iBAAP;AACA,SAASC,2BAAT;AACA,SAASC,uBAAT,EAAkCC,2BAAlC;AACA,OAAOC,qBAAP;;AACA,IAAMC,YAAY,GAAGR,QAAQ,CAACS,uBAAT,CAAiCR,IAAjC,CAArB;AACA,SAASI,uBAAT,EAAkCC,2BAAlC,EAA+DF,2BAA/D;;AAEA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAC9B,MACEC,gBADF,GASID,KATJ,CACEC,gBADF;AAAA,MAEEC,cAFF,GASIF,KATJ,CAEEE,cAFF;AAAA,MAGEC,SAHF,GASIH,KATJ,CAGEG,SAHF;AAAA,MAIEC,MAJF,GASIJ,KATJ,CAIEI,MAJF;AAAA,MAKEC,YALF,GASIL,KATJ,CAKEK,YALF;AAAA,MAMSC,UANT,GASIN,KATJ,CAMEO,KANF;AAAA,MAOYC,aAPZ,GASIR,KATJ,CAOES,QAPF;AAAA,MAQKC,MARL,4BASIV,KATJ;;AAUA,MAAMW,YAAY,GAAGzB,KAAK,CAAC0B,SAAN,EAArB;;AACA,2BAGIpB,iBAAiB,CAAC;AACpBmB,IAAAA,YAAY,EAAZA;AADoB,GAAD,CAHrB;AAAA,MACYE,sBADZ,sBACEJ,QADF;AAAA,MAEEK,cAFF,sBAEEA,cAFF;;AAMA,8BAGIlB,qBAAqB,CAAC;AACxBkB,IAAAA,cAAc,EAAdA,cADwB;AAExBX,IAAAA,SAAS,EAATA,SAFwB;AAGxBC,IAAAA,MAAM,EAANA,MAHwB;AAIxBH,IAAAA,gBAAgB,EAAhBA,gBAJwB;AAKxBC,IAAAA,cAAc,EAAdA;AALwB,GAAD,CAHzB;AAAA,MACEa,IADF,yBACEA,IADF;AAAA,MAEEC,aAFF,yBAEEA,aAFF;;AAUA5B,EAAAA,mBAAmB,CAACiB,YAAD,EAAe;AAAA,WAAO;AACvCY,MAAAA,UAAU,EAAEF;AAD2B,KAAP;AAAA,GAAf,EAGf,CAACA,IAAD,CAHe,CAAnB;AAIA,MAAMN,QAAQ,GAAGtB,WAAW,CAAC,UAAA+B,KAAK,EAAI;AACpCL,IAAAA,sBAAsB,CAACK,KAAD,CAAtB;AACAV,IAAAA,aAAa,QAAb,YAAAA,aAAa,CAAGU,KAAH,CAAb;AACD,GAH2B,EAGzB,EAHyB,CAA5B;AAIA,SAAO,KAAC,YAAD,kCAAkBR,MAAlB;AAA0B,IAAA,QAAQ,EAAED,QAApC;AAA8C,IAAA,KAAK,EAAE,CAACH,UAAD,EAAaU,aAAb,CAArD;AAAkF,IAAA,GAAG,EAAEL;AAAvF,KAAP;AACD,CArCD;;AAuCAZ,cAAc,CAACoB,WAAf,GAA6B,gBAA7B;AACApB,cAAc,CAACqB,UAAf,GAA4BzB,2BAA5B;AAEA,eAAeJ,UAAU,CAACQ,cAAD,CAAzB","sourcesContent":["import React, { useCallback, useImperativeHandle } from 'react';\nimport Animated from 'react-native-reanimated';\nimport View from \"../../components/view\";\nimport { forwardRef } from \"../../commons/new\";\nimport useHiddenLocation from \"../hooks/useHiddenLocation\";\nimport { TransitionViewAnimationType } from \"./useAnimationEndNotifier\";\nimport { TransitionViewDirection, TransitionViewDirectionEnum } from \"./useAnimatedTranslator\";\nimport useAnimatedTransition from \"./useAnimatedTransition\";\nconst AnimatedView = Animated.createAnimatedComponent(View);\nexport { TransitionViewDirection, TransitionViewDirectionEnum, TransitionViewAnimationType }; // TODO: might need to create a file for types and create a fake component for docs\n\nconst TransitionView = props => {\n  const {\n    onAnimationStart,\n    onAnimationEnd,\n    enterFrom,\n    exitTo,\n    forwardedRef,\n    style: propsStyle,\n    onLayout: propsOnLayout,\n    ...others\n  } = props;\n  const containerRef = React.createRef();\n  const {\n    onLayout: hiddenLocationOnLayout,\n    hiddenLocation\n  } = useHiddenLocation({\n    containerRef\n  });\n  const {\n    exit,\n    animatedStyle\n  } = useAnimatedTransition({\n    hiddenLocation,\n    enterFrom,\n    exitTo,\n    onAnimationStart,\n    onAnimationEnd\n  });\n  useImperativeHandle(forwardedRef, () => ({\n    animateOut: exit // TODO: should this be renamed as well?\n\n  }), [exit]);\n  const onLayout = useCallback(event => {\n    hiddenLocationOnLayout(event);\n    propsOnLayout?.(event); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return <AnimatedView {...others} onLayout={onLayout} style={[propsStyle, animatedStyle]} ref={containerRef} />;\n};\n\nTransitionView.displayName = 'TransitionView';\nTransitionView.directions = TransitionViewDirectionEnum; // @ts-expect-error TODO: should this be fixed in forwardRef?\n\nexport default forwardRef(TransitionView);"]},"metadata":{},"sourceType":"module"}