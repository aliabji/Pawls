{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { useState, useEffect } from 'react';\nimport { View } from \"../components/Themed\";\nimport CreateVisit from \"../components/CreateVisit\";\nimport { getFriends, getParks, createVisit } from \"../utils/apiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function CreateParkVisit(_ref) {\n  var navigation = _ref.navigation,\n      params = _ref.route.params;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      friends = _useState4[0],\n      setFriends = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      parks = _useState6[0],\n      setParks = _useState6[1];\n\n  useEffect(function () {\n    try {\n      getFriends(params.id).then(function (res) {\n        if (res.friends) {\n          console.log(\"friends\", res);\n          setFriends(res.friends);\n        } else {\n          console.log(\"error\", res);\n        }\n      });\n      getParks().then(function (res) {\n        console.log(\"parks\", res);\n\n        if (res.parks) {\n          setParks(res.parks);\n        } else {\n          console.log(\"error\", res);\n        }\n      });\n    } catch (_unused) {\n      console.log(\"failed\");\n    }\n  }, []);\n\n  var createVisitHandler = function createVisitHandler(visit) {\n    createVisit(visit).then(function (res) {\n      if (res.visit) {\n        navigation.push('ParkVisitDetails', {\n          user: params,\n          parkVisitDetails: res.visit\n        });\n      } else {\n        console.log(\"didnt work\");\n      }\n    });\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: !friends || !parks ? _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: \"white\"\n    }) : _jsx(CreateVisit, {\n      friends: friends,\n      parks: parks,\n      createVisit: createVisitHandler\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  subHeading: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/screens/CreateParkVisit.tsx"],"names":["useState","useEffect","View","CreateVisit","getFriends","getParks","createVisit","CreateParkVisit","navigation","params","route","loading","setLoading","friends","setFriends","parks","setParks","id","then","res","console","log","createVisitHandler","visit","push","user","parkVisitDetails","styles","container","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight","subHeading"],"mappings":"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","sourcesContent":["import { StyleSheet, ActivityIndicator } from 'react-native';\nimport {useState, useEffect} from 'react';\nimport { Text, View } from '../components/Themed';\nimport {LogOutButton} from '../components/LogOutButton';\nimport { RootTabScreenProps } from '../types';\nimport CreateVisit from '../components/CreateVisit';\nimport { getFriends, getParks, createVisit } from '../utils/apiService';\n\nexport default function CreateParkVisit({ navigation, route: {params} }: RootTabScreenProps<'CreateParkVisit'>) {\n    const [loading, setLoading] = useState<boolean>(true)\n    const [friends, setFriends] = useState<any>()\n    const [parks, setParks] = useState<any>()\n    \n    useEffect(() => {\n        try {\n            getFriends(params.id).then((res) => {\n                if (res.friends) {\n                    console.log(\"friends\", res)\n                    setFriends(res.friends)\n                    // setLoading(false)\n                } else {\n                    console.log(\"error\", res)\n                }\n            })\n    \n            getParks().then((res) => {\n                console.log(\"parks\", res)\n                if (res.parks) {\n                    setParks(res.parks)\n                } else {\n                    console.log(\"error\", res)\n                }\n            })\n\n        } catch {\n            console.log(\"failed\")\n        }\n    }, [])\n\n    const createVisitHandler = (visit: AnalyserNode) => {\n        createVisit(visit).then((res) => {\n            if (res.visit) {\n                navigation.push('ParkVisitDetails', {user: params, parkVisitDetails: res.visit})\n            } else {\n                console.log(\"didnt work\")\n            }\n        })\n    }\n\n    return (\n    <View style={styles.container}>\n        {!friends || !parks ? (\n            <ActivityIndicator size=\"large\" color=\"white\" />\n        ) : (\n            <CreateVisit friends={friends} parks={parks} createVisit={createVisitHandler} />\n        )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  subHeading: {\n    fontSize: 15,\n    // fontWeight: 'bold',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}