{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"headerProps\", \"containerStyle\", \"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useRef, useMemo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Spacings, Colors, BorderRadiuses } from \"../../style\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport { useDidUpdate } from \"../../hooks\";\nimport View from \"../../components/view\";\nimport ImperativeDialog from \"./ImperativeDialog\";\nimport DialogHeader from \"./DialogHeader\";\nimport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps };\n\nvar Dialog = function Dialog(props) {\n  var visible = props.visible,\n      headerProps = props.headerProps,\n      containerStyle = props.containerStyle,\n      children = props.children,\n      others = _objectWithoutProperties(props, _excluded);\n\n  var initialVisibility = useRef(visible);\n  var dialogRef = React.createRef();\n  useDidUpdate(function () {\n    if (visible) {\n      var _dialogRef$current;\n\n      (_dialogRef$current = dialogRef.current) == null ? void 0 : _dialogRef$current.open();\n    } else {\n      var _dialogRef$current2;\n\n      (_dialogRef$current2 = dialogRef.current) == null ? void 0 : _dialogRef$current2.close();\n    }\n  }, [visible]);\n  var style = useMemo(function () {\n    return [styles.defaultDialogStyle, containerStyle];\n  }, [containerStyle]);\n  return _jsx(ImperativeDialog, _objectSpread(_objectSpread({}, others), {}, {\n    initialVisibility: initialVisibility.current,\n    ref: dialogRef,\n    children: _jsxs(View, {\n      style: style,\n      children: [_jsx(DialogHeader, _objectSpread({}, headerProps)), children]\n    })\n  }));\n};\n\nDialog.displayName = 'Incubator.Dialog';\nDialog.directions = DialogDirectionsEnum;\nDialog.Header = DialogHeader;\nexport default asBaseComponent(Dialog);\nvar styles = StyleSheet.create({\n  defaultDialogStyle: {\n    marginBottom: Spacings.s5,\n    backgroundColor: Colors.white,\n    maxHeight: Constants.screenHeight * 0.6,\n    width: 250,\n    borderRadius: BorderRadiuses.br20,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/Dialog/index.js"],"names":["React","useRef","useMemo","Spacings","Colors","BorderRadiuses","asBaseComponent","Constants","useDidUpdate","View","ImperativeDialog","DialogHeader","DialogProps","DialogDirections","DialogDirectionsEnum","DialogHeaderProps","Dialog","props","visible","headerProps","containerStyle","children","others","initialVisibility","dialogRef","createRef","current","open","close","style","styles","defaultDialogStyle","displayName","directions","Header","StyleSheet","create","marginBottom","s5","backgroundColor","white","maxHeight","screenHeight","width","borderRadius","br20","overflow"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,OAAxB,QAAuC,OAAvC;;AAEA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,cAA3B;AACA,SAASC,eAAT,EAA0BC,SAA1B;AACA,SAASC,YAAT;AACA,OAAOC,IAAP;AACA,OAAOC,gBAAP;AACA,OAAOC,YAAP;AACA,SAASC,WAAT,EAAsBC,gBAAtB,EAAwCC,oBAAxC,EAA8DC,iBAA9D;;;AACA,SAASH,WAAT,EAAsBC,gBAAtB,EAAwCC,oBAAxC,EAA8DC,iBAA9D;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MACEC,OADF,GAMID,KANJ,CACEC,OADF;AAAA,MAEEC,WAFF,GAMIF,KANJ,CAEEE,WAFF;AAAA,MAGEC,cAHF,GAMIH,KANJ,CAGEG,cAHF;AAAA,MAIEC,QAJF,GAMIJ,KANJ,CAIEI,QAJF;AAAA,MAKKC,MALL,4BAMIL,KANJ;;AAOA,MAAMM,iBAAiB,GAAGtB,MAAM,CAACiB,OAAD,CAAhC;AACA,MAAMM,SAAS,GAAGxB,KAAK,CAACyB,SAAN,EAAlB;AACAjB,EAAAA,YAAY,CAAC,YAAM;AACjB,QAAIU,OAAJ,EAAa;AAAA;;AACX,4BAAAM,SAAS,CAACE,OAAV,wCAAmBC,IAAnB;AACD,KAFD,MAEO;AAAA;;AACL,6BAAAH,SAAS,CAACE,OAAV,yCAAmBE,KAAnB;AACD;AACF,GANW,EAMT,CAACV,OAAD,CANS,CAAZ;AAOA,MAAMW,KAAK,GAAG3B,OAAO,CAAC,YAAM;AAC1B,WAAO,CAAC4B,MAAM,CAACC,kBAAR,EAA4BX,cAA5B,CAAP;AACD,GAFoB,EAElB,CAACA,cAAD,CAFkB,CAArB;AAGA,SAAO,KAAC,gBAAD,kCAAsBE,MAAtB;AAA8B,IAAA,iBAAiB,EAAEC,iBAAiB,CAACG,OAAnE;AAA4E,IAAA,GAAG,EAAEF,SAAjF;AAAA,cACH,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,KAAb;AAAA,iBACE,KAAC,YAAD,oBAAkBV,WAAlB,EADF,EAEGE,QAFH;AAAA;AADG,KAAP;AAMD,CA1BD;;AA4BAL,MAAM,CAACgB,WAAP,GAAqB,kBAArB;AACAhB,MAAM,CAACiB,UAAP,GAAoBnB,oBAApB;AACAE,MAAM,CAACkB,MAAP,GAAgBvB,YAAhB;AACA,eAAeL,eAAe,CAACU,MAAD,CAA9B;AACA,IAAMc,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,kBAAkB,EAAE;AAClBM,IAAAA,YAAY,EAAElC,QAAQ,CAACmC,EADL;AAElBC,IAAAA,eAAe,EAAEnC,MAAM,CAACoC,KAFN;AAGlBC,IAAAA,SAAS,EAAElC,SAAS,CAACmC,YAAV,GAAyB,GAHlB;AAIlBC,IAAAA,KAAK,EAAE,GAJW;AAKlBC,IAAAA,YAAY,EAAEvC,cAAc,CAACwC,IALX;AAMlBC,IAAAA,QAAQ,EAAE;AANQ;AADW,CAAlB,CAAf","sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Spacings, Colors, BorderRadiuses } from \"../../style\";\nimport { asBaseComponent, Constants } from \"../../commons/new\";\nimport { useDidUpdate } from \"../../hooks\";\nimport View from \"../../components/view\";\nimport ImperativeDialog from \"./ImperativeDialog\";\nimport DialogHeader from \"./DialogHeader\";\nimport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps } from \"./types\";\nexport { DialogProps, DialogDirections, DialogDirectionsEnum, DialogHeaderProps };\n\nconst Dialog = props => {\n  const {\n    visible,\n    headerProps,\n    containerStyle,\n    children,\n    ...others\n  } = props;\n  const initialVisibility = useRef(visible);\n  const dialogRef = React.createRef();\n  useDidUpdate(() => {\n    if (visible) {\n      dialogRef.current?.open();\n    } else {\n      dialogRef.current?.close();\n    }\n  }, [visible]);\n  const style = useMemo(() => {\n    return [styles.defaultDialogStyle, containerStyle];\n  }, [containerStyle]);\n  return <ImperativeDialog {...others} initialVisibility={initialVisibility.current} ref={dialogRef}>\n      <View style={style}>\n        <DialogHeader {...headerProps} />\n        {children}\n      </View>\n    </ImperativeDialog>;\n};\n\nDialog.displayName = 'Incubator.Dialog';\nDialog.directions = DialogDirectionsEnum;\nDialog.Header = DialogHeader;\nexport default asBaseComponent(Dialog);\nconst styles = StyleSheet.create({\n  defaultDialogStyle: {\n    marginBottom: Spacings.s5,\n    backgroundColor: Colors.white,\n    maxHeight: Constants.screenHeight * 0.6,\n    width: 250,\n    borderRadius: BorderRadiuses.br20,\n    overflow: 'hidden'\n  }\n});"]},"metadata":{},"sourceType":"module"}