{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useCallback, useRef } from 'react';\nimport forwardRef from \"./forwardRef\";\nimport hoistStatics from 'hoist-non-react-statics';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction withScrollEnabler(WrappedComponent) {\n  var ScrollEnabler = function ScrollEnabler(props) {\n    var _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        scrollEnabled = _useState2[0],\n        setScrollEnabled = _useState2[1];\n\n    var contentSize = useRef(0);\n    var layoutSize = useRef(0);\n    var checkScroll = useCallback(function () {\n      var isScrollEnabled = contentSize.current > layoutSize.current;\n\n      if (isScrollEnabled !== scrollEnabled) {\n        setScrollEnabled(isScrollEnabled);\n      }\n    }, [scrollEnabled]);\n    var onContentSizeChange = useCallback(function (contentWidth, contentHeight) {\n      var size = props.horizontal ? contentWidth : contentHeight;\n\n      if (size !== contentSize.current) {\n        contentSize.current = size;\n\n        if (layoutSize.current > 0) {\n          checkScroll();\n        }\n      }\n    }, [props.horizontal, checkScroll]);\n    var onLayout = useCallback(function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var size = props.horizontal ? width : height;\n\n      if (size !== layoutSize.current) {\n        layoutSize.current = size;\n\n        if (contentSize.current > 0) {\n          checkScroll();\n        }\n      }\n    }, [props.horizontal, checkScroll]);\n    return _jsx(WrappedComponent, _objectSpread(_objectSpread({}, props), {}, {\n      scrollEnablerProps: {\n        onLayout: onLayout,\n        scrollEnabled: scrollEnabled,\n        onContentSizeChange: onContentSizeChange\n      },\n      ref: props.forwardedRef\n    }));\n  };\n\n  hoistStatics(ScrollEnabler, WrappedComponent);\n  ScrollEnabler.displayName = WrappedComponent.displayName;\n  ScrollEnabler.propTypes = WrappedComponent.propTypes;\n  ScrollEnabler.defaultProps = WrappedComponent.defaultProps;\n  return forwardRef(ScrollEnabler);\n}\n\nexport default withScrollEnabler;","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/commons/withScrollEnabler.js"],"names":["React","useState","useCallback","useRef","forwardRef","hoistStatics","withScrollEnabler","WrappedComponent","ScrollEnabler","props","scrollEnabled","setScrollEnabled","contentSize","layoutSize","checkScroll","isScrollEnabled","current","onContentSizeChange","contentWidth","contentHeight","size","horizontal","onLayout","event","nativeEvent","layout","width","height","forwardedRef","displayName","propTypes","defaultProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;;AAEA,SAASC,iBAAT,CAA2BC,gBAA3B,EAA6C;AAC3C,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC7B,oBAA0CR,QAAQ,CAAC,IAAD,CAAlD;AAAA;AAAA,QAAOS,aAAP;AAAA,QAAsBC,gBAAtB;;AACA,QAAMC,WAAW,GAAGT,MAAM,CAAC,CAAD,CAA1B;AACA,QAAMU,UAAU,GAAGV,MAAM,CAAC,CAAD,CAAzB;AACA,QAAMW,WAAW,GAAGZ,WAAW,CAAC,YAAM;AACpC,UAAMa,eAAe,GAAGH,WAAW,CAACI,OAAZ,GAAsBH,UAAU,CAACG,OAAzD;;AAEA,UAAID,eAAe,KAAKL,aAAxB,EAAuC;AACrCC,QAAAA,gBAAgB,CAACI,eAAD,CAAhB;AACD;AACF,KAN8B,EAM5B,CAACL,aAAD,CAN4B,CAA/B;AAOA,QAAMO,mBAAmB,GAAGf,WAAW,CAAC,UAACgB,YAAD,EAAeC,aAAf,EAAiC;AACvE,UAAMC,IAAI,GAAGX,KAAK,CAACY,UAAN,GAAmBH,YAAnB,GAAkCC,aAA/C;;AAEA,UAAIC,IAAI,KAAKR,WAAW,CAACI,OAAzB,EAAkC;AAChCJ,QAAAA,WAAW,CAACI,OAAZ,GAAsBI,IAAtB;;AAEA,YAAIP,UAAU,CAACG,OAAX,GAAqB,CAAzB,EAA4B;AAC1BF,UAAAA,WAAW;AACZ;AACF;AACF,KAVsC,EAUpC,CAACL,KAAK,CAACY,UAAP,EAAmBP,WAAnB,CAVoC,CAAvC;AAWA,QAAMQ,QAAQ,GAAGpB,WAAW,CAAC,UAAAqB,KAAK,EAAI;AACpC,kCAOIA,KAPJ,CACEC,WADF,CAEIC,MAFJ;AAAA,UAGMC,KAHN,yBAGMA,KAHN;AAAA,UAIMC,MAJN,yBAIMA,MAJN;AAQA,UAAMP,IAAI,GAAGX,KAAK,CAACY,UAAN,GAAmBK,KAAnB,GAA2BC,MAAxC;;AAEA,UAAIP,IAAI,KAAKP,UAAU,CAACG,OAAxB,EAAiC;AAC/BH,QAAAA,UAAU,CAACG,OAAX,GAAqBI,IAArB;;AAEA,YAAIR,WAAW,CAACI,OAAZ,GAAsB,CAA1B,EAA6B;AAC3BF,UAAAA,WAAW;AACZ;AACF;AACF,KAlB2B,EAkBzB,CAACL,KAAK,CAACY,UAAP,EAAmBP,WAAnB,CAlByB,CAA5B;AAmBA,WAAO,KAAC,gBAAD,kCAAsBL,KAAtB;AAA6B,MAAA,kBAAkB,EAAE;AACtDa,QAAAA,QAAQ,EAARA,QADsD;AAEtDZ,QAAAA,aAAa,EAAbA,aAFsD;AAGtDO,QAAAA,mBAAmB,EAAnBA;AAHsD,OAAjD;AAIJ,MAAA,GAAG,EAAER,KAAK,CAACmB;AAJP,OAAP;AAKD,GA9CD;;AAgDAvB,EAAAA,YAAY,CAACG,aAAD,EAAgBD,gBAAhB,CAAZ;AACAC,EAAAA,aAAa,CAACqB,WAAd,GAA4BtB,gBAAgB,CAACsB,WAA7C;AAEArB,EAAAA,aAAa,CAACsB,SAAd,GAA0BvB,gBAAgB,CAACuB,SAA3C;AAEAtB,EAAAA,aAAa,CAACuB,YAAd,GAA6BxB,gBAAgB,CAACwB,YAA9C;AACA,SAAO3B,UAAU,CAACI,aAAD,CAAjB;AACD;;AAED,eAAeF,iBAAf","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport forwardRef from \"./forwardRef\";\nimport hoistStatics from 'hoist-non-react-statics';\n\nfunction withScrollEnabler(WrappedComponent) {\n  const ScrollEnabler = props => {\n    const [scrollEnabled, setScrollEnabled] = useState(true);\n    const contentSize = useRef(0);\n    const layoutSize = useRef(0);\n    const checkScroll = useCallback(() => {\n      const isScrollEnabled = contentSize.current > layoutSize.current;\n\n      if (isScrollEnabled !== scrollEnabled) {\n        setScrollEnabled(isScrollEnabled);\n      }\n    }, [scrollEnabled]);\n    const onContentSizeChange = useCallback((contentWidth, contentHeight) => {\n      const size = props.horizontal ? contentWidth : contentHeight;\n\n      if (size !== contentSize.current) {\n        contentSize.current = size;\n\n        if (layoutSize.current > 0) {\n          checkScroll();\n        }\n      }\n    }, [props.horizontal, checkScroll]);\n    const onLayout = useCallback(event => {\n      const {\n        nativeEvent: {\n          layout: {\n            width,\n            height\n          }\n        }\n      } = event;\n      const size = props.horizontal ? width : height;\n\n      if (size !== layoutSize.current) {\n        layoutSize.current = size;\n\n        if (contentSize.current > 0) {\n          checkScroll();\n        }\n      }\n    }, [props.horizontal, checkScroll]);\n    return <WrappedComponent {...props} scrollEnablerProps={{\n      onLayout,\n      scrollEnabled,\n      onContentSizeChange\n    }} ref={props.forwardedRef} />;\n  };\n\n  hoistStatics(ScrollEnabler, WrappedComponent);\n  ScrollEnabler.displayName = WrappedComponent.displayName; //@ts-ignore\n\n  ScrollEnabler.propTypes = WrappedComponent.propTypes; //@ts-ignore\n\n  ScrollEnabler.defaultProps = WrappedComponent.defaultProps;\n  return forwardRef(ScrollEnabler);\n}\n\nexport default withScrollEnabler;"]},"metadata":{},"sourceType":"module"}