{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useEffect, useState } from 'react';\nimport { Text, View } from \"../components/Themed\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ViewParks(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      parks = _useState2[0],\n      setParks = _useState2[1];\n\n  useEffect(function () {\n    fetch('http://192.168.68.127:3001/users/1/parks', {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    }).then(function (data) {\n      return data.json();\n    }).then(function (res) {\n      console.log(res);\n\n      if (res.parks) {\n        setParks(res.parks);\n      } else {\n        console.log(\"no parks found\");\n      }\n    }).catch(function (err) {\n      console.log('error checking login: ', err);\n    });\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      children: parks && parks.map(function (park, key) {\n        return _jsx(View, {\n          children: _jsxs(Text, {\n            children: [park.name, \" \", park.vicinity]\n          })\n        }, key);\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  subHeading: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/screens/ViewParks.tsx"],"names":["useEffect","useState","Text","View","ViewParks","navigation","undefined","parks","setParks","fetch","headers","method","then","data","json","res","console","log","catch","err","styles","container","map","park","key","name","vicinity","StyleSheet","create","flex","alignItems","justifyContent","title","fontSize","fontWeight","subHeading"],"mappings":";;;AACA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AAEA,SAASC,IAAT,EAAeC,IAAf;;;AAGA,eAAe,SAASC,SAAT,OAAoE;AAAA,MAA/CC,UAA+C,QAA/CA,UAA+C;;AAC/E,kBAA0BJ,QAAQ,CAAMK,SAAN,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACFR,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,KAAK,CAAC,0CAAD,EAA6C;AAChDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OADuC;AAEhDC,MAAAA,MAAM,EAAE;AAFwC,KAA7C,CAAL,CAGKC,IAHL,CAGU,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,EAAV;AAAA,KAHV,EAGiCF,IAHjC,CAGsC,UAACG,GAAD,EAAQ;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACF,UAAIA,GAAG,CAACR,KAAR,EAAe;AAGfC,QAAAA,QAAQ,CAACO,GAAG,CAACR,KAAL,CAAR;AACC,OAJD,MAIO;AACHS,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACF,KAZH,EAaGC,KAbH,CAaS,UAACC,GAAD,EAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCE,GAAtC;AACD,KAfH;AAiBD,GAlBQ,EAkBN,EAlBM,CAAT;AAmBA,SACE,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,cACU,KAAC,UAAD;AAAA,gBACLd,KAAK,IAAIA,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD,EAAYC,GAAZ,EAAyB;AACzC,eACI,KAAC,IAAD;AAAA,oBACI,MAAC,IAAD;AAAA,uBAAOD,IAAI,CAACE,IAAZ,OAAmBF,IAAI,CAACG,QAAxB;AAAA;AADJ,WAAWF,GAAX,CADJ;AAKH,OANS;AADJ;AADV,IADF;AAcD;AAED,IAAMJ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BC,EAAAA,UAAU,EAAE;AACVF,IAAAA,QAAQ,EAAE;AADA;AAVmB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, ScrollView } from 'react-native';\r\nimport {useEffect, useState} from 'react'\r\nimport EditScreenInfo from '../components/EditScreenInfo';\r\nimport { Text, View } from '../components/Themed';\r\nimport { RootTabScreenProps } from '../types';\r\n\r\nexport default function ViewParks({ navigation }: RootTabScreenProps<'ViewParks'>) {\r\n    const [parks, setParks] = useState<any>(undefined)\r\n  useEffect(() => {\r\n    fetch('http://192.168.68.127:3001/users/1/parks', {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      method: 'GET'\r\n      }).then((data) => data.json()).then((res) =>{\r\n          console.log(res)\r\n        if (res.parks) {\r\n            // console.log(\"logged in \", res)\r\n        //   navigation.replace('Dashboard', res.user)\r\n        setParks(res.parks)\r\n        } else {\r\n            console.log(\"no parks found\")\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log('error checking login: ', err)\r\n      })\r\n  \r\n  }, [])\r\n  return (\r\n    <View style={styles.container}>\r\n              <ScrollView>\r\n        {parks && parks.map((park: any, key: any) => {\r\n            return (\r\n                <View key={key}>\r\n                    <Text>{park.name} {park.vicinity}</Text>\r\n                </View>\r\n            )\r\n        })\r\n        }\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  subHeading: {\r\n    fontSize: 15,\r\n    // fontWeight: 'bold',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}