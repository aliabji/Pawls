{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport RNTextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Colors, Typography } from \"../../style\";\nimport { BaseComponent } from \"../../commons\";\nimport Validators from \"./Validators\";\nvar VALIDATORS = {\n  REQUIRED: 'required',\n  EMAIL: 'email',\n  URL: 'url',\n  NUMBER: 'number',\n  PRICE: 'price'\n};\n\nvar BaseInput = function (_BaseComponent) {\n  _inherits(BaseInput, _BaseComponent);\n\n  var _super = _createSuper(BaseInput);\n\n  function BaseInput(props) {\n    var _this;\n\n    _classCallCheck(this, BaseInput);\n\n    _this = _super.call(this, props);\n\n    _this.onFocus = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _.invoke.apply(_, [_this.props, 'onFocus'].concat(args));\n\n      _this.setState({\n        focused: true\n      });\n    };\n\n    _this.onBlur = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _.invoke.apply(_, [_this.props, 'onBlur'].concat(args));\n\n      _this.setState({\n        focused: false\n      });\n\n      var validateOnBlur = _this.props.validateOnBlur;\n\n      if (validateOnBlur) {\n        _this.validate();\n      }\n    };\n\n    _this.onChange = function (event) {\n      _.invoke(_this.props, 'onChange', event);\n    };\n\n    _this.onChangeText = function (text) {\n      _.invoke(_this.props, 'onChangeText', text);\n\n      _this.setState({\n        value: text\n      });\n\n      var validateOnChange = _this.props.validateOnChange;\n\n      if (validateOnChange) {\n        setImmediate(_this.validate);\n      }\n    };\n\n    _this.validate = function () {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _.get(_assertThisInitialized(_this), 'state.value');\n      var dryRun = arguments.length > 1 ? arguments[1] : undefined;\n      var validate = _this.props.validate;\n\n      if (!validate) {\n        return;\n      }\n\n      var isValid = true;\n      var inputValidators = _.isArray(validate) ? validate : [validate];\n      var failingValidatorIndex;\n\n      for (var index = 0; index < inputValidators.length; index++) {\n        var validator = inputValidators[index];\n        var validatorFunction = void 0;\n\n        if (_.isFunction(validator)) {\n          validatorFunction = validator;\n        } else if (_.isString(validator) && !!Validators[validator]) {\n          validatorFunction = Validators[validator];\n        }\n\n        if (validatorFunction && !validatorFunction(value)) {\n          isValid = false;\n          failingValidatorIndex = index;\n          break;\n        }\n      }\n\n      var error;\n\n      if (!isValid) {\n        var errorMessage = _this.props.errorMessage;\n\n        if (_.isArray(errorMessage)) {\n          error = errorMessage[failingValidatorIndex];\n        } else {\n          error = errorMessage;\n        }\n      } else {\n        error = undefined;\n      }\n\n      if (!dryRun) {\n        if (_this.state.valid !== isValid) {\n          _.invoke(_this.props, 'onChangeValidity', isValid);\n        }\n\n        _this.setState({\n          error: error,\n          valid: isValid\n        });\n      }\n\n      return isValid;\n    };\n\n    _this.state = _objectSpread(_objectSpread({}, _this.state), {}, {\n      value: props.value,\n      focused: false,\n      valid: false,\n      error: undefined\n    });\n    return _this;\n  }\n\n  _createClass(BaseInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var validateOnStart = this.props.validateOnStart;\n\n      if (validateOnStart) {\n        this.validate();\n      }\n    }\n  }, {\n    key: \"getTypography\",\n    value: function getTypography() {\n      return this.extractTypographyValue() || Typography.text70;\n    }\n  }, {\n    key: \"hasText\",\n    value: function hasText() {\n      var value = this.state.value;\n      return value && value.length > 0;\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this.input.isFocused();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.input.clear();\n    }\n  }, {\n    key: \"isRequiredField\",\n    value: function isRequiredField() {\n      var validate = this.props.validate;\n\n      if (_.isArray(validate)) {\n        return validate.indexOf(VALIDATORS.REQUIRED) !== -1;\n      }\n\n      return validate === VALIDATORS.REQUIRED;\n    }\n  }, {\n    key: \"getRequiredPlaceholder\",\n    value: function getRequiredPlaceholder(placeholder) {\n      var _this$getThemeProps = this.getThemeProps(),\n          markRequired = _this$getThemeProps.markRequired;\n\n      var shouldDisplayPlaceholderAsRequired = this.isRequiredField() && markRequired && placeholder;\n\n      if (shouldDisplayPlaceholderAsRequired) {\n        return placeholder + \" *\";\n      }\n\n      return placeholder;\n    }\n  }, {\n    key: \"getErrorMessage\",\n    value: function getErrorMessage() {\n      var propsError = this.props.error;\n      var stateError = this.state.error;\n      return propsError || stateError;\n    }\n  }, {\n    key: \"getColor\",\n    value: function getColor(value) {\n      if (this.state.focused) {\n        return Colors.grey10;\n      } else {\n        return _.isEmpty(value) ? Colors.grey40 : Colors.grey10;\n      }\n    }\n  }, {\n    key: \"toggleExpandableModal\",\n    value: function toggleExpandableModal() {\n      var _this$input;\n\n      return (_this$input = this.input).toggleExpandableModal.apply(_this$input, arguments);\n    }\n  }]);\n\n  return BaseInput;\n}(BaseComponent);\n\nBaseInput.displayName = 'BaseInput';\nBaseInput.propTypes = _objectSpread(_objectSpread({}, RNTextInput.propTypes), {}, {\n  color: PropTypes.string,\n  containerStyle: ViewPropTypes.style,\n  validate: PropTypes.oneOfType([PropTypes.oneOf(_.values(VALIDATORS)), PropTypes.func, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(_.values(VALIDATORS)), PropTypes.func]))]),\n  markRequired: PropTypes.bool,\n  errorMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  validateOnStart: PropTypes.bool,\n  validateOnChange: PropTypes.bool,\n  validateOnBlur: PropTypes.bool,\n  onChangeValidity: PropTypes.func\n});\nBaseInput.defaultProps = {\n  validateOnBlur: true\n};\nexport { BaseInput as default };","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/baseInput/index.js"],"names":["_","PropTypes","React","ViewPropTypes","Colors","Typography","BaseComponent","Validators","VALIDATORS","REQUIRED","EMAIL","URL","NUMBER","PRICE","BaseInput","props","onFocus","args","invoke","setState","focused","onBlur","validateOnBlur","validate","onChange","event","onChangeText","text","value","validateOnChange","setImmediate","get","dryRun","isValid","inputValidators","isArray","failingValidatorIndex","index","length","validator","validatorFunction","isFunction","isString","error","errorMessage","undefined","state","valid","validateOnStart","extractTypographyValue","text70","input","isFocused","focus","blur","clear","indexOf","placeholder","getThemeProps","markRequired","shouldDisplayPlaceholderAsRequired","isRequiredField","propsError","stateError","grey10","isEmpty","grey40","toggleExpandableModal","displayName","propTypes","RNTextInput","color","string","containerStyle","style","oneOfType","oneOf","values","func","arrayOf","bool","onChangeValidity","defaultProps"],"mappings":";;;;;;;;;;;;;;;;AACA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;SACSC,a;;AACT,SAASC,MAAT,EAAiBC,UAAjB;AACA,SAASC,aAAT;AACA,OAAOC,UAAP;AACA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE,UADO;AAEjBC,EAAAA,KAAK,EAAE,OAFU;AAGjBC,EAAAA,GAAG,EAAE,KAHY;AAIjBC,EAAAA,MAAM,EAAE,QAJS;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAAnB;;IAOqBC,S;;;;;AAyDnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAsBnBC,OAtBmB,GAsBT,YAAa;AAAA,wCAATC,IAAS;AAATA,QAAAA,IAAS;AAAA;;AACrBjB,MAAAA,CAAC,CAACkB,MAAF,OAAAlB,CAAC,GAAQ,MAAKe,KAAb,EAAoB,SAApB,SAAkCE,IAAlC,EAAD;;AAEA,YAAKE,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KA5BkB;;AAAA,UA6BnBC,MA7BmB,GA6BV,YAAa;AAAA,yCAATJ,IAAS;AAATA,QAAAA,IAAS;AAAA;;AACpBjB,MAAAA,CAAC,CAACkB,MAAF,OAAAlB,CAAC,GAAQ,MAAKe,KAAb,EAAoB,QAApB,SAAiCE,IAAjC,EAAD;;AAEA,YAAKE,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE;AADG,OAAd;;AAGA,UACEE,cADF,GAEI,MAAKP,KAFT,CACEO,cADF;;AAIA,UAAIA,cAAJ,EAAoB;AAClB,cAAKC,QAAL;AACD;AACF,KA1CkB;;AAAA,UA2CnBC,QA3CmB,GA2CR,UAAAC,KAAK,EAAI;AAClBzB,MAAAA,CAAC,CAACkB,MAAF,CAAS,MAAKH,KAAd,EAAqB,UAArB,EAAiCU,KAAjC;AACD,KA7CkB;;AAAA,UA8CnBC,YA9CmB,GA8CJ,UAAAC,IAAI,EAAI;AACrB3B,MAAAA,CAAC,CAACkB,MAAF,CAAS,MAAKH,KAAd,EAAqB,cAArB,EAAqCY,IAArC;;AAEA,YAAKR,QAAL,CAAc;AACZS,QAAAA,KAAK,EAAED;AADK,OAAd;;AAGA,UACEE,gBADF,GAEI,MAAKd,KAFT,CACEc,gBADF;;AAIA,UAAIA,gBAAJ,EAAsB;AACpBC,QAAAA,YAAY,CAAC,MAAKP,QAAN,CAAZ;AACD;AACF,KA3DkB;;AAAA,UAyFnBA,QAzFmB,GAyFR,YAAgD;AAAA,UAA/CK,KAA+C,uEAAvC5B,CAAC,CAAC+B,GAAF,gCAAY,aAAZ,CAAuC;AAAA,UAAXC,MAAW;AAEzD,UACET,QADF,GAEI,MAAKR,KAFT,CACEQ,QADF;;AAIA,UAAI,CAACA,QAAL,EAAe;AACb;AACD;;AAED,UAAIU,OAAO,GAAG,IAAd;AACA,UAAMC,eAAe,GAAGlC,CAAC,CAACmC,OAAF,CAAUZ,QAAV,IAAsBA,QAAtB,GAAiC,CAACA,QAAD,CAAzD;AACA,UAAIa,qBAAJ;;AAEA,WAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,eAAe,CAACI,MAA5C,EAAoDD,KAAK,EAAzD,EAA6D;AAC3D,YAAME,SAAS,GAAGL,eAAe,CAACG,KAAD,CAAjC;AACA,YAAIG,iBAAiB,SAArB;;AAEA,YAAIxC,CAAC,CAACyC,UAAF,CAAaF,SAAb,CAAJ,EAA6B;AAC3BC,UAAAA,iBAAiB,GAAGD,SAApB;AACD,SAFD,MAEO,IAAIvC,CAAC,CAAC0C,QAAF,CAAWH,SAAX,KAAyB,CAAC,CAAChC,UAAU,CAACgC,SAAD,CAAzC,EAAsD;AAC3DC,UAAAA,iBAAiB,GAAGjC,UAAU,CAACgC,SAAD,CAA9B;AACD;;AAGD,YAAIC,iBAAiB,IAAI,CAACA,iBAAiB,CAACZ,KAAD,CAA3C,EAAoD;AAClDK,UAAAA,OAAO,GAAG,KAAV;AACAG,UAAAA,qBAAqB,GAAGC,KAAxB;AACA;AACD;AACF;;AAGD,UAAIM,KAAJ;;AAEA,UAAI,CAACV,OAAL,EAAc;AACZ,YACEW,YADF,GAEI,MAAK7B,KAFT,CACE6B,YADF;;AAIA,YAAI5C,CAAC,CAACmC,OAAF,CAAUS,YAAV,CAAJ,EAA6B;AAC3BD,UAAAA,KAAK,GAAGC,YAAY,CAACR,qBAAD,CAApB;AACD,SAFD,MAEO;AACLO,UAAAA,KAAK,GAAGC,YAAR;AACD;AACF,OAVD,MAUO;AACLD,QAAAA,KAAK,GAAGE,SAAR;AACD;;AAED,UAAI,CAACb,MAAL,EAAa;AAEX,YAAI,MAAKc,KAAL,CAAWC,KAAX,KAAqBd,OAAzB,EAAkC;AAChCjC,UAAAA,CAAC,CAACkB,MAAF,CAAS,MAAKH,KAAd,EAAqB,kBAArB,EAAyCkB,OAAzC;AACD;;AAGD,cAAKd,QAAL,CAAc;AACZwB,UAAAA,KAAK,EAALA,KADY;AAEZI,UAAAA,KAAK,EAAEd;AAFK,SAAd;AAID;;AAED,aAAOA,OAAP;AACD,KAxJkB;;AAEjB,UAAKa,KAAL,mCAAkB,MAAKA,KAAvB;AACElB,MAAAA,KAAK,EAAEb,KAAK,CAACa,KADf;AAEER,MAAAA,OAAO,EAAE,KAFX;AAGE2B,MAAAA,KAAK,EAAE,KAHT;AAIEJ,MAAAA,KAAK,EAAEE;AAJT;AAFiB;AAQlB;;;;WAED,6BAAoB;AAClB,UACEG,eADF,GAEI,KAAKjC,KAFT,CACEiC,eADF;;AAIA,UAAIA,eAAJ,EAAqB;AACnB,aAAKzB,QAAL;AACD;AACF;;;WA4CD,yBAAgB;AACd,aAAO,KAAK0B,sBAAL,MAAiC5C,UAAU,CAAC6C,MAAnD;AACD;;;WAED,mBAAU;AACR,UACEtB,KADF,GAEI,KAAKkB,KAFT,CACElB,KADF;AAGA,aAAOA,KAAK,IAAIA,KAAK,CAACU,MAAN,GAAe,CAA/B;AACD;;;WAED,qBAAY;AACV,aAAO,KAAKa,KAAL,CAAWC,SAAX,EAAP;AACD;;;WAED,iBAAQ;AACN,WAAKD,KAAL,CAAWE,KAAX;AACD;;;WAED,gBAAO;AACL,WAAKF,KAAL,CAAWG,IAAX;AACD;;;WAED,iBAAQ;AACN,WAAKH,KAAL,CAAWI,KAAX;AACD;;;WAmED,2BAAkB;AAChB,UACEhC,QADF,GAEI,KAAKR,KAFT,CACEQ,QADF;;AAIA,UAAIvB,CAAC,CAACmC,OAAF,CAAUZ,QAAV,CAAJ,EAAyB;AACvB,eAAOA,QAAQ,CAACiC,OAAT,CAAiBhD,UAAU,CAACC,QAA5B,MAA0C,CAAC,CAAlD;AACD;;AAED,aAAOc,QAAQ,KAAKf,UAAU,CAACC,QAA/B;AACD;;;WAED,gCAAuBgD,WAAvB,EAAoC;AAClC,gCAEI,KAAKC,aAAL,EAFJ;AAAA,UACEC,YADF,uBACEA,YADF;;AAGA,UAAMC,kCAAkC,GAAG,KAAKC,eAAL,MAA0BF,YAA1B,IAA0CF,WAArF;;AAEA,UAAIG,kCAAJ,EAAwC;AACtC,eAAUH,WAAV;AACD;;AAED,aAAOA,WAAP;AACD;;;WAED,2BAAkB;AAChB,UACSK,UADT,GAEI,KAAK/C,KAFT,CACE4B,KADF;AAGA,UACSoB,UADT,GAEI,KAAKjB,KAFT,CACEH,KADF;AAGA,aAAOmB,UAAU,IAAIC,UAArB;AACD;;;WAED,kBAASnC,KAAT,EAAgB;AACd,UAAI,KAAKkB,KAAL,CAAW1B,OAAf,EAAwB;AACtB,eAAOhB,MAAM,CAAC4D,MAAd;AACD,OAFD,MAEO;AACL,eAAOhE,CAAC,CAACiE,OAAF,CAAUrC,KAAV,IAAmBxB,MAAM,CAAC8D,MAA1B,GAAmC9D,MAAM,CAAC4D,MAAjD;AACD;AACF;;;WAED,iCAA+B;AAAA;;AAE7B,aAAO,oBAAKb,KAAL,EAAWgB,qBAAX,8BAAP;AACD;;;;EAjQoC7D,a;;AAAlBQ,S,CACZsD,W,GAAc,W;AADFtD,S,CAEZuD,S,mCAAiBC,WAAW,CAACD,S;AAMlCE,EAAAA,KAAK,EAAEtE,SAAS,CAACuE,M;AAKjBC,EAAAA,cAAc,EAAEtE,aAAa,CAACuE,K;AAK9BnD,EAAAA,QAAQ,EAAEtB,SAAS,CAAC0E,SAAV,CAAoB,CAAC1E,SAAS,CAAC2E,KAAV,CAAgB5E,CAAC,CAAC6E,MAAF,CAASrE,UAAT,CAAhB,CAAD,EAC9BP,SAAS,CAAC6E,IADoB,EAE9B7E,SAAS,CAAC8E,OAAV,CAAkB9E,SAAS,CAAC0E,SAAV,CAAoB,CAAC1E,SAAS,CAAC2E,KAAV,CAAgB5E,CAAC,CAAC6E,MAAF,CAASrE,UAAT,CAAhB,CAAD,EAAwCP,SAAS,CAAC6E,IAAlD,CAApB,CAAlB,CAF8B,CAApB,C;AAQVnB,EAAAA,YAAY,EAAE1D,SAAS,CAAC+E,I;AAKxBpC,EAAAA,YAAY,EAAE3C,SAAS,CAAC0E,SAAV,CAAoB,CAAC1E,SAAS,CAACuE,MAAX,EAAmBvE,SAAS,CAAC8E,OAAV,CAAkB9E,SAAS,CAACuE,MAA5B,CAAnB,CAApB,C;AAKdxB,EAAAA,eAAe,EAAE/C,SAAS,CAAC+E,I;AAK3BnD,EAAAA,gBAAgB,EAAE5B,SAAS,CAAC+E,I;AAK5B1D,EAAAA,cAAc,EAAErB,SAAS,CAAC+E,I;AAK1BC,EAAAA,gBAAgB,EAAEhF,SAAS,CAAC6E;;AAnDXhE,S,CAqDZoE,Y,GAAe;AACpB5D,EAAAA,cAAc,EAAE;AADI,C;SArDHR,S","sourcesContent":["// @ts-nocheck\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ViewPropTypes, TextInput as RNTextInput } from 'react-native';\nimport { Colors, Typography } from \"../../style\";\nimport { BaseComponent } from \"../../commons\";\nimport Validators from \"./Validators\";\nconst VALIDATORS = {\n  REQUIRED: 'required',\n  EMAIL: 'email',\n  URL: 'url',\n  NUMBER: 'number',\n  PRICE: 'price'\n};\nexport default class BaseInput extends BaseComponent {\n  static displayName = 'BaseInput';\n  static propTypes = { ...RNTextInput.propTypes,\n    // ...BaseComponent.propTypes,\n\n    /**\n     * text color\n     */\n    color: PropTypes.string,\n\n    /**\n     * text input container style\n     */\n    containerStyle: ViewPropTypes.style,\n\n    /**\n     * validator type or custom validator function\n     */\n    validate: PropTypes.oneOfType([PropTypes.oneOf(_.values(VALIDATORS)), // enum\n    PropTypes.func, // custom\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(_.values(VALIDATORS)), PropTypes.func])) // array of validators\n    ]),\n\n    /**\n     * Whether to mark required field with an asterisk\n     */\n    markRequired: PropTypes.bool,\n\n    /**\n     * the message to be displayed when the validation fails\n     */\n    errorMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n\n    /**\n     * whether to run the validation on mount\n     */\n    validateOnStart: PropTypes.bool,\n\n    /**\n     * whether to run the validation on text changed\n     */\n    validateOnChange: PropTypes.bool,\n\n    /**\n     * whether to run the validation on blur\n     */\n    validateOnBlur: PropTypes.bool,\n\n    /**\n     * callback for validity change\n     */\n    onChangeValidity: PropTypes.func\n  };\n  static defaultProps = {\n    validateOnBlur: true\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { ...this.state,\n      value: props.value,\n      focused: false,\n      valid: false,\n      error: undefined\n    };\n  }\n\n  componentDidMount() {\n    const {\n      validateOnStart\n    } = this.props;\n\n    if (validateOnStart) {\n      this.validate();\n    }\n  }\n  /** Events */\n\n\n  onFocus = (...args) => {\n    _.invoke(this.props, 'onFocus', ...args);\n\n    this.setState({\n      focused: true\n    });\n  };\n  onBlur = (...args) => {\n    _.invoke(this.props, 'onBlur', ...args);\n\n    this.setState({\n      focused: false\n    });\n    const {\n      validateOnBlur\n    } = this.props;\n\n    if (validateOnBlur) {\n      this.validate();\n    }\n  };\n  onChange = event => {\n    _.invoke(this.props, 'onChange', event);\n  };\n  onChangeText = text => {\n    _.invoke(this.props, 'onChangeText', text);\n\n    this.setState({\n      value: text\n    });\n    const {\n      validateOnChange\n    } = this.props;\n\n    if (validateOnChange) {\n      setImmediate(this.validate);\n    }\n  };\n  /** Actions */\n\n  getTypography() {\n    return this.extractTypographyValue() || Typography.text70;\n  }\n\n  hasText() {\n    const {\n      value\n    } = this.state;\n    return value && value.length > 0;\n  }\n\n  isFocused() {\n    return this.input.isFocused();\n  }\n\n  focus() {\n    this.input.focus();\n  }\n\n  blur() {\n    this.input.blur();\n  }\n\n  clear() {\n    this.input.clear();\n  }\n\n  validate = (value = _.get(this, 'state.value'), dryRun) => {\n    // 'input.state.value'\n    const {\n      validate\n    } = this.props;\n\n    if (!validate) {\n      return;\n    }\n\n    let isValid = true;\n    const inputValidators = _.isArray(validate) ? validate : [validate];\n    let failingValidatorIndex; // get validators\n\n    for (let index = 0; index < inputValidators.length; index++) {\n      const validator = inputValidators[index];\n      let validatorFunction;\n\n      if (_.isFunction(validator)) {\n        validatorFunction = validator;\n      } else if (_.isString(validator) && !!Validators[validator]) {\n        validatorFunction = Validators[validator];\n      } // validate\n\n\n      if (validatorFunction && !validatorFunction(value)) {\n        isValid = false;\n        failingValidatorIndex = index;\n        break;\n      }\n    } // get error message\n\n\n    let error;\n\n    if (!isValid) {\n      const {\n        errorMessage\n      } = this.props;\n\n      if (_.isArray(errorMessage)) {\n        error = errorMessage[failingValidatorIndex];\n      } else {\n        error = errorMessage;\n      }\n    } else {\n      error = undefined;\n    }\n\n    if (!dryRun) {\n      // invoke caller's implementation\n      if (this.state.valid !== isValid) {\n        _.invoke(this.props, 'onChangeValidity', isValid);\n      } // set values\n\n\n      this.setState({\n        error,\n        valid: isValid\n      });\n    }\n\n    return isValid;\n  };\n\n  isRequiredField() {\n    const {\n      validate\n    } = this.props;\n\n    if (_.isArray(validate)) {\n      return validate.indexOf(VALIDATORS.REQUIRED) !== -1;\n    }\n\n    return validate === VALIDATORS.REQUIRED;\n  }\n\n  getRequiredPlaceholder(placeholder) {\n    const {\n      markRequired\n    } = this.getThemeProps();\n    const shouldDisplayPlaceholderAsRequired = this.isRequiredField() && markRequired && placeholder;\n\n    if (shouldDisplayPlaceholderAsRequired) {\n      return `${placeholder} *`;\n    }\n\n    return placeholder;\n  }\n\n  getErrorMessage() {\n    const {\n      error: propsError\n    } = this.props;\n    const {\n      error: stateError\n    } = this.state;\n    return propsError || stateError;\n  }\n\n  getColor(value) {\n    if (this.state.focused) {\n      return Colors.grey10;\n    } else {\n      return _.isEmpty(value) ? Colors.grey40 : Colors.grey10;\n    }\n  }\n\n  toggleExpandableModal(...args) {\n    // @ts-expect-error\n    return this.input.toggleExpandableModal(...args);\n  }\n\n}"]},"metadata":{},"sourceType":"module"}