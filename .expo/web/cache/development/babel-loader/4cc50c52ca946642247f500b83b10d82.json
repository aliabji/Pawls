{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text } from \"../components/Themed\";\nimport { createDog } from \"../utils/apiService\";\nimport { ActionResponseBlock } from \"./ActionResponseBlock\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function AddDog() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      age = _useState4[0],\n      setAge = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      breed = _useState6[0],\n      setBreed = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      responseMessage = _useState8[0],\n      setResponseMessage = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showResponseBlock = _useState10[0],\n      setShowResponseBlock = _useState10[1];\n\n  var submit = function submit() {\n    var creds;\n    return _regeneratorRuntime.async(function submit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            creds = {\n              dog: {\n                name: name,\n                breed: breed,\n                age: age\n              }\n            };\n\n            try {\n              createDog(creds).then(function (res) {\n                console.log(res);\n\n                if (res.dog) {\n                  setResponseMessage(\"Dog added successfully\");\n                } else {\n                  setResponseMessage(\"Failed to add dog\");\n                }\n\n                console.log(\"here\");\n                setShowResponseBlock(true);\n              });\n            } catch (err) {\n              console.log(\"Unrecoverable error occured \", err);\n            }\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      children: \"Tell us about your dog\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Name\",\n      autoCapitalize: \"none\",\n      placeholderTextColor: \"white\",\n      onChangeText: function onChangeText(val) {\n        return setName(val);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Age\",\n      autoCapitalize: \"none\",\n      placeholderTextColor: \"white\",\n      onChangeText: function onChangeText(val) {\n        return setAge(val);\n      }\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Breed\",\n      autoCapitalize: \"none\",\n      placeholderTextColor: \"white\",\n      onChangeText: function onChangeText(val) {\n        return setBreed(val);\n      }\n    }), _jsx(Button, {\n      title: \"Sign In\",\n      onPress: function onPress() {\n        return submit();\n      }\n    }), showResponseBlock && _jsx(ActionResponseBlock, {\n      success: true,\n      message: responseMessage\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: '#42A5F5',\n    margin: 10,\n    padding: 8,\n    color: 'white',\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/components/AddDog.tsx"],"names":["React","useState","Text","createDog","ActionResponseBlock","AddDog","name","setName","age","setAge","breed","setBreed","responseMessage","setResponseMessage","showResponseBlock","setShowResponseBlock","submit","creds","dog","then","res","console","log","err","styles","container","input","val","StyleSheet","create","width","height","backgroundColor","margin","padding","color","borderRadius","fontSize","fontWeight","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {\n  View,\n  Button,\n  TextInput,\n  StyleSheet\n} from 'react-native'\nimport { Text } from '../components/Themed';\nimport {createDog} from '../utils/apiService';\nimport {ActionResponseBlock} from './ActionResponseBlock';\n\nexport default function AddDog() {\n    const [name, setName] = useState<string>()\n    const [age, setAge] = useState<string>()\n    const [breed, setBreed] = useState<string>()\n    const [responseMessage, setResponseMessage] = useState<string>(\"\")\n    const [showResponseBlock, setShowResponseBlock] = useState<boolean>(false)\n\n  const submit = async () => {\n    const creds = {\n      dog: {\n        name, breed, age\n      }\n    }\n    try {\n        createDog(creds).then((res) => {\n            console.log(res)\n            if (res.dog) {\n                setResponseMessage(\"Dog added successfully\")\n            } else {\n                setResponseMessage(\"Failed to add dog\")\n            }\n            console.log(\"here\")\n            setShowResponseBlock(true)\n        })\n    } catch (err) {\n      console.log(\"Unrecoverable error occured \", err)\n    }\n  }\n \nreturn (\n    <View style={styles.container}>\n    <Text>Tell us about your dog</Text>\n    <TextInput\n        style={styles.input}\n        placeholder='Name'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => setName(val)}\n    />\n    <TextInput\n        style={styles.input}\n        placeholder='Age'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => setAge(val)}\n    />\n    <TextInput\n        style={styles.input}\n        placeholder='Breed'\n        autoCapitalize=\"none\"\n        placeholderTextColor='white'\n        onChangeText={val => setBreed(val)}\n    />\n    <Button\n        title='Sign In'\n        onPress={() => submit()}\n    />\n    {showResponseBlock && (\n        <ActionResponseBlock success={true} message={responseMessage} />\n    )}\n    </View>\n)\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: '#42A5F5',\n    margin: 10,\n    padding: 8,\n    color: 'white',\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: '500',\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n})"]},"metadata":{},"sourceType":"module"}