{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"onScroll\", \"onContentSizeChange\", \"onLayout\", \"horizontal\", \"showStartFader\", \"startFaderProps\", \"showEndFader\", \"endFaderProps\", \"useGesture\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _pt from \"prop-types\";\nimport React, { useCallback, useImperativeHandle } from 'react';\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Fader from \"../fader\";\nimport useScrollEnabler from \"../../hooks/useScrollEnabler\";\nimport useScrollReached from \"../../hooks/useScrollReached\";\nimport { forwardRef } from \"../../commons/new\";\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FadedScrollView = function FadedScrollView(props) {\n  var _ref, _ref2;\n\n  var children = props.children,\n      propsOnScroll = props.onScroll,\n      propsOnContentSizeChange = props.onContentSizeChange,\n      propsOnLayout = props.onLayout,\n      propsHorizontal = props.horizontal,\n      showStartFader = props.showStartFader,\n      startFaderProps = props.startFaderProps,\n      showEndFader = props.showEndFader,\n      endFaderProps = props.endFaderProps,\n      useGesture = props.useGesture,\n      others = _objectWithoutProperties(props, _excluded);\n\n  var ScrollView = useGesture ? GestureScrollView : RNScrollView;\n  var scrollViewRef = React.createRef();\n  var horizontal = propsHorizontal != null ? propsHorizontal : false;\n\n  var _useScrollEnabler = useScrollEnabler({\n    horizontal: horizontal\n  }),\n      onContentSizeChange = _useScrollEnabler.onContentSizeChange,\n      onLayout = _useScrollEnabler.onLayout,\n      scrollEnabled = _useScrollEnabler.scrollEnabled;\n\n  var _useScrollReached = useScrollReached({\n    horizontal: horizontal,\n    threshold: 50\n  }),\n      onScrollReached = _useScrollReached.onScroll,\n      isScrollAtStart = _useScrollReached.isScrollAtStart,\n      isScrollAtEnd = _useScrollReached.isScrollAtEnd;\n\n  var showStart = (_ref = showStartFader && scrollEnabled && !isScrollAtStart) != null ? _ref : false;\n  var showEnd = (_ref2 = showEndFader && scrollEnabled && !isScrollAtEnd) != null ? _ref2 : false;\n  var onScroll = useCallback(function (event) {\n    onScrollReached(event);\n    propsOnScroll == null ? void 0 : propsOnScroll(event);\n  }, [onScrollReached, propsOnScroll]);\n\n  var _onContentSizeChange = useCallback(function (w, h) {\n    propsOnContentSizeChange == null ? void 0 : propsOnContentSizeChange(w, h);\n    onContentSizeChange == null ? void 0 : onContentSizeChange(w, h);\n  }, [propsOnContentSizeChange, onContentSizeChange]);\n\n  var _onLayout = useCallback(function (event) {\n    propsOnLayout == null ? void 0 : propsOnLayout(event);\n    onLayout == null ? void 0 : onLayout(event);\n  }, [propsOnLayout, onLayout]);\n\n  var isScrollEnabled = function isScrollEnabled() {\n    return scrollEnabled;\n  };\n\n  useImperativeHandle(props.forwardedRef, function () {\n    return {\n      scrollTo: function scrollTo() {\n        var _scrollViewRef$curren;\n\n        for (var _len = arguments.length, data = new Array(_len), _key = 0; _key < _len; _key++) {\n          data[_key] = arguments[_key];\n        }\n\n        return (_scrollViewRef$curren = scrollViewRef.current) == null ? void 0 : _scrollViewRef$curren.scrollTo == null ? void 0 : _scrollViewRef$curren.scrollTo.apply(_scrollViewRef$curren, data);\n      },\n      isScrollEnabled: isScrollEnabled\n    };\n  });\n\n  if (children) {\n    return _jsxs(_Fragment, {\n      children: [_jsx(ScrollView, _objectSpread(_objectSpread({\n        scrollEventThrottle: 16,\n        decelerationRate: 'fast'\n      }, others), {}, {\n        horizontal: horizontal,\n        scrollEnabled: scrollEnabled,\n        onContentSizeChange: _onContentSizeChange,\n        onLayout: _onLayout,\n        onScroll: onScroll,\n        ref: scrollViewRef,\n        children: children\n      })), _jsx(Fader, _objectSpread({\n        visible: showStart,\n        position: horizontal ? Fader.position.START : Fader.position.TOP\n      }, startFaderProps)), _jsx(Fader, _objectSpread({\n        visible: showEnd,\n        position: horizontal ? Fader.position.END : Fader.position.BOTTOM\n      }, endFaderProps))]\n    });\n  }\n\n  return null;\n};\n\nFadedScrollView.propTypes = {\n  showStartFader: _pt.bool,\n  showEndFader: _pt.bool,\n  useGesture: _pt.bool,\n  children: _pt.oneOfType([_pt.node, _pt.arrayOf(_pt.node)])\n};\nFadedScrollView.displayName = 'IGNORE';\nexport default forwardRef(FadedScrollView);","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/fadedScrollView/index.js"],"names":["_pt","React","useCallback","useImperativeHandle","Fader","useScrollEnabler","useScrollReached","forwardRef","ScrollView","GestureScrollView","FadedScrollView","props","children","propsOnScroll","onScroll","propsOnContentSizeChange","onContentSizeChange","propsOnLayout","onLayout","propsHorizontal","horizontal","showStartFader","startFaderProps","showEndFader","endFaderProps","useGesture","others","RNScrollView","scrollViewRef","createRef","scrollEnabled","threshold","onScrollReached","isScrollAtStart","isScrollAtEnd","showStart","showEnd","event","_onContentSizeChange","w","h","_onLayout","isScrollEnabled","forwardedRef","scrollTo","data","current","position","START","TOP","END","BOTTOM","propTypes","bool","oneOfType","node","arrayOf","displayName"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { useCallback, useImperativeHandle } from 'react';\nimport { ScrollView as RNScrollView } from 'react-native';\nimport Fader from \"../fader\";\nimport useScrollEnabler from \"../../hooks/useScrollEnabler\";\nimport useScrollReached from \"../../hooks/useScrollReached\";\nimport { forwardRef } from \"../../commons/new\";\nimport { ScrollView as GestureScrollView } from 'react-native-gesture-handler';\n\nconst FadedScrollView = props => {\n  const {\n    children,\n    onScroll: propsOnScroll,\n    onContentSizeChange: propsOnContentSizeChange,\n    onLayout: propsOnLayout,\n    horizontal: propsHorizontal,\n    showStartFader,\n    startFaderProps,\n    showEndFader,\n    endFaderProps,\n    useGesture,\n    ...others\n  } = props;\n  const ScrollView = useGesture ? GestureScrollView : RNScrollView;\n  const scrollViewRef = React.createRef();\n  const horizontal = propsHorizontal ?? false;\n  const {\n    onContentSizeChange,\n    onLayout,\n    scrollEnabled\n  } = useScrollEnabler({\n    horizontal\n  });\n  const {\n    onScroll: onScrollReached,\n    isScrollAtStart,\n    isScrollAtEnd\n  } = useScrollReached({\n    horizontal,\n    threshold: 50\n  });\n  const showStart = (showStartFader && scrollEnabled && !isScrollAtStart) ?? false;\n  const showEnd = (showEndFader && scrollEnabled && !isScrollAtEnd) ?? false;\n  const onScroll = useCallback(event => {\n    onScrollReached(event);\n    propsOnScroll?.(event);\n  }, [onScrollReached, propsOnScroll]);\n\n  const _onContentSizeChange = useCallback((w, h) => {\n    propsOnContentSizeChange?.(w, h);\n    onContentSizeChange?.(w, h);\n  }, [propsOnContentSizeChange, onContentSizeChange]);\n\n  const _onLayout = useCallback(event => {\n    propsOnLayout?.(event);\n    onLayout?.(event);\n  }, [propsOnLayout, onLayout]);\n\n  const isScrollEnabled = () => {\n    return scrollEnabled;\n  };\n\n  useImperativeHandle(props.forwardedRef, () => ({\n    // @ts-expect-error\n    scrollTo: (...data) => scrollViewRef.current?.scrollTo?.(...data),\n    isScrollEnabled\n  }));\n\n  if (children) {\n    return <>\n        <ScrollView scrollEventThrottle={16} decelerationRate={'fast'} {...others} horizontal={horizontal} scrollEnabled={scrollEnabled} onContentSizeChange={_onContentSizeChange} onLayout={_onLayout} onScroll={onScroll} ref={scrollViewRef}>\n          {children}\n        </ScrollView>\n        <Fader visible={showStart} position={horizontal ? Fader.position.START : Fader.position.TOP} {...startFaderProps} />\n        <Fader visible={showEnd} position={horizontal ? Fader.position.END : Fader.position.BOTTOM} {...endFaderProps} />\n      </>;\n  }\n\n  return null;\n};\n\nFadedScrollView.propTypes = {\n  /**\n     * Show a fader at the start of the scroll\n     */\n  showStartFader: _pt.bool,\n\n  /**\n     * Show a fader at the end of the scroll\n     */\n  showEndFader: _pt.bool,\n\n  /**\n     * Use the react-native-gesture-handler version, useful when using react-native-reanimated\n     */\n  useGesture: _pt.bool,\n  children: _pt.oneOfType([_pt.node, _pt.arrayOf(_pt.node)])\n};\nFadedScrollView.displayName = 'IGNORE'; // @ts-expect-error\n\nexport default forwardRef(FadedScrollView);"]},"metadata":{},"sourceType":"module"}