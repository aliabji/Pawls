{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"iconStyle\", \"labelStyle\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors, Typography } from \"../../style\";\nimport View from \"../../components/view\";\nimport Button from \"../../components/button\";\nimport Text from \"../../components/text\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar TOP_BAR_HEIGHT = Constants.isIOS ? 44 : 56;\nvar DEFAULT_BUTTON_PROPS = {\n  color: Colors.primary\n};\n\nvar TopBar = function (_Component) {\n  _inherits(TopBar, _Component);\n\n  var _super = _createSuper(TopBar);\n\n  function TopBar() {\n    _classCallCheck(this, TopBar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TopBar, [{\n    key: \"renderTopBarButton\",\n    value: function renderTopBarButton(_ref) {\n      var onPress = _ref.onPress,\n          label = _ref.label,\n          icon = _ref.icon,\n          accessibilityLabel = _ref.accessibilityLabel,\n          buttonProps = _ref.buttonProps;\n\n      if (onPress && (label || icon)) {\n        var iconStyle = buttonProps.iconStyle,\n            labelStyle = buttonProps.labelStyle,\n            otherButtonProps = _objectWithoutProperties(buttonProps, _excluded);\n\n        return _jsx(Button, _objectSpread(_objectSpread(_objectSpread({\n          link: true,\n          onPress: onPress,\n          label: label,\n          labelStyle: [styles.actionLabel, labelStyle],\n          iconSource: icon,\n          iconStyle: [styles.icon, iconStyle]\n        }, DEFAULT_BUTTON_PROPS), {}, {\n          accessibilityLabel: accessibilityLabel\n        }, otherButtonProps), {}, {\n          hitSlop: {\n            top: 10,\n            bottom: 10,\n            left: 20,\n            right: 20\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"renderDone\",\n    value: function renderDone() {\n      var _this$props = this.props,\n          doneButtonProps = _this$props.doneButtonProps,\n          doneLabel = _this$props.doneLabel,\n          doneIcon = _this$props.doneIcon,\n          onDone = _this$props.onDone;\n      return this.renderTopBarButton({\n        onPress: onDone,\n        label: doneLabel,\n        icon: doneIcon,\n        accessibilityLabel: 'Done',\n        buttonProps: doneButtonProps\n      });\n    }\n  }, {\n    key: \"renderCancel\",\n    value: function renderCancel() {\n      var _this$props2 = this.props,\n          cancelButtonProps = _this$props2.cancelButtonProps,\n          cancelLabel = _this$props2.cancelLabel,\n          cancelIcon = _this$props2.cancelIcon,\n          onCancel = _this$props2.onCancel;\n      return this.renderTopBarButton({\n        onPress: onCancel,\n        label: cancelLabel,\n        icon: cancelIcon,\n        accessibilityLabel: 'Cancel',\n        buttonProps: cancelButtonProps\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          title = _this$props3.title,\n          titleStyle = _this$props3.titleStyle,\n          includeStatusBar = _this$props3.includeStatusBar,\n          containerStyle = _this$props3.containerStyle,\n          useSafeArea = _this$props3.useSafeArea;\n      return _jsxs(View, {\n        style: containerStyle,\n        useSafeArea: useSafeArea,\n        children: [includeStatusBar && _jsx(View, {\n          style: styles.statusBar\n        }), _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(View, {\n            row: true,\n            flex: true,\n            bottom: true,\n            \"paddingL-15\": true,\n            centerV: true,\n            children: this.renderCancel()\n          }), _jsx(View, {\n            row: true,\n            \"flex-3\": true,\n            bottom: true,\n            centerH: true,\n            centerV: true,\n            children: _jsx(Text, {\n              accessible: !!title,\n              numberOfLines: 1,\n              text70: true,\n              style: [styles.title, titleStyle],\n              children: title\n            })\n          }), _jsx(View, {\n            row: true,\n            flex: true,\n            bottom: true,\n            right: true,\n            \"paddingR-15\": true,\n            centerV: true,\n            children: this.renderDone()\n          })]\n        })]\n      });\n    }\n  }]);\n\n  return TopBar;\n}(Component);\n\nTopBar.propTypes = {\n  title: _pt.string,\n  doneLabel: _pt.string,\n  onDone: _pt.func,\n  cancelLabel: _pt.string,\n  onCancel: _pt.func,\n  includeStatusBar: _pt.bool,\n  useSafeArea: _pt.bool\n};\nTopBar.displayName = 'Modal.TopBar';\nTopBar.defaultProps = {\n  doneLabel: 'Save',\n  cancelIcon: Assets.icons.x,\n  doneButtonProps: {},\n  cancelButtonProps: {},\n  includeStatusBar: Constants.isIOS\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: TOP_BAR_HEIGHT\n  },\n  statusBar: {\n    height: Constants.statusBarHeight\n  },\n  title: {\n    fontWeight: '500'\n  },\n  actionLabel: _objectSpread({}, Typography.text70),\n  icon: {\n    tintColor: Colors.grey10,\n    marginBottom: 2\n  }\n});\nexport default asBaseComponent(TopBar);","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/modal/TopBar.js"],"names":["_pt","React","Component","Constants","asBaseComponent","Assets","Colors","Typography","View","Button","Text","TOP_BAR_HEIGHT","isIOS","DEFAULT_BUTTON_PROPS","color","primary","TopBar","onPress","label","icon","accessibilityLabel","buttonProps","iconStyle","labelStyle","otherButtonProps","styles","actionLabel","top","bottom","left","right","props","doneButtonProps","doneLabel","doneIcon","onDone","renderTopBarButton","cancelButtonProps","cancelLabel","cancelIcon","onCancel","title","titleStyle","includeStatusBar","containerStyle","useSafeArea","statusBar","container","renderCancel","renderDone","propTypes","string","func","bool","displayName","defaultProps","icons","x","StyleSheet","create","flexDirection","height","statusBarHeight","fontWeight","text70","tintColor","grey10","marginBottom"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors, Typography } from \"../../style\";\nimport View from \"../../components/view\";\nimport Button from \"../../components/button\";\nimport Text from \"../../components/text\";\nconst TOP_BAR_HEIGHT = Constants.isIOS ? 44 : 56;\nconst DEFAULT_BUTTON_PROPS = {\n  color: Colors.primary\n};\n/**\n * @description: Modal.TopBar, inner component for configuring the Modal component's title, buttons and statusBar\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ModalScreen.tsx\n */\n\nclass TopBar extends Component {\n  static propTypes = {\n    /**\n       * title to display in the center of the top bar\n       */\n    title: _pt.string,\n\n    /**\n       * done action label\n       */\n    doneLabel: _pt.string,\n\n    /**\n       * done action callback\n       */\n    onDone: _pt.func,\n\n    /**\n       * cancel action label\n       */\n    cancelLabel: _pt.string,\n\n    /**\n       * cancel action callback\n       */\n    onCancel: _pt.func,\n\n    /**\n       * whether to include status bar or not (height claculations)\n       */\n    includeStatusBar: _pt.bool,\n\n    /**\n       * Whether or not to handle SafeArea\n       */\n    useSafeArea: _pt.bool\n  };\n  static displayName = 'Modal.TopBar';\n  static defaultProps = {\n    doneLabel: 'Save',\n    cancelIcon: Assets.icons.x,\n    doneButtonProps: {},\n    cancelButtonProps: {},\n    includeStatusBar: Constants.isIOS\n  };\n\n  renderTopBarButton({\n    onPress,\n    label,\n    icon,\n    accessibilityLabel,\n    buttonProps\n  }) {\n    if (onPress && (label || icon)) {\n      // @ts-ignore\n      const {\n        iconStyle,\n        labelStyle,\n        ...otherButtonProps\n      } = buttonProps;\n      return <Button link onPress={onPress} label={label} labelStyle={[styles.actionLabel, labelStyle]} iconSource={icon} iconStyle={[styles.icon, iconStyle]} {...DEFAULT_BUTTON_PROPS} accessibilityLabel={accessibilityLabel} {...otherButtonProps} hitSlop={{\n        top: 10,\n        bottom: 10,\n        left: 20,\n        right: 20\n      }} />;\n    }\n  }\n\n  renderDone() {\n    const {\n      doneButtonProps,\n      doneLabel,\n      doneIcon,\n      onDone\n    } = this.props;\n    return this.renderTopBarButton({\n      onPress: onDone,\n      label: doneLabel,\n      icon: doneIcon,\n      accessibilityLabel: 'Done',\n      buttonProps: doneButtonProps\n    });\n  }\n\n  renderCancel() {\n    const {\n      cancelButtonProps,\n      cancelLabel,\n      cancelIcon,\n      onCancel\n    } = this.props;\n    return this.renderTopBarButton({\n      onPress: onCancel,\n      label: cancelLabel,\n      icon: cancelIcon,\n      accessibilityLabel: 'Cancel',\n      buttonProps: cancelButtonProps\n    });\n  }\n\n  render() {\n    const {\n      title,\n      titleStyle,\n      includeStatusBar,\n      containerStyle,\n      useSafeArea\n    } = this.props;\n    return <View style={containerStyle} useSafeArea={useSafeArea}>\n        {includeStatusBar && <View style={styles.statusBar} />}\n        <View style={styles.container}>\n          <View row flex bottom paddingL-15 centerV>\n            {this.renderCancel()}\n          </View>\n          <View row flex-3 bottom centerH centerV>\n            <Text accessible={!!title} numberOfLines={1} text70 style={[styles.title, titleStyle]}>\n              {title}\n            </Text>\n          </View>\n          <View row flex bottom right paddingR-15 centerV>\n            {this.renderDone()}\n          </View>\n        </View>\n      </View>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: TOP_BAR_HEIGHT\n  },\n  statusBar: {\n    height: Constants.statusBarHeight\n  },\n  title: {\n    fontWeight: '500'\n  },\n  actionLabel: { ...Typography.text70\n  },\n  icon: {\n    // width: 16,\n    // height: 16,\n    tintColor: Colors.grey10,\n    marginBottom: 2\n  }\n});\nexport default asBaseComponent(TopBar);"]},"metadata":{},"sourceType":"module"}