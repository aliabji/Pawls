{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport RadioGroupContext from \"./RadioGroupContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function asRadioGroupChild(WrappedComponent) {\n  var RadioGroupChild = function (_Component) {\n    _inherits(RadioGroupChild, _Component);\n\n    var _super = _createSuper(RadioGroupChild);\n\n    function RadioGroupChild() {\n      _classCallCheck(this, RadioGroupChild);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(RadioGroupChild, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        var _this$props = this.props,\n            buttonValue = _this$props.value,\n            selected = _this$props.selected;\n        return _jsx(RadioGroupContext.Consumer, {\n          children: function children(_ref) {\n            var value = _ref.value,\n                onValueChange = _ref.onValueChange;\n            return _jsx(WrappedComponent, _objectSpread(_objectSpread({}, _this.props), {}, {\n              selectedValue: value,\n              selected: buttonValue !== undefined ? value === buttonValue : selected,\n              onValueChange: onValueChange\n            }));\n          }\n        });\n      }\n    }]);\n\n    return RadioGroupChild;\n  }(Component);\n\n  RadioGroupChild.propTypes = {\n    value: _pt.oneOfType([_pt.string, _pt.number, _pt.bool]),\n    selected: _pt.bool\n  };\n  hoistStatics(RadioGroupChild, WrappedComponent);\n  RadioGroupChild.displayName = WrappedComponent.displayName;\n  return RadioGroupChild;\n}","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/radioGroup/asRadioGroupChild.js"],"names":["_pt","React","Component","hoistStatics","RadioGroupContext","asRadioGroupChild","WrappedComponent","RadioGroupChild","props","buttonValue","value","selected","onValueChange","undefined","propTypes","oneOfType","string","number","bool","displayName"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,iBAAP;;AACA,eAAe,SAASC,iBAAT,CAA2BC,gBAA3B,EAA6C;AAAA,MACpDC,eADoD;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,aAcxD,kBAAS;AAAA;;AACP,0BAGI,KAAKC,KAHT;AAAA,YACSC,WADT,eACEC,KADF;AAAA,YAEEC,QAFF,eAEEA,QAFF;AAIA,eAAO,KAAC,iBAAD,CAAmB,QAAnB;AAAA,oBACF;AAAA,gBACDD,KADC,QACDA,KADC;AAAA,gBAEDE,aAFC,QAEDA,aAFC;AAAA,mBAGG,KAAC,gBAAD,kCAAsB,KAAI,CAACJ,KAA3B;AAAkC,cAAA,aAAa,EAAEE,KAAjD;AAAwD,cAAA,QAAQ,EAAED,WAAW,KAAKI,SAAhB,GAA4BH,KAAK,KAAKD,WAAtC,GAAoDE,QAAtH;AAAgI,cAAA,aAAa,EAAEC;AAA/I,eAHH;AAAA;AADE,UAAP;AAMD;AAzBuD;;AAAA;AAAA,IAC5BV,SAD4B;;AACpDK,EAAAA,eADoD,CAEjDO,SAFiD,GAErC;AAIjBJ,IAAAA,KAAK,EAAEV,GAAG,CAACe,SAAJ,CAAc,CAACf,GAAG,CAACgB,MAAL,EAAahB,GAAG,CAACiB,MAAjB,EAAyBjB,GAAG,CAACkB,IAA7B,CAAd,CAJU;AASjBP,IAAAA,QAAQ,EAAEX,GAAG,CAACkB;AATG,GAFqC;AA6B1Df,EAAAA,YAAY,CAACI,eAAD,EAAkBD,gBAAlB,CAAZ;AACAC,EAAAA,eAAe,CAACY,WAAhB,GAA8Bb,gBAAgB,CAACa,WAA/C;AACA,SAAOZ,eAAP;AACD","sourcesContent":["import _pt from \"prop-types\";\nimport React, { Component } from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport RadioGroupContext from \"./RadioGroupContext\";\nexport default function asRadioGroupChild(WrappedComponent) {\n  class RadioGroupChild extends Component {\n    static propTypes = {\n      /**\n         * The identifier value of the radio button. must be different than other RadioButtons in the same group\n         */\n      value: _pt.oneOfType([_pt.string, _pt.number, _pt.bool]),\n\n      /**\n         * When using RadioButton without a RadioGroup, use this prop to toggle selection\n         */\n      selected: _pt.bool\n    };\n\n    render() {\n      const {\n        value: buttonValue,\n        selected\n      } = this.props;\n      return <RadioGroupContext.Consumer>\n          {({\n          value,\n          onValueChange\n        }) => <WrappedComponent {...this.props} selectedValue={value} selected={buttonValue !== undefined ? value === buttonValue : selected} onValueChange={onValueChange} />}\n        </RadioGroupContext.Consumer>;\n    }\n\n  }\n\n  hoistStatics(RadioGroupChild, WrappedComponent);\n  RadioGroupChild.displayName = WrappedComponent.displayName;\n  return RadioGroupChild;\n}"]},"metadata":{},"sourceType":"module"}