{"ast":null,"code":"import _ from 'lodash';\nimport React from 'react';\nimport useMiddleIndex from \"./helpers/useListMiddleIndex\";\n\nvar usePresenter = function usePresenter(_ref) {\n  var _ref$initialValue = _ref.initialValue,\n      initialValue = _ref$initialValue === void 0 ? 0 : _ref$initialValue,\n      children = _ref.children,\n      propItems = _ref.items,\n      itemHeight = _ref.itemHeight,\n      preferredNumVisibleRows = _ref.preferredNumVisibleRows;\n\n  var extractItemsFromChildren = function extractItemsFromChildren() {\n    var items = React.Children.map(children, function (child) {\n      var childAsType = {\n        value: child == null ? void 0 : child.props.value,\n        label: child == null ? void 0 : child.props.label\n      };\n      return childAsType;\n    });\n    return items || [];\n  };\n\n  var items = children ? extractItemsFromChildren() : propItems || [];\n  var middleIndex = useMiddleIndex({\n    itemHeight: itemHeight,\n    listSize: items.length\n  });\n\n  var getSelectedValueIndex = function getSelectedValueIndex() {\n    if (_.isString(initialValue) || _.isNumber(initialValue)) {\n      return _.findIndex(items, {\n        value: initialValue\n      });\n    }\n\n    return _.findIndex(items, {\n      value: initialValue == null ? void 0 : initialValue.value\n    });\n  };\n\n  var getRowItemAtOffset = function getRowItemAtOffset(offset) {\n    var index = middleIndex(offset);\n    var value = items[index].value;\n    return {\n      index: index,\n      value: value\n    };\n  };\n\n  return {\n    index: getSelectedValueIndex(),\n    items: items,\n    height: itemHeight * preferredNumVisibleRows,\n    getRowItemAtOffset: getRowItemAtOffset\n  };\n};\n\nexport default usePresenter;","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/WheelPicker/usePresenter.js"],"names":["_","React","useMiddleIndex","usePresenter","initialValue","children","propItems","items","itemHeight","preferredNumVisibleRows","extractItemsFromChildren","Children","map","child","childAsType","value","props","label","middleIndex","listSize","length","getSelectedValueIndex","isString","isNumber","findIndex","getRowItemAtOffset","offset","index","height"],"mappings":"AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAMf;AAAA,+BALJC,YAKI;AAAA,MALJA,YAKI,kCALW,CAKX;AAAA,MAJJC,QAII,QAJJA,QAII;AAAA,MAHGC,SAGH,QAHJC,KAGI;AAAA,MAFJC,UAEI,QAFJA,UAEI;AAAA,MADJC,uBACI,QADJA,uBACI;;AACJ,MAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,QAAMH,KAAK,GAAGN,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmBP,QAAnB,EAA6B,UAAAQ,KAAK,EAAI;AAClD,UAAMC,WAAW,GAAG;AAClBC,QAAAA,KAAK,EAAEF,KAAF,oBAAEA,KAAK,CAAEG,KAAP,CAAaD,KADF;AAElBE,QAAAA,KAAK,EAAEJ,KAAF,oBAAEA,KAAK,CAAEG,KAAP,CAAaC;AAFF,OAApB;AAIA,aAAOH,WAAP;AACD,KANa,CAAd;AAOA,WAAOP,KAAK,IAAI,EAAhB;AACD,GATD;;AAWA,MAAMA,KAAK,GAAGF,QAAQ,GAAGK,wBAAwB,EAA3B,GAAgCJ,SAAS,IAAI,EAAnE;AACA,MAAMY,WAAW,GAAGhB,cAAc,CAAC;AACjCM,IAAAA,UAAU,EAAVA,UADiC;AAEjCW,IAAAA,QAAQ,EAAEZ,KAAK,CAACa;AAFiB,GAAD,CAAlC;;AAKA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAIrB,CAAC,CAACsB,QAAF,CAAWlB,YAAX,KAA4BJ,CAAC,CAACuB,QAAF,CAAWnB,YAAX,CAAhC,EAA0D;AACxD,aAAOJ,CAAC,CAACwB,SAAF,CAAYjB,KAAZ,EAAmB;AACxBQ,QAAAA,KAAK,EAAEX;AADiB,OAAnB,CAAP;AAGD;;AAED,WAAOJ,CAAC,CAACwB,SAAF,CAAYjB,KAAZ,EAAmB;AACxBQ,MAAAA,KAAK,EAAEX,YAAF,oBAAEA,YAAY,CAAEW;AADG,KAAnB,CAAP;AAGD,GAVD;;AAYA,MAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,MAAM,EAAI;AACnC,QAAMC,KAAK,GAAGT,WAAW,CAACQ,MAAD,CAAzB;AACA,QAAMX,KAAK,GAAGR,KAAK,CAACoB,KAAD,CAAL,CAAaZ,KAA3B;AACA,WAAO;AACLY,MAAAA,KAAK,EAALA,KADK;AAELZ,MAAAA,KAAK,EAALA;AAFK,KAAP;AAID,GAPD;;AASA,SAAO;AACLY,IAAAA,KAAK,EAAEN,qBAAqB,EADvB;AAELd,IAAAA,KAAK,EAALA,KAFK;AAGLqB,IAAAA,MAAM,EAAEpB,UAAU,GAAGC,uBAHhB;AAILgB,IAAAA,kBAAkB,EAAlBA;AAJK,GAAP;AAMD,CAnDD;;AAqDA,eAAetB,YAAf","sourcesContent":["import _ from 'lodash';\nimport React from 'react';\nimport useMiddleIndex from \"./helpers/useListMiddleIndex\";\n\nconst usePresenter = ({\n  initialValue = 0,\n  children,\n  items: propItems,\n  itemHeight,\n  preferredNumVisibleRows\n}) => {\n  const extractItemsFromChildren = () => {\n    const items = React.Children.map(children, child => {\n      const childAsType = {\n        value: child?.props.value,\n        label: child?.props.label\n      };\n      return childAsType;\n    });\n    return items || [];\n  };\n\n  const items = children ? extractItemsFromChildren() : propItems || [];\n  const middleIndex = useMiddleIndex({\n    itemHeight,\n    listSize: items.length\n  });\n\n  const getSelectedValueIndex = () => {\n    if (_.isString(initialValue) || _.isNumber(initialValue)) {\n      return _.findIndex(items, {\n        value: initialValue\n      });\n    }\n\n    return _.findIndex(items, {\n      value: initialValue?.value\n    });\n  };\n\n  const getRowItemAtOffset = offset => {\n    const index = middleIndex(offset);\n    const value = items[index].value;\n    return {\n      index,\n      value\n    };\n  };\n\n  return {\n    index: getSelectedValueIndex(),\n    items,\n    height: itemHeight * preferredNumVisibleRows,\n    getRowItemAtOffset\n  };\n};\n\nexport default usePresenter;"]},"metadata":{},"sourceType":"module"}