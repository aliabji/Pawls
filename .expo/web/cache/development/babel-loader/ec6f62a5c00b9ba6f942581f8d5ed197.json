{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport RadioGroupContext from \"./RadioGroupContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar RadioGroup = function (_PureComponent) {\n  _inherits(RadioGroup, _PureComponent);\n\n  var _super = _createSuper(RadioGroup);\n\n  function RadioGroup(props) {\n    var _this;\n\n    _classCallCheck(this, RadioGroup);\n\n    _this = _super.call(this, props);\n\n    _this.onValueChange = function (value) {\n      _this.setState({\n        value: value\n      });\n\n      _this.props.onValueChange == null ? void 0 : _this.props.onValueChange(value);\n    };\n\n    _this.state = {\n      initialValue: props.initialValue,\n      value: props.initialValue\n    };\n    return _this;\n  }\n\n  _createClass(RadioGroup, [{\n    key: \"getContextProviderValue\",\n    value: function getContextProviderValue() {\n      var value = this.state.value;\n      return {\n        value: value,\n        onValueChange: this.onValueChange\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, _objectSpread(_objectSpread({}, this.props), {}, {\n        children: _jsx(RadioGroupContext.Provider, {\n          value: this.getContextProviderValue(),\n          children: this.props.children\n        })\n      }));\n    }\n  }]);\n\n  return RadioGroup;\n}(PureComponent);\n\nRadioGroup.propTypes = {\n  initialValue: _pt.oneOfType([_pt.string, _pt.number, _pt.bool]),\n  onValueChange: _pt.oneOfType([_pt.func, _pt.func, _pt.func, _pt.func])\n};\nRadioGroup.displayName = 'RadioGroup';\n\nRadioGroup.getDerivedStateFromProps = function (props, state) {\n  if (state.initialValue !== props.initialValue) {\n    return {\n      initialValue: props.initialValue,\n      value: props.initialValue\n    };\n  }\n\n  return null;\n};\n\nexport { RadioGroup };\nexport default asBaseComponent(forwardRef(RadioGroup));","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/radioGroup/index.js"],"names":["_pt","React","PureComponent","asBaseComponent","forwardRef","View","RadioGroupContext","RadioGroup","props","onValueChange","value","setState","state","initialValue","getContextProviderValue","children","propTypes","oneOfType","string","number","bool","func","displayName","getDerivedStateFromProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,eAAT,EAA0BC,UAA1B;AACA,OAAOC,IAAP;AACA,OAAOC,iBAAP;;;IAQMC,U;;;;;AAcJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UA6BnBC,aA7BmB,GA6BH,UAAAC,KAAK,EAAI;AACvB,YAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAALA;AADY,OAAd;;AAGA,YAAKF,KAAL,CAAWC,aAAX,0BAAKD,KAAL,CAAWC,aAAX,CAA2BC,KAA3B;AACD,KAlCkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAEL,KAAK,CAACK,YADT;AAEXH,MAAAA,KAAK,EAAEF,KAAK,CAACK;AAFF,KAAb;AAFiB;AAMlB;;;;WAaD,mCAA0B;AACxB,UACEH,KADF,GAEI,KAAKE,KAFT,CACEF,KADF;AAGA,aAAO;AACLA,QAAAA,KAAK,EAALA,KADK;AAELD,QAAAA,aAAa,EAAE,KAAKA;AAFf,OAAP;AAID;;;WASD,kBAAS;AACP,aAAO,KAAC,IAAD,kCAAU,KAAKD,KAAf;AAAA,kBACH,KAAC,iBAAD,CAAmB,QAAnB;AAA4B,UAAA,KAAK,EAAE,KAAKM,uBAAL,EAAnC;AAAA,oBACG,KAAKN,KAAL,CAAWO;AADd;AADG,SAAP;AAKD;;;;EAxDsBb,a;;AAAnBK,U,CACGS,S,GAAY;AAIjBH,EAAAA,YAAY,EAAEb,GAAG,CAACiB,SAAJ,CAAc,CAACjB,GAAG,CAACkB,MAAL,EAAalB,GAAG,CAACmB,MAAjB,EAAyBnB,GAAG,CAACoB,IAA7B,CAAd,CAJG;AASjBX,EAAAA,aAAa,EAAET,GAAG,CAACiB,SAAJ,CAAc,CAACjB,GAAG,CAACqB,IAAL,EAAWrB,GAAG,CAACqB,IAAf,EAAqBrB,GAAG,CAACqB,IAAzB,EAA+BrB,GAAG,CAACqB,IAAnC,CAAd;AATE,C;AADfd,U,CAYGe,W,GAAc,Y;;AAZjBf,U,CAsBGgB,wB,GAA2B,UAACf,KAAD,EAAQI,KAAR,EAAkB;AAClD,MAAIA,KAAK,CAACC,YAAN,KAAuBL,KAAK,CAACK,YAAjC,EAA+C;AAC7C,WAAO;AACLA,MAAAA,YAAY,EAAEL,KAAK,CAACK,YADf;AAELH,MAAAA,KAAK,EAAEF,KAAK,CAACK;AAFR,KAAP;AAID;;AAED,SAAO,IAAP;AACD,C;;AA6BH,SAASN,UAAT;AAEA,eAAeJ,eAAe,CAACC,UAAU,CAACG,UAAD,CAAX,CAA9B","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport View from \"../view\";\nimport RadioGroupContext from \"./RadioGroupContext\";\n\n/**\n * @description: Wrap a group of Radio Buttons to automatically control their selection\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/RadioButton/Default.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/RadioButton/Alignment.gif?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/RadioButton/Custom.gif?raw=true\n * @image: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/RadioButton/Individual.png?raw=true\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/RadioButtonScreen.js\n */\nclass RadioGroup extends PureComponent {\n  static propTypes = {\n    /**\n       * The initial value of the selected radio button\n       */\n    initialValue: _pt.oneOfType([_pt.string, _pt.number, _pt.bool]),\n\n    /**\n       * Invoked once when value changes, by selecting one of the radio buttons in the group\n       */\n    onValueChange: _pt.oneOfType([_pt.func, _pt.func, _pt.func, _pt.func])\n  };\n  static displayName = 'RadioGroup';\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialValue: props.initialValue,\n      value: props.initialValue\n    };\n  }\n\n  static getDerivedStateFromProps = (props, state) => {\n    if (state.initialValue !== props.initialValue) {\n      return {\n        initialValue: props.initialValue,\n        value: props.initialValue\n      };\n    }\n\n    return null;\n  };\n\n  getContextProviderValue() {\n    const {\n      value\n    } = this.state;\n    return {\n      value,\n      onValueChange: this.onValueChange\n    };\n  }\n\n  onValueChange = value => {\n    this.setState({\n      value\n    });\n    this.props.onValueChange?.(value);\n  };\n\n  render() {\n    return <View {...this.props}>\n        <RadioGroupContext.Provider value={this.getContextProviderValue()}>\n          {this.props.children}\n        </RadioGroupContext.Provider>\n      </View>;\n  }\n\n}\n\nexport { RadioGroup }; // For tests\n\nexport default asBaseComponent(forwardRef(RadioGroup));"]},"metadata":{},"sourceType":"module"}