{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _pt from \"prop-types\";\nimport React from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { useDidUpdate } from \"../../hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction ExpandableSection(props) {\n  var expanded = props.expanded,\n      sectionHeader = props.sectionHeader,\n      children = props.children,\n      top = props.top;\n\n  var animate = function animate() {\n    LayoutAnimation.configureNext(_objectSpread(_objectSpread({}, LayoutAnimation.Presets.easeInEaseOut), {}, {\n      duration: 300\n    }));\n  };\n\n  var onPress = function onPress() {\n    props.onPress == null ? void 0 : props.onPress();\n    animate();\n  };\n\n  useDidUpdate(function () {\n    animate();\n  }, [expanded]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [top && expanded && children, _jsx(TouchableOpacity, {\n      onPress: onPress,\n      children: sectionHeader\n    }), !top && expanded && children]\n  });\n}\n\nExpandableSection.propTypes = {\n  sectionHeader: _pt.element,\n  children: _pt.node,\n  expanded: _pt.bool,\n  top: _pt.bool,\n  onPress: _pt.func\n};\nexport default ExpandableSection;\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/expandableSection/index.js"],"names":["_pt","React","View","TouchableOpacity","useDidUpdate","ExpandableSection","props","expanded","sectionHeader","children","top","animate","LayoutAnimation","configureNext","Presets","easeInEaseOut","duration","onPress","styles","container","propTypes","element","node","bool","func","StyleSheet","create","overflow"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,IAAP;AACA,OAAOC,gBAAP;AACA,SAASC,YAAT;;;;AAOA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,MACEC,QADF,GAKID,KALJ,CACEC,QADF;AAAA,MAEEC,aAFF,GAKIF,KALJ,CAEEE,aAFF;AAAA,MAGEC,QAHF,GAKIH,KALJ,CAGEG,QAHF;AAAA,MAIEC,GAJF,GAKIJ,KALJ,CAIEI,GAJF;;AAWA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBC,IAAAA,eAAe,CAACC,aAAhB,iCAAmCD,eAAe,CAACE,OAAhB,CAAwBC,aAA3D;AACEC,MAAAA,QAAQ,EAAE;AADZ;AAGD,GAJD;;AAMA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBX,IAAAA,KAAK,CAACW,OAAN,oBAAAX,KAAK,CAACW,OAAN;AACAN,IAAAA,OAAO;AACR,GAHD;;AAKAP,EAAAA,YAAY,CAAC,YAAM;AACjBO,IAAAA,OAAO;AACR,GAFW,EAET,CAACJ,QAAD,CAFS,CAAZ;AAGA,SAAO,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACC,SAApB;AAAA,eACFT,GAAG,IAAIH,QAAP,IAAmBE,QADjB,EAEH,KAAC,gBAAD;AAAkB,MAAA,OAAO,EAAEQ,OAA3B;AAAA,gBAAqCT;AAArC,MAFG,EAGF,CAACE,GAAD,IAAQH,QAAR,IAAoBE,QAHlB;AAAA,IAAP;AAKD;;AAEDJ,iBAAiB,CAACe,SAAlB,GAA8B;AAI5BZ,EAAAA,aAAa,EAAER,GAAG,CAACqB,OAJS;AAS5BZ,EAAAA,QAAQ,EAAET,GAAG,CAACsB,IATc;AAc5Bf,EAAAA,QAAQ,EAAEP,GAAG,CAACuB,IAdc;AAmB5Bb,EAAAA,GAAG,EAAEV,GAAG,CAACuB,IAnBmB;AAwB5BN,EAAAA,OAAO,EAAEjB,GAAG,CAACwB;AAxBe,CAA9B;AA0BA,eAAenB,iBAAf;AACA,IAAMa,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,QAAQ,EAAE;AADD;AADoB,CAAlB,CAAf","sourcesContent":["import _pt from \"prop-types\";\nimport React from 'react';\nimport { LayoutAnimation, StyleSheet } from 'react-native';\nimport View from \"../view\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport { useDidUpdate } from \"../../hooks\";\n\n/**\n * @description: ExpandableSection component to render expanded section below or above the sectionHeader\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ExpandableSectionScreen.tsx\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ExpandableSection/ExpandableSection.gif?raw=true\n */\nfunction ExpandableSection(props) {\n  const {\n    expanded,\n    sectionHeader,\n    children,\n    top\n  } = props;\n  /**\n   * TODO: move to reanimated LayoutAnimation after updating to version 2.3.0\n   * after migration, trigger the animation only in useDidUpdate.\n   */\n\n  const animate = () => {\n    LayoutAnimation.configureNext({ ...LayoutAnimation.Presets.easeInEaseOut,\n      duration: 300\n    });\n  };\n\n  const onPress = () => {\n    props.onPress?.();\n    animate();\n  };\n\n  useDidUpdate(() => {\n    animate();\n  }, [expanded]);\n  return <View style={styles.container}>\n      {top && expanded && children}\n      <TouchableOpacity onPress={onPress}>{sectionHeader}</TouchableOpacity>\n      {!top && expanded && children}\n    </View>;\n}\n\nExpandableSection.propTypes = {\n  /**\n     * expandableSection header element\n     */\n  sectionHeader: _pt.element,\n\n  /**\n     * expandableSection expandable children\n     */\n  children: _pt.node,\n\n  /**\n     * should the expandableSection be expanded\n     */\n  expanded: _pt.bool,\n\n  /**\n     * should the expandableSection open above the sectionHeader\n     */\n  top: _pt.bool,\n\n  /**\n     * action for when pressing the header of the expandableSection\n     */\n  onPress: _pt.func\n};\nexport default ExpandableSection;\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  }\n});"]},"metadata":{},"sourceType":"module"}