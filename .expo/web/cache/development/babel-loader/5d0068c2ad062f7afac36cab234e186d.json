{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"modifiers\", \"style\", \"center\", \"uppercase\", \"underline\", \"children\", \"forwardedRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport _ from 'lodash';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport { TextUtils } from \"../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Text = function (_PureComponent) {\n  _inherits(Text, _PureComponent);\n\n  var _super = _createSuper(Text);\n\n  function Text() {\n    var _this;\n\n    _classCallCheck(this, Text);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.TextContainer = _this.props.animated ? Animated.createAnimatedComponent(RNText) : RNText;\n    return _this;\n  }\n\n  _createClass(Text, [{\n    key: \"renderText\",\n    value: function renderText(children) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          highlightString = _this$props.highlightString,\n          highlightStyle = _this$props.highlightStyle;\n\n      if (!_.isEmpty(highlightString)) {\n        if (_.isArray(children)) {\n          return _.map(children, function (child) {\n            return _this2.renderText(child);\n          });\n        }\n\n        if (_.isString(children)) {\n          var textParts = highlightString && TextUtils.getPartsByHighlight(children, highlightString);\n          return textParts && _.map(textParts, function (text, index) {\n            return _jsx(RNText, {\n              style: text.shouldHighlight ? [styles.highlight, highlightStyle] : styles.notHighlight,\n              children: text.string\n            }, index);\n          });\n        }\n      }\n\n      return children;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          modifiers = _this$props2.modifiers,\n          style = _this$props2.style,\n          center = _this$props2.center,\n          uppercase = _this$props2.uppercase,\n          underline = _this$props2.underline,\n          children = _this$props2.children,\n          forwardedRef = _this$props2.forwardedRef,\n          others = _objectWithoutProperties(_this$props2, _excluded);\n\n      var color = this.props.color || modifiers.color;\n      var margins = modifiers.margins,\n          typography = modifiers.typography,\n          backgroundColor = modifiers.backgroundColor,\n          flexStyle = modifiers.flexStyle;\n      var textStyle = [styles.container, typography, color && {\n        color: color\n      }, backgroundColor && {\n        backgroundColor: backgroundColor\n      }, flexStyle, margins, center && styles.centered, uppercase && styles.uppercase, underline && styles.underline, style];\n      var TextContainer = this.TextContainer;\n      return _jsx(TextContainer, _objectSpread(_objectSpread({}, others), {}, {\n        style: textStyle,\n        ref: forwardedRef,\n        children: this.renderText(children)\n      }));\n    }\n  }]);\n\n  return Text;\n}(PureComponent);\n\nText.propTypes = {\n  color: _pt.string,\n  center: _pt.bool,\n  uppercase: _pt.bool,\n  underline: _pt.bool,\n  highlightString: _pt.oneOfType([_pt.string, _pt.arrayOf(_pt.string)]),\n  animated: _pt.bool,\n  textAlign: _pt.string\n};\nText.displayName = 'Text';\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    textAlign: 'left'\n  },\n  centered: {\n    textAlign: 'center'\n  },\n  uppercase: {\n    textTransform: 'uppercase'\n  },\n  underline: {\n    textDecorationLine: 'underline'\n  },\n  highlight: {\n    color: Colors.grey30\n  },\n  notHighlight: {\n    color: undefined\n  }\n});\nexport { Text };\nexport default asBaseComponent(forwardRef(Text));","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/text/index.js"],"names":["_pt","React","PureComponent","_","asBaseComponent","forwardRef","Colors","TextUtils","Text","TextContainer","props","animated","Animated","createAnimatedComponent","RNText","children","highlightString","highlightStyle","isEmpty","isArray","map","child","renderText","isString","textParts","getPartsByHighlight","text","index","shouldHighlight","styles","highlight","notHighlight","string","modifiers","style","center","uppercase","underline","forwardedRef","others","color","margins","typography","backgroundColor","flexStyle","textStyle","container","centered","propTypes","bool","oneOfType","arrayOf","textAlign","displayName","StyleSheet","create","textTransform","textDecorationLine","grey30","undefined"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { Text as RNText, StyleSheet, Animated } from 'react-native';\nimport _ from 'lodash';\nimport { asBaseComponent, forwardRef } from \"../../commons/new\";\nimport { Colors } from \"../../style\";\nimport { TextUtils } from \"../../utils\";\n\n/**\n * @description: A wrapper for Text component with extra functionality like modifiers support\n * @extends: Text\n * @extendsLink: https://reactnative.dev/docs/text\n * @modifiers: margins, color, typography\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextScreen.js\n * @image: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Text/Modifiers.png?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Text/Transformation.png?raw=true, https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/Text/Highlights.png?raw=true\n */\nclass Text extends PureComponent {\n  static propTypes = {\n    /**\n         * color of the text\n         */\n    color: _pt.string,\n\n    /**\n         * Whether to center the text (using textAlign)\n         */\n    center: _pt.bool,\n\n    /**\n         * Whether to change the text to uppercase\n         */\n    uppercase: _pt.bool,\n\n    /**\n         * Whether to add an underline\n         */\n    underline: _pt.bool,\n\n    /**\n         * Substring to highlight\n         */\n    highlightString: _pt.oneOfType([_pt.string, _pt.arrayOf(_pt.string)]),\n\n    /**\n         * Use Animated.Text as a container\n         */\n    animated: _pt.bool,\n    textAlign: _pt.string\n  };\n  static displayName = 'Text';\n  TextContainer = this.props.animated ? Animated.createAnimatedComponent(RNText) : RNText; // setNativeProps(nativeProps) {\n  //   this._root.setNativeProps(nativeProps); // eslint-disable-line\n  // }\n\n  renderText(children) {\n    const {\n      highlightString,\n      highlightStyle\n    } = this.props;\n\n    if (!_.isEmpty(highlightString)) {\n      if (_.isArray(children)) {\n        return _.map(children, child => {\n          return this.renderText(child);\n        });\n      }\n\n      if (_.isString(children)) {\n        const textParts = highlightString && TextUtils.getPartsByHighlight(children, highlightString);\n        return textParts && _.map(textParts, (text, index) => {\n          return <RNText key={index} style={text.shouldHighlight ? [styles.highlight, highlightStyle] : styles.notHighlight}>\n                {text.string}\n              </RNText>;\n        });\n      }\n    }\n\n    return children;\n  }\n\n  render() {\n    const {\n      modifiers,\n      style,\n      center,\n      uppercase,\n      underline,\n      children,\n      forwardedRef,\n      ...others\n    } = this.props;\n    const color = this.props.color || modifiers.color;\n    const {\n      margins,\n      typography,\n      backgroundColor,\n      flexStyle\n    } = modifiers;\n    const textStyle = [styles.container, typography, color && {\n      color\n    }, backgroundColor && {\n      backgroundColor\n    }, flexStyle, margins, center && styles.centered, uppercase && styles.uppercase, underline && styles.underline, style];\n    const TextContainer = this.TextContainer;\n    return <TextContainer {...others} style={textStyle} ref={forwardedRef}>\n        {this.renderText(children)}\n      </TextContainer>;\n  }\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    textAlign: 'left'\n  },\n  centered: {\n    textAlign: 'center'\n  },\n  uppercase: {\n    textTransform: 'uppercase'\n  },\n  underline: {\n    textDecorationLine: 'underline'\n  },\n  highlight: {\n    color: Colors.grey30\n  },\n  notHighlight: {\n    color: undefined\n  }\n});\nexport { Text }; // For tests\n\nexport default asBaseComponent(forwardRef(Text));"]},"metadata":{},"sourceType":"module"}