{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"onPress\", \"disabled\", \"style\", \"testID\", \"animateLayout\", \"modifiers\", \"forwardedRef\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport { asBaseComponent, forwardRef, Constants } from \"../../commons/new\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\";\nimport { modifiers } from \"../../commons\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE } from \"./ButtonConstants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar extractColorValue = modifiers.extractColorValue,\n    extractTypographyValue = modifiers.extractTypographyValue;\n\nvar Button = function (_PureComponent) {\n  _inherits(Button, _PureComponent);\n\n  var _super = _createSuper(Button);\n\n  function Button(props) {\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      size: undefined\n    };\n    _this.styles = createStyles();\n\n    _this.onLayout = function (event) {\n      var height = event.nativeEvent.layout.height;\n\n      if (_this.props.round) {\n        var width = event.nativeEvent.layout.width;\n        var size = height >= width ? height : width;\n\n        _this.setState({\n          size: size\n        });\n      }\n\n      if (Constants.isAndroid && Platform.Version <= 17) {\n        _this.setState({\n          borderRadius: height / 2\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.animateLayout && !_.isEqual(prevProps, this.props)) {\n        LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n      }\n    }\n  }, {\n    key: \"isOutline\",\n    get: function get() {\n      var _this$props = this.props,\n          outline = _this$props.outline,\n          outlineColor = _this$props.outlineColor;\n      return Boolean(outline || outlineColor);\n    }\n  }, {\n    key: \"isLink\",\n    get: function get() {\n      var _this$props2 = this.props,\n          link = _this$props2.link,\n          hyperlink = _this$props2.hyperlink;\n      return link || hyperlink;\n    }\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      return !this.isOutline && !this.isLink;\n    }\n  }, {\n    key: \"isIconButton\",\n    get: function get() {\n      var _this$props3 = this.props,\n          iconSource = _this$props3.iconSource,\n          label = _this$props3.label;\n      return iconSource && !label;\n    }\n  }, {\n    key: \"getBackgroundColor\",\n    value: function getBackgroundColor() {\n      var _this$props4 = this.props,\n          themeBackgroundColor = _this$props4.backgroundColor,\n          modifiers = _this$props4.modifiers;\n      var _this$props5 = this.props,\n          disabled = _this$props5.disabled,\n          outline = _this$props5.outline,\n          disabledBackgroundColor = _this$props5.disabledBackgroundColor,\n          propsBackgroundColor = _this$props5.backgroundColor;\n      var stateBackgroundColor = modifiers.backgroundColor;\n\n      if (!outline && !this.isLink) {\n        if (disabled) {\n          return disabledBackgroundColor || Colors.$backgroundDisabled;\n        }\n\n        return propsBackgroundColor || stateBackgroundColor || themeBackgroundColor || Colors.$backgroundPrimaryHeavy;\n      }\n\n      return 'transparent';\n    }\n  }, {\n    key: \"getActiveBackgroundColor\",\n    value: function getActiveBackgroundColor() {\n      var getActiveBackgroundColor = this.props.getActiveBackgroundColor;\n\n      if (getActiveBackgroundColor) {\n        return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n      }\n    }\n  }, {\n    key: \"getLabelColor\",\n    value: function getLabelColor() {\n      var _this$props6 = this.props,\n          linkColor = _this$props6.linkColor,\n          outline = _this$props6.outline,\n          outlineColor = _this$props6.outlineColor,\n          disabled = _this$props6.disabled,\n          propsColor = _this$props6.color;\n      var isLink = this.isLink;\n      var color = Colors.$textDefaultLight;\n\n      if (isLink) {\n        color = linkColor || Colors.$textPrimary;\n      } else if (outline) {\n        color = outlineColor || Colors.$textPrimary;\n      } else if (this.isIconButton) {\n        color = undefined;\n      }\n\n      if (disabled && (isLink || outline)) {\n        return Colors.$textDisabled;\n      }\n\n      color = propsColor || extractColorValue(this.props) || color;\n      return color;\n    }\n  }, {\n    key: \"getLabelSizeStyle\",\n    value: function getLabelSizeStyle() {\n      var size = this.props.size || DEFAULT_SIZE;\n      var LABEL_STYLE_BY_SIZE = {};\n      LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = _objectSpread({}, Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.small] = _objectSpread({}, Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.medium] = _objectSpread({}, Typography.text80);\n      LABEL_STYLE_BY_SIZE[Button.sizes.large] = {};\n      var labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n      return labelSizeStyle;\n    }\n  }, {\n    key: \"getContainerSizeStyle\",\n    value: function getContainerSizeStyle() {\n      var _this$props7 = this.props,\n          outline = _this$props7.outline,\n          avoidMinWidth = _this$props7.avoidMinWidth,\n          avoidInnerPadding = _this$props7.avoidInnerPadding,\n          round = _this$props7.round;\n      var size = this.props.size || DEFAULT_SIZE;\n      var outlineWidth = this.props.outlineWidth || 1;\n      var CONTAINER_STYLE_BY_SIZE = {};\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.XSMALL\n      } : {\n        paddingVertical: PADDINGS.XSMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n        minWidth: MIN_WIDTH.XSMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.SMALL\n      } : {\n        paddingVertical: PADDINGS.SMALL,\n        paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n        minWidth: MIN_WIDTH.SMALL\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.MEDIUM\n      } : {\n        paddingVertical: PADDINGS.MEDIUM,\n        paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n        minWidth: MIN_WIDTH.MEDIUM\n      };\n      CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n        height: this.state.size,\n        width: this.state.size,\n        padding: PADDINGS.LARGE\n      } : {\n        paddingVertical: PADDINGS.LARGE,\n        paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n        minWidth: MIN_WIDTH.LARGE\n      };\n\n      if (outline) {\n        _.forEach(CONTAINER_STYLE_BY_SIZE, function (style) {\n          if (round) {\n            style.padding -= outlineWidth;\n          } else {\n            style.paddingVertical -= outlineWidth;\n            style.paddingHorizontal -= outlineWidth;\n          }\n        });\n      }\n\n      var containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n\n      if (this.isLink || this.isIconButton && !round) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n        containerSizeStyle.minWidth = undefined;\n      }\n\n      if (avoidMinWidth) {\n        containerSizeStyle.minWidth = undefined;\n      }\n\n      if (avoidInnerPadding) {\n        containerSizeStyle.paddingVertical = undefined;\n        containerSizeStyle.paddingHorizontal = undefined;\n      }\n\n      return containerSizeStyle;\n    }\n  }, {\n    key: \"getOutlineStyle\",\n    value: function getOutlineStyle() {\n      var _this$props8 = this.props,\n          outline = _this$props8.outline,\n          outlineColor = _this$props8.outlineColor,\n          outlineWidth = _this$props8.outlineWidth,\n          disabled = _this$props8.disabled;\n      var outlineStyle;\n\n      if ((outline || outlineColor) && !this.isLink) {\n        outlineStyle = {\n          borderWidth: outlineWidth || 1,\n          borderColor: outlineColor || Colors.$outlinePrimary\n        };\n\n        if (disabled) {\n          outlineStyle.borderColor = Colors.$outlineDisabled;\n        }\n      }\n\n      return outlineStyle;\n    }\n  }, {\n    key: \"getBorderRadiusStyle\",\n    value: function getBorderRadiusStyle() {\n      var _this$props9 = this.props,\n          fullWidth = _this$props9.fullWidth,\n          borderRadiusFromProps = _this$props9.borderRadius,\n          modifiers = _this$props9.modifiers;\n\n      if (this.isLink || fullWidth || borderRadiusFromProps === 0) {\n        return {\n          borderRadius: 0\n        };\n      }\n\n      var borderRadiusFromState = modifiers.borderRadius;\n      var borderRadius = borderRadiusFromProps || borderRadiusFromState || BorderRadiuses.br100;\n      return {\n        borderRadius: borderRadius\n      };\n    }\n  }, {\n    key: \"getShadowStyle\",\n    value: function getShadowStyle() {\n      var backgroundColor = this.getBackgroundColor();\n      var enableShadow = this.props.enableShadow;\n\n      if (enableShadow) {\n        return [this.styles.shadowStyle, {\n          shadowColor: backgroundColor\n        }];\n      }\n    }\n  }, {\n    key: \"getIconStyle\",\n    value: function getIconStyle() {\n      var _this$props10 = this.props,\n          disabled = _this$props10.disabled,\n          propsIconStyle = _this$props10.iconStyle,\n          iconOnRight = _this$props10.iconOnRight;\n      var size = this.props.size || DEFAULT_SIZE;\n      var iconStyle = {\n        tintColor: this.getLabelColor()\n      };\n      var marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n\n      if (!this.isIconButton) {\n        if (iconOnRight) {\n          iconStyle.marginLeft = marginSide;\n        } else {\n          iconStyle.marginRight = marginSide;\n        }\n      }\n\n      if (disabled && !this.isFilled) {\n        iconStyle.tintColor = Colors.$iconDisabled;\n      }\n\n      return [iconStyle, propsIconStyle];\n    }\n  }, {\n    key: \"getAnimationDirectionStyle\",\n    value: function getAnimationDirectionStyle() {\n      var animateTo = this.props.animateTo;\n      var style;\n\n      switch (animateTo) {\n        case 'left':\n          style = {\n            alignSelf: 'flex-start'\n          };\n          break;\n\n        case 'right':\n          style = {\n            alignSelf: 'flex-end'\n          };\n          break;\n\n        default:\n          break;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"renderIcon\",\n    value: function renderIcon() {\n      var _this$props11 = this.props,\n          iconSource = _this$props11.iconSource,\n          supportRTL = _this$props11.supportRTL,\n          testID = _this$props11.testID;\n\n      if (iconSource) {\n        var iconStyle = this.getIconStyle();\n\n        if (typeof iconSource === 'function') {\n          return iconSource(iconStyle);\n        } else {\n          return _jsx(Image, {\n            source: iconSource,\n            supportRTL: supportRTL,\n            style: iconStyle,\n            testID: testID + \".icon\"\n          });\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel() {\n      var _this$props12 = this.props,\n          label = _this$props12.label,\n          labelStyle = _this$props12.labelStyle,\n          labelProps = _this$props12.labelProps,\n          hyperlink = _this$props12.hyperlink,\n          testID = _this$props12.testID;\n      var typography = extractTypographyValue(this.props);\n      var color = this.getLabelColor();\n      var labelSizeStyle = this.getLabelSizeStyle();\n\n      if (label) {\n        return _jsx(Text, _objectSpread(_objectSpread({\n          style: [this.styles.text, !!color && {\n            color: color\n          }, labelSizeStyle, _objectSpread({}, typography), labelStyle],\n          underline: hyperlink,\n          numberOfLines: 1,\n          testID: testID + \".label\"\n        }, labelProps), {}, {\n          children: label\n        }));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props13 = this.props,\n          onPress = _this$props13.onPress,\n          disabled = _this$props13.disabled,\n          style = _this$props13.style,\n          testID = _this$props13.testID,\n          animateLayout = _this$props13.animateLayout,\n          modifiers = _this$props13.modifiers,\n          forwardedRef = _this$props13.forwardedRef,\n          others = _objectWithoutProperties(_this$props13, _excluded);\n\n      var shadowStyle = this.getShadowStyle();\n      var margins = modifiers.margins;\n      var backgroundColor = this.getBackgroundColor();\n      var outlineStyle = this.getOutlineStyle();\n      var containerSizeStyle = this.getContainerSizeStyle();\n      var borderRadiusStyle = this.getBorderRadiusStyle();\n      return _jsxs(TouchableOpacity, _objectSpread(_objectSpread({\n        row: true,\n        centerV: true,\n        style: [this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, this.isLink && this.styles.innerContainerLink, shadowStyle, margins, {\n          backgroundColor: backgroundColor\n        }, borderRadiusStyle, outlineStyle, style],\n        activeOpacity: 0.6,\n        activeBackgroundColor: this.getActiveBackgroundColor(),\n        onLayout: this.onLayout,\n        onPress: onPress,\n        disabled: disabled,\n        testID: testID\n      }, others), {}, {\n        ref: forwardedRef,\n        children: [this.props.children, this.props.iconOnRight ? this.renderLabel() : this.renderIcon(), this.props.iconOnRight ? this.renderIcon() : this.renderLabel()]\n      }));\n    }\n  }]);\n\n  return Button;\n}(PureComponent);\n\nButton.displayName = 'Button';\nButton.defaultProps = DEFAULT_PROPS;\nButton.sizes = ButtonSize;\nButton.animationDirection = ButtonAnimationDirection;\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: _objectSpread({\n      backgroundColor: 'transparent',\n      flex: 0,\n      flexDirection: 'row'\n    }, Typography.text70)\n  });\n}\n\nexport { Button };\nexport default asBaseComponent(forwardRef(Button));","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/button/index.js"],"names":["_","React","PureComponent","asBaseComponent","forwardRef","Constants","Colors","Typography","BorderRadiuses","modifiers","TouchableOpacity","Text","Image","ButtonSize","ButtonAnimationDirection","ButtonProps","DEFAULT_PROPS","PADDINGS","HORIZONTAL_PADDINGS","MIN_WIDTH","DEFAULT_SIZE","extractColorValue","extractTypographyValue","Button","props","state","size","undefined","styles","createStyles","onLayout","event","height","nativeEvent","layout","round","width","setState","isAndroid","Platform","Version","borderRadius","prevProps","animateLayout","isEqual","LayoutAnimation","configureNext","Presets","easeInEaseOut","outline","outlineColor","Boolean","link","hyperlink","isOutline","isLink","iconSource","label","themeBackgroundColor","backgroundColor","disabled","disabledBackgroundColor","propsBackgroundColor","stateBackgroundColor","$backgroundDisabled","$backgroundPrimaryHeavy","getActiveBackgroundColor","getBackgroundColor","linkColor","propsColor","color","$textDefaultLight","$textPrimary","isIconButton","$textDisabled","LABEL_STYLE_BY_SIZE","sizes","xSmall","text80","small","medium","large","labelSizeStyle","avoidMinWidth","avoidInnerPadding","outlineWidth","CONTAINER_STYLE_BY_SIZE","padding","XSMALL","paddingVertical","paddingHorizontal","minWidth","SMALL","MEDIUM","LARGE","forEach","style","containerSizeStyle","outlineStyle","borderWidth","borderColor","$outlinePrimary","$outlineDisabled","fullWidth","borderRadiusFromProps","borderRadiusFromState","br100","enableShadow","shadowStyle","shadowColor","propsIconStyle","iconStyle","iconOnRight","tintColor","getLabelColor","marginSide","includes","marginLeft","marginRight","isFilled","$iconDisabled","animateTo","alignSelf","supportRTL","testID","getIconStyle","labelStyle","labelProps","typography","getLabelSizeStyle","text","onPress","forwardedRef","others","getShadowStyle","margins","getOutlineStyle","getContainerSizeStyle","borderRadiusStyle","getBorderRadiusStyle","container","getAnimationDirectionStyle","innerContainerLink","children","renderLabel","renderIcon","displayName","defaultProps","animationDirection","StyleSheet","create","justifyContent","alignItems","br0","shadowOffset","shadowOpacity","shadowRadius","elevation","flex","flexDirection","text70"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, { PureComponent } from 'react';\nimport { Platform, StyleSheet, LayoutAnimation } from 'react-native';\nimport { asBaseComponent, forwardRef, Constants } from \"../../commons/new\";\nimport { Colors, Typography, BorderRadiuses } from \"../../style\"; // @ts-ignore need to migrate to commonsNew\n\nimport { modifiers } from \"../../commons\";\nimport TouchableOpacity from \"../touchableOpacity\";\nimport Text from \"../text\";\nimport Image from \"../image\";\nimport { ButtonSize, ButtonAnimationDirection, ButtonProps, DEFAULT_PROPS } from \"./ButtonTypes\";\nexport { ButtonSize, ButtonAnimationDirection, ButtonProps };\nimport { PADDINGS, HORIZONTAL_PADDINGS, MIN_WIDTH, DEFAULT_SIZE } from \"./ButtonConstants\";\nconst {\n  extractColorValue,\n  extractTypographyValue\n} = modifiers;\n\nclass Button extends PureComponent {\n  static displayName = 'Button';\n  static defaultProps = DEFAULT_PROPS;\n  static sizes = ButtonSize;\n  static animationDirection = ButtonAnimationDirection; // This redundant constructor for some reason fix tests :/\n  // eslint-disable-next-line\n\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    size: undefined\n  };\n  styles = createStyles();\n\n  componentDidUpdate(prevProps) {\n    if (this.props.animateLayout && !_.isEqual(prevProps, this.props)) {\n      LayoutAnimation.configureNext(LayoutAnimation.Presets.easeInEaseOut);\n    }\n  } // This method will be called more than once in case of layout change!\n\n\n  onLayout = event => {\n    const height = event.nativeEvent.layout.height;\n\n    if (this.props.round) {\n      const width = event.nativeEvent.layout.width;\n      const size = height >= width ? height : width;\n      this.setState({\n        size\n      });\n    }\n\n    if (Constants.isAndroid && Platform.Version <= 17) {\n      this.setState({\n        borderRadius: height / 2\n      });\n    }\n  };\n\n  get isOutline() {\n    const {\n      outline,\n      outlineColor\n    } = this.props;\n    return Boolean(outline || outlineColor);\n  }\n\n  get isLink() {\n    const {\n      link,\n      hyperlink\n    } = this.props;\n    return link || hyperlink;\n  }\n\n  get isFilled() {\n    return !this.isOutline && !this.isLink;\n  }\n\n  get isIconButton() {\n    const {\n      iconSource,\n      label\n    } = this.props;\n    return iconSource && !label;\n  }\n\n  getBackgroundColor() {\n    const {\n      backgroundColor: themeBackgroundColor,\n      modifiers\n    } = this.props;\n    const {\n      disabled,\n      outline,\n      disabledBackgroundColor,\n      backgroundColor: propsBackgroundColor\n    } = this.props;\n    const {\n      backgroundColor: stateBackgroundColor\n    } = modifiers;\n\n    if (!outline && !this.isLink) {\n      if (disabled) {\n        return disabledBackgroundColor || Colors.$backgroundDisabled;\n      }\n\n      return propsBackgroundColor || stateBackgroundColor || themeBackgroundColor || Colors.$backgroundPrimaryHeavy;\n    }\n\n    return 'transparent';\n  }\n\n  getActiveBackgroundColor() {\n    const {\n      getActiveBackgroundColor\n    } = this.props;\n\n    if (getActiveBackgroundColor) {\n      return getActiveBackgroundColor(this.getBackgroundColor(), this.props);\n    }\n  }\n\n  getLabelColor() {\n    const {\n      linkColor,\n      outline,\n      outlineColor,\n      disabled,\n      color: propsColor\n    } = this.props;\n    const isLink = this.isLink;\n    let color = Colors.$textDefaultLight;\n\n    if (isLink) {\n      color = linkColor || Colors.$textPrimary;\n    } else if (outline) {\n      color = outlineColor || Colors.$textPrimary;\n    } else if (this.isIconButton) {\n      color = undefined; // Colors.grey10;\n    }\n\n    if (disabled && (isLink || outline)) {\n      return Colors.$textDisabled;\n    }\n\n    color = propsColor || extractColorValue(this.props) || color;\n    return color;\n  }\n\n  getLabelSizeStyle() {\n    const size = this.props.size || DEFAULT_SIZE;\n    const LABEL_STYLE_BY_SIZE = {};\n    LABEL_STYLE_BY_SIZE[Button.sizes.xSmall] = { ...Typography.text80\n    };\n    LABEL_STYLE_BY_SIZE[Button.sizes.small] = { ...Typography.text80\n    };\n    LABEL_STYLE_BY_SIZE[Button.sizes.medium] = { ...Typography.text80\n    };\n    LABEL_STYLE_BY_SIZE[Button.sizes.large] = {};\n    const labelSizeStyle = LABEL_STYLE_BY_SIZE[size];\n    return labelSizeStyle;\n  }\n\n  getContainerSizeStyle() {\n    const {\n      outline,\n      avoidMinWidth,\n      avoidInnerPadding,\n      round\n    } = this.props;\n    const size = this.props.size || DEFAULT_SIZE;\n    const outlineWidth = this.props.outlineWidth || 1;\n    const CONTAINER_STYLE_BY_SIZE = {};\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.xSmall] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.XSMALL\n    } : {\n      paddingVertical: PADDINGS.XSMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.XSMALL,\n      minWidth: MIN_WIDTH.XSMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.small] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.SMALL\n    } : {\n      paddingVertical: PADDINGS.SMALL,\n      paddingHorizontal: HORIZONTAL_PADDINGS.SMALL,\n      minWidth: MIN_WIDTH.SMALL\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.medium] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.MEDIUM\n    } : {\n      paddingVertical: PADDINGS.MEDIUM,\n      paddingHorizontal: HORIZONTAL_PADDINGS.MEDIUM,\n      minWidth: MIN_WIDTH.MEDIUM\n    };\n    CONTAINER_STYLE_BY_SIZE[Button.sizes.large] = round ? {\n      height: this.state.size,\n      width: this.state.size,\n      padding: PADDINGS.LARGE\n    } : {\n      paddingVertical: PADDINGS.LARGE,\n      paddingHorizontal: HORIZONTAL_PADDINGS.LARGE,\n      minWidth: MIN_WIDTH.LARGE\n    };\n\n    if (outline) {\n      _.forEach(CONTAINER_STYLE_BY_SIZE, style => {\n        if (round) {\n          style.padding -= outlineWidth; // eslint-disable-line\n        } else {\n          style.paddingVertical -= outlineWidth; // eslint-disable-line\n\n          style.paddingHorizontal -= outlineWidth; // eslint-disable-line\n        }\n      });\n    }\n\n    const containerSizeStyle = CONTAINER_STYLE_BY_SIZE[size];\n\n    if (this.isLink || this.isIconButton && !round) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n      containerSizeStyle.minWidth = undefined;\n    }\n\n    if (avoidMinWidth) {\n      containerSizeStyle.minWidth = undefined;\n    }\n\n    if (avoidInnerPadding) {\n      containerSizeStyle.paddingVertical = undefined;\n      containerSizeStyle.paddingHorizontal = undefined;\n    }\n\n    return containerSizeStyle;\n  }\n\n  getOutlineStyle() {\n    const {\n      outline,\n      outlineColor,\n      outlineWidth,\n      disabled\n    } = this.props;\n    let outlineStyle;\n\n    if ((outline || outlineColor) && !this.isLink) {\n      outlineStyle = {\n        borderWidth: outlineWidth || 1,\n        borderColor: outlineColor || Colors.$outlinePrimary\n      };\n\n      if (disabled) {\n        outlineStyle.borderColor = Colors.$outlineDisabled;\n      }\n    }\n\n    return outlineStyle;\n  }\n\n  getBorderRadiusStyle() {\n    const {\n      fullWidth,\n      borderRadius: borderRadiusFromProps,\n      modifiers\n    } = this.props;\n\n    if (this.isLink || fullWidth || borderRadiusFromProps === 0) {\n      return {\n        borderRadius: 0\n      };\n    }\n\n    const {\n      borderRadius: borderRadiusFromState\n    } = modifiers;\n    const borderRadius = borderRadiusFromProps || borderRadiusFromState || BorderRadiuses.br100;\n    return {\n      borderRadius\n    };\n  }\n\n  getShadowStyle() {\n    const backgroundColor = this.getBackgroundColor();\n    const {\n      enableShadow\n    } = this.props;\n\n    if (enableShadow) {\n      return [this.styles.shadowStyle, {\n        shadowColor: backgroundColor\n      }];\n    }\n  }\n\n  getIconStyle() {\n    const {\n      disabled,\n      iconStyle: propsIconStyle,\n      iconOnRight\n    } = this.props;\n    const size = this.props.size || DEFAULT_SIZE;\n    const iconStyle = {\n      tintColor: this.getLabelColor()\n    };\n    const marginSide = [Button.sizes.large, Button.sizes.medium].includes(size) ? 8 : 4;\n\n    if (!this.isIconButton) {\n      if (iconOnRight) {\n        iconStyle.marginLeft = marginSide;\n      } else {\n        iconStyle.marginRight = marginSide;\n      }\n    }\n\n    if (disabled && !this.isFilled) {\n      iconStyle.tintColor = Colors.$iconDisabled;\n    }\n\n    return [iconStyle, propsIconStyle];\n  }\n\n  getAnimationDirectionStyle() {\n    const {\n      animateTo\n    } = this.props;\n    let style;\n\n    switch (animateTo) {\n      case 'left':\n        style = {\n          alignSelf: 'flex-start'\n        };\n        break;\n\n      case 'right':\n        style = {\n          alignSelf: 'flex-end'\n        };\n        break;\n\n      default:\n        // 'center' is the default\n        break;\n    }\n\n    return style;\n  }\n\n  renderIcon() {\n    const {\n      iconSource,\n      supportRTL,\n      testID\n    } = this.props;\n\n    if (iconSource) {\n      const iconStyle = this.getIconStyle();\n\n      if (typeof iconSource === 'function') {\n        return iconSource(iconStyle);\n      } else {\n        return <Image source={iconSource} supportRTL={supportRTL} style={iconStyle} testID={`${testID}.icon`} />;\n      }\n    }\n\n    return null;\n  }\n\n  renderLabel() {\n    const {\n      label,\n      labelStyle,\n      labelProps,\n      hyperlink,\n      testID\n    } = this.props;\n    const typography = extractTypographyValue(this.props);\n    const color = this.getLabelColor();\n    const labelSizeStyle = this.getLabelSizeStyle();\n\n    if (label) {\n      return <Text style={[this.styles.text, !!color && {\n        color\n      }, labelSizeStyle, { ...typography\n      }, labelStyle]} underline={hyperlink} numberOfLines={1} testID={`${testID}.label`} {...labelProps}>\n          {label}\n        </Text>;\n    }\n\n    return null;\n  }\n\n  render() {\n    const {\n      onPress,\n      disabled,\n      style,\n      testID,\n      animateLayout,\n      modifiers,\n      forwardedRef,\n      ...others\n    } = this.props;\n    const shadowStyle = this.getShadowStyle();\n    const {\n      margins\n    } = modifiers;\n    const backgroundColor = this.getBackgroundColor();\n    const outlineStyle = this.getOutlineStyle();\n    const containerSizeStyle = this.getContainerSizeStyle();\n    const borderRadiusStyle = this.getBorderRadiusStyle();\n    return <TouchableOpacity row centerV style={[this.styles.container, animateLayout && this.getAnimationDirectionStyle(), containerSizeStyle, this.isLink && this.styles.innerContainerLink, shadowStyle, margins, {\n      backgroundColor\n    }, borderRadiusStyle, outlineStyle, style]} activeOpacity={0.6} activeBackgroundColor={this.getActiveBackgroundColor()} onLayout={this.onLayout} onPress={onPress} disabled={disabled} testID={testID} {...others} ref={forwardedRef}>\n        {this.props.children}\n        {this.props.iconOnRight ? this.renderLabel() : this.renderIcon()}\n        {this.props.iconOnRight ? this.renderIcon() : this.renderLabel()}\n      </TouchableOpacity>;\n  }\n\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    container: {\n      backgroundColor: 'transparent',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    innerContainerLink: {\n      minWidth: undefined,\n      paddingHorizontal: undefined,\n      paddingVertical: undefined,\n      borderRadius: BorderRadiuses.br0,\n      backgroundColor: undefined\n    },\n    shadowStyle: {\n      shadowOffset: {\n        height: 5,\n        width: 0\n      },\n      shadowOpacity: 0.35,\n      shadowRadius: 9.5,\n      elevation: 2\n    },\n    text: {\n      backgroundColor: 'transparent',\n      flex: 0,\n      flexDirection: 'row',\n      ...Typography.text70\n    }\n  });\n}\n\nexport { Button }; // For tests\n\nexport default asBaseComponent(forwardRef(Button));"]},"metadata":{},"sourceType":"module"}