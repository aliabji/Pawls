{"ast":null,"code":"import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport ModalScreen from \"../screens/ModalScreen\";\nimport NotFoundScreen from \"../screens/NotFoundScreen\";\nimport UserAuthStart from \"../screens/UserAuthStart\";\nimport SetupWizard from \"../screens/SetupWizard\";\nimport Signup from \"../screens/Signup\";\nimport Signin from \"../screens/Signin\";\nimport AddDogs from \"../screens/AddDogs\";\nimport Dashboard from \"../screens/Dashboard\";\nimport Welcome from \"../screens/Welcome\";\nimport AddParks from \"../screens/AddParks\";\nimport ViewParks from \"../screens/ViewParks\";\nimport ViewDogs from \"../screens/ViewDogs\";\nimport CreateParkVisit from \"../screens/CreateParkVisit\";\nimport ParkVisitDetails from \"../screens/ParkVisitDetails\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Navigation(_ref) {\n  var colorScheme = _ref.colorScheme;\n  return _jsx(NavigationContainer, {\n    theme: colorScheme === 'dark' ? DarkTheme : DefaultTheme,\n    children: _jsx(RootNavigator, {})\n  });\n}\nvar Stack = createNativeStackNavigator();\n\nfunction RootNavigator() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Welcome\",\n    children: [_jsx(Stack.Screen, {\n      name: \"NotFound\",\n      component: NotFoundScreen,\n      options: {\n        title: 'Oops!'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"UserAuthStart\",\n      component: UserAuthStart\n    }), _jsx(Stack.Screen, {\n      name: \"Signin\",\n      component: Signin\n    }), _jsx(Stack.Screen, {\n      name: \"Signup\",\n      component: Signup\n    }), _jsx(Stack.Screen, {\n      name: \"SetupWizard\",\n      component: SetupWizard\n    }), _jsx(Stack.Screen, {\n      name: \"AddDogs\",\n      component: AddDogs\n    }), _jsx(Stack.Screen, {\n      name: \"AddParks\",\n      component: AddParks\n    }), _jsx(Stack.Screen, {\n      name: \"Dashboard\",\n      component: Dashboard\n    }), _jsx(Stack.Screen, {\n      name: \"Welcome\",\n      component: Welcome\n    }), _jsx(Stack.Screen, {\n      name: \"ViewDogs\",\n      component: ViewDogs\n    }), _jsx(Stack.Screen, {\n      name: \"ViewParks\",\n      component: ViewParks\n    }), _jsx(Stack.Screen, {\n      name: \"CreateParkVisit\",\n      component: CreateParkVisit\n    }), _jsx(Stack.Screen, {\n      name: \"ParkVisitDetails\",\n      component: ParkVisitDetails\n    }), _jsx(Stack.Group, {\n      screenOptions: {\n        presentation: 'modal'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Modal\",\n        component: ModalScreen\n      })\n    })]\n  });\n}","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/navigation/index.tsx"],"names":["NavigationContainer","DefaultTheme","DarkTheme","createNativeStackNavigator","React","ModalScreen","NotFoundScreen","UserAuthStart","SetupWizard","Signup","Signin","AddDogs","Dashboard","Welcome","AddParks","ViewParks","ViewDogs","CreateParkVisit","ParkVisitDetails","Navigation","colorScheme","Stack","RootNavigator","title","presentation"],"mappings":"AAOA,SAASA,mBAAT,EAA8BC,YAA9B,EAA4CC,SAA5C,QAA6D,0BAA7D;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAKA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,aAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AACA,OAAOC,SAAP;AACA,OAAOC,QAAP;AACA,OAAOC,eAAP;AACA,OAAOC,gBAAP;;;AAKA,eAAe,SAASC,UAAT,OAAuE;AAAA,MAAjDC,WAAiD,QAAjDA,WAAiD;AACpF,SACE,KAAC,mBAAD;AAEE,IAAA,KAAK,EAAEA,WAAW,KAAK,MAAhB,GAAyBlB,SAAzB,GAAqCD,YAF9C;AAAA,cAGE,KAAC,aAAD;AAHF,IADF;AAOD;AAMD,IAAMoB,KAAK,GAAGlB,0BAA0B,EAAxC;;AAEA,SAASmB,aAAT,GAAyB;AACvB,SACE,MAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,gBAAgB,EAAC,SAAlC;AAAA,eAEE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,UAAnB;AAA8B,MAAA,SAAS,EAAEhB,cAAzC;AAAyD,MAAA,OAAO,EAAE;AAAEiB,QAAAA,KAAK,EAAE;AAAT;AAAlE,MAFF,EAGE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,eAAnB;AAAmC,MAAA,SAAS,EAAEhB;AAA9C,MAHF,EAIE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAEG;AAAvC,MAJF,EAKE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,SAAS,EAAED;AAAvC,MALF,EAME,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAiC,MAAA,SAAS,EAAED;AAA5C,MANF,EAOE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAEG;AAAxC,MAPF,EAQE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,UAAnB;AAA8B,MAAA,SAAS,EAAEG;AAAzC,MARF,EASE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,WAAnB;AAA+B,MAAA,SAAS,EAAEF;AAA1C,MATF,EAUE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,SAAnB;AAA6B,MAAA,SAAS,EAAEC;AAAxC,MAVF,EAWE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,UAAnB;AAA8B,MAAA,SAAS,EAAEG;AAAzC,MAXF,EAYE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,WAAnB;AAA+B,MAAA,SAAS,EAAED;AAA1C,MAZF,EAaE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,iBAAnB;AAAqC,MAAA,SAAS,EAAEE;AAAhD,MAbF,EAcE,KAAC,KAAD,CAAO,MAAP;AAAc,MAAA,IAAI,EAAC,kBAAnB;AAAsC,MAAA,SAAS,EAAEC;AAAjD,MAdF,EAeE,KAAC,KAAD,CAAO,KAAP;AAAa,MAAA,aAAa,EAAE;AAAEM,QAAAA,YAAY,EAAE;AAAhB,OAA5B;AAAA,gBACE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,SAAS,EAAEnB;AAAtC;AADF,MAfF;AAAA,IADF;AAqBD","sourcesContent":["/**\n * If you are not familiar with React Navigation, refer to the \"Fundamentals\" guide:\n * https://reactnavigation.org/docs/getting-started\n *\n */\nimport { FontAwesome } from '@expo/vector-icons';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as React from 'react';\nimport { ColorSchemeName, Pressable } from 'react-native';\n\nimport Colors from '../constants/Colors';\nimport useColorScheme from '../hooks/useColorScheme';\nimport ModalScreen from '../screens/ModalScreen';\nimport NotFoundScreen from '../screens/NotFoundScreen';\nimport UserAuthStart from '../screens/UserAuthStart';\nimport SetupWizard from '../screens/SetupWizard';\nimport Signup from '../screens/Signup';\nimport Signin from '../screens/Signin';\nimport AddDogs from '../screens/AddDogs';\nimport Dashboard from '../screens/Dashboard';\nimport Welcome from '../screens/Welcome';\nimport AddParks from '../screens/AddParks';\nimport ViewParks from '../screens/ViewParks';\nimport ViewDogs from '../screens/ViewDogs';\nimport CreateParkVisit from '../screens/CreateParkVisit';\nimport ParkVisitDetails from '../screens/ParkVisitDetails';\n\nimport { RootStackParamList, RootTabParamList, RootTabScreenProps } from '../types';\nimport LinkingConfiguration from './LinkingConfiguration';\n\nexport default function Navigation({ colorScheme }: { colorScheme: ColorSchemeName }) {\n  return (\n    <NavigationContainer\n      // linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n/**\n * A root stack navigator is often used for displaying modals on top of all other content.\n * https://reactnavigation.org/docs/modal\n */\nconst Stack = createNativeStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator initialRouteName='Welcome'>\n      {/* <Stack.Screen name=\"Root\" component={BottomTabNavigator} options={{ headerShown: false }} /> */}\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n      <Stack.Screen name=\"UserAuthStart\" component={UserAuthStart} />\n      <Stack.Screen name=\"Signin\" component={Signin} />\n      <Stack.Screen name=\"Signup\" component={Signup} />\n      <Stack.Screen name=\"SetupWizard\" component={SetupWizard} />\n      <Stack.Screen name=\"AddDogs\" component={AddDogs} />\n      <Stack.Screen name=\"AddParks\" component={AddParks} />\n      <Stack.Screen name=\"Dashboard\" component={Dashboard} />\n      <Stack.Screen name=\"Welcome\" component={Welcome} />\n      <Stack.Screen name=\"ViewDogs\" component={ViewDogs} />\n      <Stack.Screen name=\"ViewParks\" component={ViewParks} />\n      <Stack.Screen name=\"CreateParkVisit\" component={CreateParkVisit} />\n      <Stack.Screen name=\"ParkVisitDetails\" component={ParkVisitDetails} />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen name=\"Modal\" component={ModalScreen} />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n\n/**\n * A bottom tab navigator displays tab buttons on the bottom of the display to switch screens.\n * https://reactnavigation.org/docs/bottom-tab-navigator\n */\n// const BottomTab = createBottomTabNavigator<RootTabParamList>();\n\n// function BottomTabNavigator() {\n//   const colorScheme = useColorScheme();\n\n//   return (\n//     <BottomTab.Navigator\n//       initialRouteName=\"Welcome\"\n//       screenOptions={{\n//         tabBarActiveTintColor: Colors[colorScheme].tint,\n//       }}>\n//       <BottomTab.Screen\n//         name=\"TabOne\"\n//         component={UserAuthStart}\n//         options={({ navigation }: RootTabScreenProps<'TabOne'>) => ({\n//           title: 'Tab One',\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//           headerRight: () => (\n//             <Pressable\n//               onPress={() => navigation.navigate('Modal')}\n//               style={({ pressed }) => ({\n//                 opacity: pressed ? 0.5 : 1,\n//               })}>\n//               <FontAwesome\n//                 name=\"info-circle\"\n//                 size={25}\n//                 color={Colors[colorScheme].text}\n//                 style={{ marginRight: 15 }}\n//               />\n//             </Pressable>\n//           ),\n//         })}\n//       />\n//       <BottomTab.Screen\n//         name=\"TabTwo\"\n//         component={TabTwoScreen}\n//         options={{\n//           title: 'Tab Two',\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//         }}\n//       />\n//       <BottomTab.Screen\n//         name=\"Signup\"\n//         component={Signup}\n//         options={{\n//           title: 'Signup',\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//         }}\n//       />\n//       <BottomTab.Screen\n//         name=\"Signin\"\n//         component={Signin}\n//         options={{\n//           title: 'Signin',\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//         }}\n//       />\n//       <BottomTab.Screen\n//         name=\"Welcome\"\n//         component={Welcome}\n//         options={{\n//           title: 'Welcome',\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//         }}\n//       />\n//       <BottomTab.Screen\n//         name=\"AddParks\"\n//         component={AddParks}\n//         options={{\n//           title: 'AddParks',\n//           tabBarIcon: ({ color }) => <TabBarIcon name=\"code\" color={color} />,\n//         }}\n//       />\n//     </BottomTab.Navigator>\n//   );\n// }\n\n/**\n * You can explore the built-in icon families and icons on the web at https://icons.expo.fyi/\n */\n// function TabBarIcon(props: {\n//   name: React.ComponentProps<typeof FontAwesome>['name'];\n//   color: string;\n// }) {\n//   return <FontAwesome size={30} style={{ marginBottom: -3 }} {...props} />;\n// }\n"]},"metadata":{},"sourceType":"module"}