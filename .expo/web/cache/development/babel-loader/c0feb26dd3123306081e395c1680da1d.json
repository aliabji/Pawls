{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useState, useEffect } from 'react';\nimport { Text, View } from \"../components/Themed\";\nimport { LogOutButton } from \"../components/LogOutButton\";\nimport { getVisits } from \"../utils/apiService\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Dashboard(_ref) {\n  var navigation = _ref.navigation,\n      params = _ref.route.params;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      visits = _useState2[0],\n      setVisits = _useState2[1];\n\n  useEffect(function () {\n    getVisits().then(function (res) {\n      console.log(res);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.title,\n      children: [\"Welcome back, \", params && params.username, \"!\"]\n    }), _jsx(Text, {\n      style: styles.subHeading,\n      children: \"Dashboard\"\n    }), _jsx(Button, {\n      title: \"Add parks\",\n      onPress: function onPress() {\n        return navigation.push('AddParks');\n      }\n    }), _jsx(Button, {\n      title: \"View my parks\",\n      onPress: function onPress() {\n        return navigation.push('ViewParks');\n      }\n    }), _jsx(Button, {\n      title: \"View my dogs\",\n      onPress: function onPress() {\n        return navigation.push('ViewDogs');\n      }\n    }), _jsx(Button, {\n      title: \"Create park visit\",\n      onPress: function onPress() {\n        return navigation.push('CreateParkVisit', params);\n      }\n    }), _jsx(LogOutButton, {\n      navigation: navigation\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  subHeading: {\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/screens/Dashboard.tsx"],"names":["useState","useEffect","Text","View","LogOutButton","getVisits","Dashboard","navigation","params","route","visits","setVisits","then","res","console","log","styles","container","title","username","subHeading","push","StyleSheet","create","flex","alignItems","justifyContent","fontSize","fontWeight"],"mappings":";;;AACA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,IAAT,EAAeC,IAAf;AACA,SAAQC,YAAR;AAEA,SAASC,SAAT;;;AAEA,eAAe,SAASC,SAAT,OAAqF;AAAA,MAAhEC,UAAgE,QAAhEA,UAAgE;AAAA,MAA5CC,MAA4C,QAApDC,KAAoD,CAA5CD,MAA4C;;AAChG,kBAA4BR,QAAQ,EAApC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAeC,SAAf;;AAEAV,EAAAA,SAAS,CAAC,YAAM;AACZI,IAAAA,SAAS,GAAGO,IAAZ,CAAiB,UAACC,GAAD,EAAS;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMA,SACA,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA,eACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA,mCAA0CV,MAAM,IAAIA,MAAM,CAACW,QAA3D;AAAA,MADF,EAEE,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA,MAFF,EAGE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,OAAO,EAAE;AAAA,eAAMb,UAAU,CAACc,IAAX,CAAgB,UAAhB,CAAN;AAAA;AAAnC,MAHF,EAIE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,eAAd;AAA8B,MAAA,OAAO,EAAE;AAAA,eAAMd,UAAU,CAACc,IAAX,CAAgB,WAAhB,CAAN;AAAA;AAAvC,MAJF,EAKE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,OAAO,EAAE;AAAA,eAAMd,UAAU,CAACc,IAAX,CAAgB,UAAhB,CAAN;AAAA;AAAtC,MALF,EAME,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,mBAAd;AAAkC,MAAA,OAAO,EAAE;AAAA,eAAMd,UAAU,CAACc,IAAX,CAAgB,iBAAhB,EAAmCb,MAAnC,CAAN;AAAA;AAA3C,MANF,EAQE,KAAC,YAAD;AAAc,MAAA,UAAU,EAAED;AAA1B,MARF;AAAA,IADA;AAYH;AAED,IAAMS,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BR,EAAAA,KAAK,EAAE;AACLS,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GANwB;AAU/BR,EAAAA,UAAU,EAAE;AACVO,IAAAA,QAAQ,EAAE;AADA;AAVmB,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Button } from 'react-native';\r\nimport {useState, useEffect} from 'react';\r\nimport { Text, View } from '../components/Themed';\r\nimport {LogOutButton} from '../components/LogOutButton';\r\nimport { RootTabScreenProps } from '../types';\r\nimport { getVisits } from '../utils/apiService'\r\n\r\nexport default function Dashboard({ navigation, route: {params} }: RootTabScreenProps<'Dashboard'>) {\r\n    const [visits, setVisits] = useState<any>()\r\n\r\n    useEffect(() => {\r\n        getVisits().then((res) => {\r\n            console.log(res)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Welcome back, {params && params.username}!</Text>\r\n      <Text style={styles.subHeading}>Dashboard</Text>\r\n      <Button title=\"Add parks\" onPress={() => navigation.push('AddParks')} />\r\n      <Button title=\"View my parks\" onPress={() => navigation.push('ViewParks')} />\r\n      <Button title=\"View my dogs\" onPress={() => navigation.push('ViewDogs')} />\r\n      <Button title=\"Create park visit\" onPress={() => navigation.push('CreateParkVisit', params)} />\r\n\r\n      <LogOutButton navigation={navigation} />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  subHeading: {\r\n    fontSize: 15,\r\n    // fontWeight: 'bold',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}