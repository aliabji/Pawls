{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { logIn } from \"../utils/apiService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Signin = function (_React$Component) {\n  _inherits(Signin, _React$Component);\n\n  var _super = _createSuper(Signin);\n\n  function Signin() {\n    var _this;\n\n    _classCallCheck(this, Signin);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      password: '',\n      email: ''\n    };\n\n    _this.onChangeText = function (key, val) {\n      _this.setState(_defineProperty({}, key, val));\n    };\n\n    _this.signIn = function _callee() {\n      var _this$state, username, password, creds;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, username = _this$state.username, password = _this$state.password;\n              creds = {\n                user: {\n                  username: username,\n                  password: password\n                }\n              };\n\n              try {\n                logIn(creds).then(function (res) {\n                  if (res.user) {\n                    _this.props.navigation.push('SetupWizard', res.user);\n                  } else {\n                    console.log(\"log in failed \", res);\n                  }\n                });\n              } catch (err) {\n                console.log(\"Unrecoverable error occured \", err);\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(Signin, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Username\",\n          autoCapitalize: \"none\",\n          placeholderTextColor: \"white\",\n          onChangeText: function onChangeText(val) {\n            return _this2.onChangeText('username', val);\n          }\n        }), _jsx(TextInput, {\n          style: styles.input,\n          placeholder: \"Password\",\n          secureTextEntry: true,\n          autoCapitalize: \"none\",\n          placeholderTextColor: \"white\",\n          onChangeText: function onChangeText(val) {\n            return _this2.onChangeText('password', val);\n          }\n        }), _jsx(Button, {\n          title: \"Sign In\",\n          onPress: this.signIn\n        })]\n      });\n    }\n  }]);\n\n  return Signin;\n}(React.Component);\n\nexport { Signin as default };\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: '#42A5F5',\n    margin: 10,\n    padding: 8,\n    color: 'white',\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/screens/Signin.tsx"],"names":["React","logIn","Signin","state","username","password","email","onChangeText","key","val","setState","signIn","creds","user","then","res","props","navigation","push","console","log","err","styles","container","input","Component","StyleSheet","create","width","height","backgroundColor","margin","padding","color","borderRadius","fontSize","fontWeight","flex","justifyContent","alignItems"],"mappings":"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","sourcesContent":["// SignUp.js\r\nimport React from 'react'\r\nimport {\r\n  View,\r\n  Button,\r\n  TextInput,\r\n  StyleSheet\r\n} from 'react-native'\r\nimport {LOCAL_API_ADDRESS} from '../constants/server'\r\nimport {logIn} from '../utils/apiService';\r\n\r\nexport default class Signin extends React.Component<any> {\r\n  state = {\r\n    username: '', password: '', email: ''\r\n  }\r\n  onChangeText = (key: any, val: any) => {\r\n    this.setState({ [key]: val })\r\n  }\r\n  signIn = async () => {\r\n    const { username, password } = this.state\r\n    const creds = {\r\n      user: {\r\n        username, password\r\n      }\r\n    }\r\n    try {\r\n      logIn(creds).then(res => {\r\n        if (res.user) {\r\n          // this.props.navigation.push('Dashboard', res.user)\r\n          this.props.navigation.push('SetupWizard', res.user)\r\n        } else {\r\n          console.log(\"log in failed \", res)\r\n\r\n        }\r\n      })\r\n    } catch (err) {\r\n      console.log(\"Unrecoverable error occured \", err)\r\n    }\r\n  }\r\n \r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder='Username'\r\n          autoCapitalize=\"none\"\r\n          placeholderTextColor='white'\r\n          onChangeText={val => this.onChangeText('username', val)}\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder='Password'\r\n          secureTextEntry={true}\r\n          autoCapitalize=\"none\"\r\n          placeholderTextColor='white'\r\n          onChangeText={val => this.onChangeText('password', val)}\r\n        />\r\n        <Button\r\n          title='Sign In'\r\n          onPress={this.signIn}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  input: {\r\n    width: 350,\r\n    height: 55,\r\n    backgroundColor: '#42A5F5',\r\n    margin: 10,\r\n    padding: 8,\r\n    color: 'white',\r\n    borderRadius: 14,\r\n    fontSize: 18,\r\n    fontWeight: '500',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n})"]},"metadata":{},"sourceType":"module"}