{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport { Constants } from \"../../commons/new\";\nexport var PanningDirectionsEnum;\n\n(function (PanningDirectionsEnum) {\n  PanningDirectionsEnum[\"UP\"] = \"up\";\n  PanningDirectionsEnum[\"DOWN\"] = \"down\";\n  PanningDirectionsEnum[\"LEFT\"] = \"left\";\n  PanningDirectionsEnum[\"RIGHT\"] = \"right\";\n})(PanningDirectionsEnum || (PanningDirectionsEnum = {}));\n\nexport var getTranslationDirectionClamp = function () {\n  var _f = function _f(translation, options) {\n    var result = translation;\n\n    if (options.directionLock) {\n      if (options.currentTranslation.x !== 0) {\n        result = {\n          x: translation.x,\n          y: 0\n        };\n      } else if (options.currentTranslation.y !== 0) {\n        result = {\n          x: 0,\n          y: translation.y\n        };\n      } else if (Math.abs(translation.x) > Math.abs(translation.y)) {\n        result = {\n          x: translation.x,\n          y: 0\n        };\n      } else {\n        result = {\n          x: 0,\n          y: translation.y\n        };\n      }\n    }\n\n    return result;\n  };\n\n  _f._closure = {};\n  _f.asString = \"function getTranslationDirectionClamp(translation,options){let result=translation;if(options.directionLock){if(options.currentTranslation.x!==0){result={x:translation.x,y:0};}else if(options.currentTranslation.y!==0){result={x:0,y:translation.y};}else if(Math.abs(translation.x)>Math.abs(translation.y)){result={x:translation.x,y:0};}else{result={x:0,y:translation.y};}}return result;}\";\n  _f.__workletHash = 3889138589672;\n  _f.__location = \"/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/panView/panningUtil.js (11:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var getTranslation = function () {\n  var _f = function _f(event, initialTranslation, directions, options) {\n    var result = {\n      x: 0,\n      y: 0\n    };\n\n    if (directions != null && directions.includes(PanningDirectionsEnum.LEFT) && directions != null && directions.includes(PanningDirectionsEnum.RIGHT)) {\n      result.x = initialTranslation.x + event.translationX;\n    } else if (directions != null && directions.includes(PanningDirectionsEnum.LEFT)) {\n      result.x = Math.min(0, initialTranslation.x + event.translationX);\n    } else if (directions != null && directions.includes(PanningDirectionsEnum.RIGHT)) {\n      result.x = Math.max(0, initialTranslation.x + event.translationX);\n    }\n\n    if (directions != null && directions.includes(PanningDirectionsEnum.UP) && directions != null && directions.includes(PanningDirectionsEnum.DOWN)) {\n      result.y = initialTranslation.y + event.translationY;\n    } else if (directions != null && directions.includes(PanningDirectionsEnum.UP)) {\n      result.y = Math.min(0, initialTranslation.y + event.translationY);\n    } else if (directions != null && directions.includes(PanningDirectionsEnum.DOWN)) {\n      result.y = Math.max(0, initialTranslation.y + event.translationY);\n    }\n\n    return getTranslationDirectionClamp(result, options);\n  };\n\n  _f._closure = {\n    PanningDirectionsEnum: {\n      LEFT: PanningDirectionsEnum.LEFT,\n      RIGHT: PanningDirectionsEnum.RIGHT,\n      UP: PanningDirectionsEnum.UP,\n      DOWN: PanningDirectionsEnum.DOWN\n    },\n    getTranslationDirectionClamp: getTranslationDirectionClamp\n  };\n  _f.asString = \"function getTranslation(event,initialTranslation,directions,options){const{PanningDirectionsEnum,getTranslationDirectionClamp}=jsThis._closure;{const result={x:0,y:0};if(directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.LEFT)&&directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.RIGHT)){result.x=initialTranslation.x+event.translationX;}else if(directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.LEFT)){result.x=Math.min(0,initialTranslation.x+event.translationX);}else if(directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.RIGHT)){result.x=Math.max(0,initialTranslation.x+event.translationX);}if(directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.UP)&&directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.DOWN)){result.y=initialTranslation.y+event.translationY;}else if(directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.UP)){result.y=Math.min(0,initialTranslation.y+event.translationY);}else if(directions!==null&&directions!==void 0&&directions.includes(PanningDirectionsEnum.DOWN)){result.y=Math.max(0,initialTranslation.y+event.translationY);}return getTranslationDirectionClamp(result,options);}}\";\n  _f.__workletHash = 1058488667213;\n  _f.__location = \"/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/panView/panningUtil.js (42:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\nexport var DEFAULT_THRESHOLD = {\n  velocity: 750,\n  x: Constants.screenWidth / 4,\n  y: Constants.screenHeight / 4\n};\n\nvar getVelocityDirectionClamp = function () {\n  var _f = function _f(event, directions) {\n    var x = 0,\n        y = 0;\n\n    if (directions.includes(PanningDirectionsEnum.LEFT) && event.velocityX < 0 || directions.includes(PanningDirectionsEnum.RIGHT) && event.velocityX > 0) {\n      x = event.velocityX;\n    }\n\n    if (directions.includes(PanningDirectionsEnum.UP) && event.velocityY < 0 || directions.includes(PanningDirectionsEnum.DOWN) && event.velocityY > 0) {\n      y = event.velocityY;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  _f._closure = {\n    PanningDirectionsEnum: {\n      LEFT: PanningDirectionsEnum.LEFT,\n      RIGHT: PanningDirectionsEnum.RIGHT,\n      UP: PanningDirectionsEnum.UP,\n      DOWN: PanningDirectionsEnum.DOWN\n    }\n  };\n  _f.asString = \"function getVelocityDirectionClamp(event,directions){const{PanningDirectionsEnum}=jsThis._closure;{let x=0,y=0;if(directions.includes(PanningDirectionsEnum.LEFT)&&event.velocityX<0||directions.includes(PanningDirectionsEnum.RIGHT)&&event.velocityX>0){x=event.velocityX;}if(directions.includes(PanningDirectionsEnum.UP)&&event.velocityY<0||directions.includes(PanningDirectionsEnum.DOWN)&&event.velocityY>0){y=event.velocityY;}return{x:x,y:y};}}\";\n  _f.__workletHash = 16290091330711;\n  _f.__location = \"/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/panView/panningUtil.js (74:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nvar checkThresholds = function () {\n  var _f = function _f(directions, velocity, threshold, options) {\n    var velocityPassedThreshold = velocity > threshold.velocity;\n    var xPassedThreshold = directions.includes(PanningDirectionsEnum.RIGHT) && options.currentTranslation.x > threshold.x || directions.includes(PanningDirectionsEnum.LEFT) && -options.currentTranslation.x > threshold.x;\n    var yPassedThreshold = directions.includes(PanningDirectionsEnum.DOWN) && options.currentTranslation.y > threshold.y || directions.includes(PanningDirectionsEnum.UP) && -options.currentTranslation.y > threshold.y;\n    return {\n      velocityPassedThreshold: velocityPassedThreshold,\n      xPassedThreshold: xPassedThreshold,\n      yPassedThreshold: yPassedThreshold\n    };\n  };\n\n  _f._closure = {\n    PanningDirectionsEnum: {\n      RIGHT: PanningDirectionsEnum.RIGHT,\n      LEFT: PanningDirectionsEnum.LEFT,\n      DOWN: PanningDirectionsEnum.DOWN,\n      UP: PanningDirectionsEnum.UP\n    }\n  };\n  _f.asString = \"function checkThresholds(directions,velocity,threshold,options){const{PanningDirectionsEnum}=jsThis._closure;{const velocityPassedThreshold=velocity>threshold.velocity;const xPassedThreshold=directions.includes(PanningDirectionsEnum.RIGHT)&&options.currentTranslation.x>threshold.x||directions.includes(PanningDirectionsEnum.LEFT)&&-options.currentTranslation.x>threshold.x;const yPassedThreshold=directions.includes(PanningDirectionsEnum.DOWN)&&options.currentTranslation.y>threshold.y||directions.includes(PanningDirectionsEnum.UP)&&-options.currentTranslation.y>threshold.y;return{velocityPassedThreshold:velocityPassedThreshold,xPassedThreshold:xPassedThreshold,yPassedThreshold:yPassedThreshold};}}\";\n  _f.__workletHash = 285658835734;\n  _f.__location = \"/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/panView/panningUtil.js (94:0)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();\n\nexport var getDismissVelocity = function () {\n  var _f = function _f(event, directions, options, threshold) {\n    var _threshold = _extends({}, DEFAULT_THRESHOLD, threshold);\n\n    var clampedVelocity = getVelocityDirectionClamp(event, directions);\n    var velocity = Math.sqrt(Math.pow(clampedVelocity.x, 2) + Math.pow(clampedVelocity.y, 2));\n\n    var _checkThresholds = checkThresholds(directions, velocity, _threshold, options),\n        velocityPassedThreshold = _checkThresholds.velocityPassedThreshold,\n        xPassedThreshold = _checkThresholds.xPassedThreshold,\n        yPassedThreshold = _checkThresholds.yPassedThreshold;\n\n    if (velocityPassedThreshold || xPassedThreshold || yPassedThreshold) {\n      var _velocity = {};\n\n      if (velocityPassedThreshold) {\n        _velocity = {\n          x: event.velocityX,\n          y: event.velocityY\n        };\n      } else if (event.translationX && event.translationY) {\n        if (Math.abs(event.translationX) > Math.abs(event.translationY)) {\n          _velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n          _velocity.y = _threshold.velocity * event.translationY / Math.abs(event.translationX);\n        } else {\n          _velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n          _velocity.x = _threshold.velocity * event.translationX / Math.abs(event.translationY);\n        }\n      } else if (event.translationX) {\n        _velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n      } else {\n        _velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n      }\n\n      if (options.directionLock) {\n        if (options.currentTranslation.x !== 0) {\n          _velocity.y = 0;\n        } else if (options.currentTranslation.y !== 0) {\n          _velocity.x = 0;\n        }\n      }\n\n      return _velocity;\n    }\n  };\n\n  _f._closure = {\n    DEFAULT_THRESHOLD: DEFAULT_THRESHOLD,\n    getVelocityDirectionClamp: getVelocityDirectionClamp,\n    checkThresholds: checkThresholds\n  };\n  _f.asString = \"function getDismissVelocity(event,directions,options,threshold){const{DEFAULT_THRESHOLD,getVelocityDirectionClamp,checkThresholds}=jsThis._closure;{const _threshold=Object.assign({},DEFAULT_THRESHOLD,threshold);const clampedVelocity=getVelocityDirectionClamp(event,directions);const velocity=Math.sqrt(Math.pow(clampedVelocity.x,2)+Math.pow(clampedVelocity.y,2));const{velocityPassedThreshold:velocityPassedThreshold,xPassedThreshold:xPassedThreshold,yPassedThreshold:yPassedThreshold}=checkThresholds(directions,velocity,_threshold,options);if(velocityPassedThreshold||xPassedThreshold||yPassedThreshold){let velocity={};if(velocityPassedThreshold){velocity={x:event.velocityX,y:event.velocityY};}else if(event.translationX&&event.translationY){if(Math.abs(event.translationX)>Math.abs(event.translationY)){velocity.x=Math.sign(event.translationX)*_threshold.velocity;velocity.y=_threshold.velocity*event.translationY/Math.abs(event.translationX);}else{velocity.y=Math.sign(event.translationY)*_threshold.velocity;velocity.x=_threshold.velocity*event.translationX/Math.abs(event.translationY);}}else if(event.translationX){velocity.x=Math.sign(event.translationX)*_threshold.velocity;}else{velocity.y=Math.sign(event.translationY)*_threshold.velocity;}if(options.directionLock){if(options.currentTranslation.x!==0){velocity.y=0;}else if(options.currentTranslation.y!==0){velocity.x=0;}}return velocity;}}}\";\n  _f.__workletHash = 15736832159901;\n  _f.__location = \"/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/panView/panningUtil.js (111:7)\";\n\n  global.__reanimatedWorkletInit(_f);\n\n  return _f;\n}();","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/panView/panningUtil.js"],"names":["Constants","PanningDirectionsEnum","getTranslationDirectionClamp","translation","options","result","directionLock","currentTranslation","x","y","Math","abs","getTranslation","event","initialTranslation","directions","includes","LEFT","RIGHT","translationX","min","max","UP","DOWN","translationY","DEFAULT_THRESHOLD","velocity","screenWidth","screenHeight","getVelocityDirectionClamp","velocityX","velocityY","checkThresholds","threshold","velocityPassedThreshold","xPassedThreshold","yPassedThreshold","getDismissVelocity","_threshold","clampedVelocity","sqrt","pow","sign"],"mappings":";AAAA,SAASA,SAAT;AACA,OAAO,IAAIC,qBAAJ;;AAEP,CAAC,UAAUA,qBAAV,EAAiC;AAChCA,EAAAA,qBAAqB,CAAC,IAAD,CAArB,GAA8B,IAA9B;AACAA,EAAAA,qBAAqB,CAAC,MAAD,CAArB,GAAgC,MAAhC;AACAA,EAAAA,qBAAqB,CAAC,MAAD,CAArB,GAAgC,MAAhC;AACAA,EAAAA,qBAAqB,CAAC,OAAD,CAArB,GAAiC,OAAjC;AACD,CALD,EAKGA,qBAAqB,KAAKA,qBAAqB,GAAG,EAA7B,CALxB;;AAOA,WAAgBC,4BAAhB;AAAA,uBAA6CC,WAA7C,EAA0DC,OAA1D,EAAmE;AAGjE,QAAIC,MAAM,GAAGF,WAAb;;AAEA,QAAIC,OAAO,CAACE,aAAZ,EAA2B;AACzB,UAAIF,OAAO,CAACG,kBAAR,CAA2BC,CAA3B,KAAiC,CAArC,EAAwC;AACtCH,QAAAA,MAAM,GAAG;AACPG,UAAAA,CAAC,EAAEL,WAAW,CAACK,CADR;AAEPC,UAAAA,CAAC,EAAE;AAFI,SAAT;AAID,OALD,MAKO,IAAIL,OAAO,CAACG,kBAAR,CAA2BE,CAA3B,KAAiC,CAArC,EAAwC;AAC7CJ,QAAAA,MAAM,GAAG;AACPG,UAAAA,CAAC,EAAE,CADI;AAEPC,UAAAA,CAAC,EAAEN,WAAW,CAACM;AAFR,SAAT;AAID,OALM,MAKA,IAAIC,IAAI,CAACC,GAAL,CAASR,WAAW,CAACK,CAArB,IAA0BE,IAAI,CAACC,GAAL,CAASR,WAAW,CAACM,CAArB,CAA9B,EAAuD;AAC5DJ,QAAAA,MAAM,GAAG;AACPG,UAAAA,CAAC,EAAEL,WAAW,CAACK,CADR;AAEPC,UAAAA,CAAC,EAAE;AAFI,SAAT;AAID,OALM,MAKA;AACLJ,QAAAA,MAAM,GAAG;AACPG,UAAAA,CAAC,EAAE,CADI;AAEPC,UAAAA,CAAC,EAAEN,WAAW,CAACM;AAFR,SAAT;AAID;AACF;;AAED,WAAOJ,MAAP;AACD,GA9BD;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AA+BA,WAAgBO,cAAhB;AAAA,uBAA+BC,KAA/B,EAAsCC,kBAAtC,EAA0DC,UAA1D,EAAsEX,OAAtE,EAA+E;AAG7E,QAAMC,MAAM,GAAG;AACbG,MAAAA,CAAC,EAAE,CADU;AAEbC,MAAAA,CAAC,EAAE;AAFU,KAAf;;AAKA,QAAIM,UAAU,QAAV,IAAAA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACgB,IAA3C,KAAoDF,UAApD,YAAoDA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACiB,KAA3C,CAAxD,EAA2G;AACzGb,MAAAA,MAAM,CAACG,CAAP,GAAWM,kBAAkB,CAACN,CAAnB,GAAuBK,KAAK,CAACM,YAAxC;AACD,KAFD,MAEO,IAAIJ,UAAJ,YAAIA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACgB,IAA3C,CAAJ,EAAsD;AAC3DZ,MAAAA,MAAM,CAACG,CAAP,GAAWE,IAAI,CAACU,GAAL,CAAS,CAAT,EAAYN,kBAAkB,CAACN,CAAnB,GAAuBK,KAAK,CAACM,YAAzC,CAAX;AACD,KAFM,MAEA,IAAIJ,UAAJ,YAAIA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACiB,KAA3C,CAAJ,EAAuD;AAC5Db,MAAAA,MAAM,CAACG,CAAP,GAAWE,IAAI,CAACW,GAAL,CAAS,CAAT,EAAYP,kBAAkB,CAACN,CAAnB,GAAuBK,KAAK,CAACM,YAAzC,CAAX;AACD;;AAED,QAAIJ,UAAU,QAAV,IAAAA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACqB,EAA3C,KAAkDP,UAAlD,YAAkDA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACsB,IAA3C,CAAtD,EAAwG;AACtGlB,MAAAA,MAAM,CAACI,CAAP,GAAWK,kBAAkB,CAACL,CAAnB,GAAuBI,KAAK,CAACW,YAAxC;AACD,KAFD,MAEO,IAAIT,UAAJ,YAAIA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACqB,EAA3C,CAAJ,EAAoD;AACzDjB,MAAAA,MAAM,CAACI,CAAP,GAAWC,IAAI,CAACU,GAAL,CAAS,CAAT,EAAYN,kBAAkB,CAACL,CAAnB,GAAuBI,KAAK,CAACW,YAAzC,CAAX;AACD,KAFM,MAEA,IAAIT,UAAJ,YAAIA,UAAU,CAAEC,QAAZ,CAAqBf,qBAAqB,CAACsB,IAA3C,CAAJ,EAAsD;AAC3DlB,MAAAA,MAAM,CAACI,CAAP,GAAWC,IAAI,CAACW,GAAL,CAAS,CAAT,EAAYP,kBAAkB,CAACL,CAAnB,GAAuBI,KAAK,CAACW,YAAzC,CAAX;AACD;;AAED,WAAOtB,4BAA4B,CAACG,MAAD,EAASD,OAAT,CAAnC;AACD,GAzBD;;AAAA;AAAA;AAAA,YAhCkCH,qBAAqB,CAACgB,IAgCxD;AAAA,aA9BkChB,qBAAqB,CAACiB,KA8BxD;AAAA,UAxBkCjB,qBAAqB,CAACqB,EAwBxD;AAAA,YAtBkCrB,qBAAqB,CAACsB;AAsBxD;AAAA,kCAlBSrB;AAkBT;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AA0BA,OAAO,IAAMuB,iBAAiB,GAAG;AAC/BC,EAAAA,QAAQ,EAAE,GADqB;AAE/BlB,EAAAA,CAAC,EAAER,SAAS,CAAC2B,WAAV,GAAwB,CAFI;AAG/BlB,EAAAA,CAAC,EAAET,SAAS,CAAC4B,YAAV,GAAyB;AAHG,CAA1B;;IAMEC,yB;uBAA0BhB,K,EAAOE,U,EAAY;AAGpD,QAAIP,CAAC,GAAG,CAAR;AAAA,QACIC,CAAC,GAAG,CADR;;AAGA,QAAIM,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACgB,IAA1C,KAAmDJ,KAAK,CAACiB,SAAN,GAAkB,CAArE,IAA0Ef,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACiB,KAA1C,KAAoDL,KAAK,CAACiB,SAAN,GAAkB,CAApJ,EAAuJ;AACrJtB,MAAAA,CAAC,GAAGK,KAAK,CAACiB,SAAV;AACD;;AAED,QAAIf,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACqB,EAA1C,KAAiDT,KAAK,CAACkB,SAAN,GAAkB,CAAnE,IAAwEhB,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACsB,IAA1C,KAAmDV,KAAK,CAACkB,SAAN,GAAkB,CAAjJ,EAAoJ;AAClJtB,MAAAA,CAAC,GAAGI,KAAK,CAACkB,SAAV;AACD;;AAED,WAAO;AACLvB,MAAAA,CAAC,EAADA,CADK;AAELC,MAAAA,CAAC,EAADA;AAFK,KAAP;AAID,G;;;;YAtFyBR,qBAAqB,CAACgB,I;aAAoDhB,qBAAqB,CAACiB,K;UAIhGjB,qBAAqB,CAACqB,E;YAAkDrB,qBAAqB,CAACsB;;;;;;;;;;;;IAoF/GS,e;uBAAgBjB,U,EAAYW,Q,EAAUO,S,EAAW7B,O,EAAS;AAGjE,QAAM8B,uBAAuB,GAAGR,QAAQ,GAAGO,SAAS,CAACP,QAArD;AACA,QAAMS,gBAAgB,GAAGpB,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACiB,KAA1C,KAAoDd,OAAO,CAACG,kBAAR,CAA2BC,CAA3B,GAA+ByB,SAAS,CAACzB,CAA7F,IAAkGO,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACgB,IAA1C,KAAmD,CAACb,OAAO,CAACG,kBAAR,CAA2BC,CAA5B,GAAgCyB,SAAS,CAACzB,CAAxN;AACA,QAAM4B,gBAAgB,GAAGrB,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACsB,IAA1C,KAAmDnB,OAAO,CAACG,kBAAR,CAA2BE,CAA3B,GAA+BwB,SAAS,CAACxB,CAA5F,IAAiGM,UAAU,CAACC,QAAX,CAAoBf,qBAAqB,CAACqB,EAA1C,KAAiD,CAAClB,OAAO,CAACG,kBAAR,CAA2BE,CAA5B,GAAgCwB,SAAS,CAACxB,CAArN;AACA,WAAO;AACLyB,MAAAA,uBAAuB,EAAvBA,uBADK;AAELC,MAAAA,gBAAgB,EAAhBA,gBAFK;AAGLC,MAAAA,gBAAgB,EAAhBA;AAHK,KAAP;AAKD,G;;;;aArG8CnC,qBAAqB,CAACiB,K;YAA4EjB,qBAAqB,CAACgB,I;YACxHhB,qBAAqB,CAACsB,I;UAA2EtB,qBAAqB,CAACqB;;;;;;;;;;;;AA0GtK,WAAgBe,kBAAhB;AAAA,uBAAmCxB,KAAnC,EAA0CE,UAA1C,EAAsDX,OAAtD,EAA+D6B,SAA/D,EAA0E;AAGxE,QAAMK,UAAU,GAAG,SAAc,EAAd,EAAkBb,iBAAlB,EAAqCQ,SAArC,CAAnB;;AAEA,QAAMM,eAAe,GAAGV,yBAAyB,CAAChB,KAAD,EAAQE,UAAR,CAAjD;AACA,QAAMW,QAAQ,GAAGhB,IAAI,CAAC8B,IAAL,CAAU9B,IAAI,CAAC+B,GAAL,CAASF,eAAe,CAAC/B,CAAzB,EAA4B,CAA5B,IAAiCE,IAAI,CAAC+B,GAAL,CAASF,eAAe,CAAC9B,CAAzB,EAA4B,CAA5B,CAA3C,CAAjB;;AACA,2BAIIuB,eAAe,CAACjB,UAAD,EAAaW,QAAb,EAAuBY,UAAvB,EAAmClC,OAAnC,CAJnB;AAAA,QACE8B,uBADF,oBACEA,uBADF;AAAA,QAEEC,gBAFF,oBAEEA,gBAFF;AAAA,QAGEC,gBAHF,oBAGEA,gBAHF;;AAMA,QAAIF,uBAAuB,IAAIC,gBAA3B,IAA+CC,gBAAnD,EAAqE;AACnE,UAAIV,SAAQ,GAAG,EAAf;;AAEA,UAAIQ,uBAAJ,EAA6B;AAC3BR,QAAAA,SAAQ,GAAG;AACTlB,UAAAA,CAAC,EAAEK,KAAK,CAACiB,SADA;AAETrB,UAAAA,CAAC,EAAEI,KAAK,CAACkB;AAFA,SAAX;AAID,OALD,MAKO,IAAIlB,KAAK,CAACM,YAAN,IAAsBN,KAAK,CAACW,YAAhC,EAA8C;AACnD,YAAId,IAAI,CAACC,GAAL,CAASE,KAAK,CAACM,YAAf,IAA+BT,IAAI,CAACC,GAAL,CAASE,KAAK,CAACW,YAAf,CAAnC,EAAiE;AAC/DE,UAAAA,SAAQ,CAAClB,CAAT,GAAaE,IAAI,CAACgC,IAAL,CAAU7B,KAAK,CAACM,YAAhB,IAAgCmB,UAAU,CAACZ,QAAxD;AACAA,UAAAA,SAAQ,CAACjB,CAAT,GAAa6B,UAAU,CAACZ,QAAX,GAAsBb,KAAK,CAACW,YAA5B,GAA2Cd,IAAI,CAACC,GAAL,CAASE,KAAK,CAACM,YAAf,CAAxD;AACD,SAHD,MAGO;AACLO,UAAAA,SAAQ,CAACjB,CAAT,GAAaC,IAAI,CAACgC,IAAL,CAAU7B,KAAK,CAACW,YAAhB,IAAgCc,UAAU,CAACZ,QAAxD;AACAA,UAAAA,SAAQ,CAAClB,CAAT,GAAa8B,UAAU,CAACZ,QAAX,GAAsBb,KAAK,CAACM,YAA5B,GAA2CT,IAAI,CAACC,GAAL,CAASE,KAAK,CAACW,YAAf,CAAxD;AACD;AACF,OARM,MAQA,IAAIX,KAAK,CAACM,YAAV,EAAwB;AAC7BO,QAAAA,SAAQ,CAAClB,CAAT,GAAaE,IAAI,CAACgC,IAAL,CAAU7B,KAAK,CAACM,YAAhB,IAAgCmB,UAAU,CAACZ,QAAxD;AACD,OAFM,MAEA;AACLA,QAAAA,SAAQ,CAACjB,CAAT,GAAaC,IAAI,CAACgC,IAAL,CAAU7B,KAAK,CAACW,YAAhB,IAAgCc,UAAU,CAACZ,QAAxD;AACD;;AAED,UAAItB,OAAO,CAACE,aAAZ,EAA2B;AACzB,YAAIF,OAAO,CAACG,kBAAR,CAA2BC,CAA3B,KAAiC,CAArC,EAAwC;AACtCkB,UAAAA,SAAQ,CAACjB,CAAT,GAAa,CAAb;AACD,SAFD,MAEO,IAAIL,OAAO,CAACG,kBAAR,CAA2BE,CAA3B,KAAiC,CAArC,EAAwC;AAC7CiB,UAAAA,SAAQ,CAAClB,CAAT,GAAa,CAAb;AACD;AACF;;AAED,aAAOkB,SAAP;AACD;AACF,GA7CD;;AAAA;AAAA,uBA5GuCD,iBA4GvC;AAAA,+BA1G0BI,yBA0G1B;AAAA,qBApGMG;AAoGN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA","sourcesContent":["import { Constants } from \"../../commons/new\";\nexport let PanningDirectionsEnum;\n\n(function (PanningDirectionsEnum) {\n  PanningDirectionsEnum[\"UP\"] = \"up\";\n  PanningDirectionsEnum[\"DOWN\"] = \"down\";\n  PanningDirectionsEnum[\"LEFT\"] = \"left\";\n  PanningDirectionsEnum[\"RIGHT\"] = \"right\";\n})(PanningDirectionsEnum || (PanningDirectionsEnum = {}));\n\nexport function getTranslationDirectionClamp(translation, options) {\n  'worklet';\n\n  let result = translation;\n\n  if (options.directionLock) {\n    if (options.currentTranslation.x !== 0) {\n      result = {\n        x: translation.x,\n        y: 0\n      };\n    } else if (options.currentTranslation.y !== 0) {\n      result = {\n        x: 0,\n        y: translation.y\n      };\n    } else if (Math.abs(translation.x) > Math.abs(translation.y)) {\n      result = {\n        x: translation.x,\n        y: 0\n      };\n    } else {\n      result = {\n        x: 0,\n        y: translation.y\n      };\n    }\n  }\n\n  return result;\n}\nexport function getTranslation(event, initialTranslation, directions, options) {\n  'worklet';\n\n  const result = {\n    x: 0,\n    y: 0\n  };\n\n  if (directions?.includes(PanningDirectionsEnum.LEFT) && directions?.includes(PanningDirectionsEnum.RIGHT)) {\n    result.x = initialTranslation.x + event.translationX;\n  } else if (directions?.includes(PanningDirectionsEnum.LEFT)) {\n    result.x = Math.min(0, initialTranslation.x + event.translationX);\n  } else if (directions?.includes(PanningDirectionsEnum.RIGHT)) {\n    result.x = Math.max(0, initialTranslation.x + event.translationX);\n  }\n\n  if (directions?.includes(PanningDirectionsEnum.UP) && directions?.includes(PanningDirectionsEnum.DOWN)) {\n    result.y = initialTranslation.y + event.translationY;\n  } else if (directions?.includes(PanningDirectionsEnum.UP)) {\n    result.y = Math.min(0, initialTranslation.y + event.translationY);\n  } else if (directions?.includes(PanningDirectionsEnum.DOWN)) {\n    result.y = Math.max(0, initialTranslation.y + event.translationY);\n  }\n\n  return getTranslationDirectionClamp(result, options);\n}\nexport const DEFAULT_THRESHOLD = {\n  velocity: 750,\n  x: Constants.screenWidth / 4,\n  y: Constants.screenHeight / 4\n};\n\nfunction getVelocityDirectionClamp(event, directions) {\n  'worklet';\n\n  let x = 0,\n      y = 0;\n\n  if (directions.includes(PanningDirectionsEnum.LEFT) && event.velocityX < 0 || directions.includes(PanningDirectionsEnum.RIGHT) && event.velocityX > 0) {\n    x = event.velocityX;\n  }\n\n  if (directions.includes(PanningDirectionsEnum.UP) && event.velocityY < 0 || directions.includes(PanningDirectionsEnum.DOWN) && event.velocityY > 0) {\n    y = event.velocityY;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nfunction checkThresholds(directions, velocity, threshold, options) {\n  'worklet';\n\n  const velocityPassedThreshold = velocity > threshold.velocity;\n  const xPassedThreshold = directions.includes(PanningDirectionsEnum.RIGHT) && options.currentTranslation.x > threshold.x || directions.includes(PanningDirectionsEnum.LEFT) && -options.currentTranslation.x > threshold.x;\n  const yPassedThreshold = directions.includes(PanningDirectionsEnum.DOWN) && options.currentTranslation.y > threshold.y || directions.includes(PanningDirectionsEnum.UP) && -options.currentTranslation.y > threshold.y;\n  return {\n    velocityPassedThreshold,\n    xPassedThreshold,\n    yPassedThreshold\n  };\n}\n/**\n * Will return undefined if should not dismiss\n */\n\n\nexport function getDismissVelocity(event, directions, options, threshold) {\n  'worklet';\n\n  const _threshold = Object.assign({}, DEFAULT_THRESHOLD, threshold);\n\n  const clampedVelocity = getVelocityDirectionClamp(event, directions);\n  const velocity = Math.sqrt(Math.pow(clampedVelocity.x, 2) + Math.pow(clampedVelocity.y, 2));\n  const {\n    velocityPassedThreshold,\n    xPassedThreshold,\n    yPassedThreshold\n  } = checkThresholds(directions, velocity, _threshold, options);\n\n  if (velocityPassedThreshold || xPassedThreshold || yPassedThreshold) {\n    let velocity = {};\n\n    if (velocityPassedThreshold) {\n      velocity = {\n        x: event.velocityX,\n        y: event.velocityY\n      };\n    } else if (event.translationX && event.translationY) {\n      if (Math.abs(event.translationX) > Math.abs(event.translationY)) {\n        velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n        velocity.y = _threshold.velocity * event.translationY / Math.abs(event.translationX);\n      } else {\n        velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n        velocity.x = _threshold.velocity * event.translationX / Math.abs(event.translationY);\n      }\n    } else if (event.translationX) {\n      velocity.x = Math.sign(event.translationX) * _threshold.velocity;\n    } else {\n      velocity.y = Math.sign(event.translationY) * _threshold.velocity;\n    }\n\n    if (options.directionLock) {\n      if (options.currentTranslation.x !== 0) {\n        velocity.y = 0;\n      } else if (options.currentTranslation.y !== 0) {\n        velocity.x = 0;\n      }\n    }\n\n    return velocity;\n  }\n}"]},"metadata":{},"sourceType":"module"}