{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport _pt from \"prop-types\";\nimport { isFunction, isUndefined } from 'lodash';\nimport React, { useCallback, useRef, useMemo, useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useSharedValue, useAnimatedScrollHandler } from 'react-native-reanimated';\nimport { Colors, Spacings } from \"../../style\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Fader, { FaderPosition } from \"../../components/fader\";\nimport Item, { ItemProps } from \"./Item\";\nimport Text from \"../../components/text\";\nimport usePresenter from \"./usePresenter\";\nimport { WheelPickerAlign } from \"./types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\n\nvar WheelPicker = function WheelPicker(_ref) {\n  var propItems = _ref.items,\n      _ref$itemHeight = _ref.itemHeight,\n      itemHeight = _ref$itemHeight === void 0 ? 44 : _ref$itemHeight,\n      _ref$numberOfVisibleR = _ref.numberOfVisibleRows,\n      numberOfVisibleRows = _ref$numberOfVisibleR === void 0 ? 5 : _ref$numberOfVisibleR,\n      _ref$activeTextColor = _ref.activeTextColor,\n      activeTextColor = _ref$activeTextColor === void 0 ? Colors.primary : _ref$activeTextColor,\n      inactiveTextColor = _ref.inactiveTextColor,\n      textStyle = _ref.textStyle,\n      label = _ref.label,\n      labelStyle = _ref.labelStyle,\n      labelProps = _ref.labelProps,\n      onChange = _ref.onChange,\n      _ref$align = _ref.align,\n      align = _ref$align === void 0 ? WheelPickerAlign.CENTER : _ref$align,\n      style = _ref.style,\n      children = _ref.children,\n      _ref$initialValue = _ref.initialValue,\n      initialValue = _ref$initialValue === void 0 ? 0 : _ref$initialValue,\n      testID = _ref.testID;\n  var scrollView = useRef();\n  var offset = useSharedValue(0);\n  var scrollHandler = useAnimatedScrollHandler(function () {\n    var _f = function _f(e) {\n      offset.value = e.contentOffset.y;\n    };\n\n    _f._closure = {\n      offset: offset\n    };\n    _f.asString = \"function _f(e){const{offset}=jsThis._closure;{offset.value=e.contentOffset.y;}}\";\n    _f.__workletHash = 12677925137497;\n    _f.__location = \"/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/WheelPicker/index.js (36:49)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n\n  var _usePresenter = usePresenter({\n    initialValue: initialValue,\n    items: propItems,\n    children: children,\n    itemHeight: itemHeight,\n    preferredNumVisibleRows: numberOfVisibleRows\n  }),\n      height = _usePresenter.height,\n      items = _usePresenter.items,\n      currentIndex = _usePresenter.index,\n      getRowItemAtOffset = _usePresenter.getRowItemAtOffset;\n\n  var prevInitialValue = useRef(initialValue);\n  var prevIndex = useRef(currentIndex);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      flatListWidth = _useState2[0],\n      setFlatListWidth = _useState2[1];\n\n  var keyExtractor = useCallback(function (item, index) {\n    return item + \".\" + index;\n  }, []);\n  useEffect(function () {\n    !isUndefined(initialValue) && scrollToIndex(currentIndex, true);\n  }, [currentIndex]);\n\n  var _onChange = useCallback(function (value, index) {\n    if (prevInitialValue.current !== initialValue) {\n      prevInitialValue.current = initialValue;\n    } else {\n      onChange == null ? void 0 : onChange(value, index);\n    }\n  }, [initialValue, onChange]);\n\n  var onValueChange = useCallback(function (event) {\n    var _getRowItemAtOffset = getRowItemAtOffset(event.nativeEvent.contentOffset.y),\n        index = _getRowItemAtOffset.index,\n        value = _getRowItemAtOffset.value;\n\n    _onChange(value, index);\n  }, [_onChange, getRowItemAtOffset]);\n\n  var onMomentumScrollEndAndroid = function onMomentumScrollEndAndroid(index) {\n    if (Constants.isAndroid && prevIndex.current !== index) {\n      var _items$index;\n\n      prevIndex.current = index;\n\n      _onChange(items == null ? void 0 : (_items$index = items[index]) == null ? void 0 : _items$index.value, index);\n    }\n  };\n\n  var scrollToOffset = function scrollToOffset(index, animated) {\n    var _scrollView$current;\n\n    if (isFunction((_scrollView$current = scrollView.current) == null ? void 0 : _scrollView$current.scrollToOffset)) {\n      var _scrollView$current2;\n\n      (_scrollView$current2 = scrollView.current) == null ? void 0 : _scrollView$current2.scrollToOffset({\n        offset: index * itemHeight,\n        animated: animated\n      });\n    } else {\n      var _scrollView$current3, _scrollView$current3$;\n\n      (_scrollView$current3 = scrollView.current) == null ? void 0 : (_scrollView$current3$ = _scrollView$current3.getNode()) == null ? void 0 : _scrollView$current3$.scrollToOffset({\n        offset: index * itemHeight,\n        animated: animated\n      });\n    }\n  };\n\n  var scrollToIndex = function scrollToIndex(index, animated) {\n    onMomentumScrollEndAndroid(index);\n    setTimeout(function () {\n      return scrollToOffset(index, animated);\n    }, 100);\n  };\n\n  var scrollToPassedIndex = useCallback(function () {\n    scrollToIndex(currentIndex, false);\n  }, []);\n  var selectItem = useCallback(function (index) {\n    scrollToIndex(index, true);\n  }, [itemHeight]);\n  var renderItem = useCallback(function (_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return _jsx(Item, _objectSpread(_objectSpread({\n      index: index,\n      itemHeight: itemHeight,\n      offset: offset,\n      activeColor: activeTextColor,\n      inactiveColor: inactiveTextColor,\n      style: textStyle\n    }, item), {}, {\n      fakeLabel: label,\n      fakeLabelStyle: labelStyle,\n      fakeLabelProps: labelProps,\n      centerH: !label,\n      onSelect: selectItem,\n      testID: testID + \".item_\" + index\n    }));\n  }, [itemHeight]);\n  var getItemLayout = useCallback(function (_data, index) {\n    return {\n      length: itemHeight,\n      offset: itemHeight * index,\n      index: index\n    };\n  }, [itemHeight]);\n  var updateFlatListWidth = useCallback(function (width) {\n    setFlatListWidth(width);\n  }, []);\n  var alignmentStyle = useMemo(function () {\n    return align === WheelPickerAlign.RIGHT ? {\n      alignSelf: undefined\n    } : align === WheelPickerAlign.LEFT ? {\n      alignSelf: 'flex-start'\n    } : {\n      alignSelf: 'center'\n    };\n  }, [align]);\n  var contentContainerStyle = useMemo(function () {\n    return [{\n      paddingVertical: height / 2 - itemHeight / 2\n    }, alignmentStyle];\n  }, [height, itemHeight, alignmentStyle]);\n  var labelContainerStyle = useMemo(function () {\n    return [{\n      position: 'absolute',\n      top: 0,\n      bottom: 0\n    }, alignmentStyle];\n  }, [alignmentStyle]);\n  var labelContainer = useMemo(function () {\n    return _jsx(View, {\n      style: labelContainerStyle,\n      width: flatListWidth,\n      pointerEvents: \"none\",\n      children: _jsx(View, {\n        style: styles.label,\n        centerV: true,\n        pointerEvents: \"none\",\n        children: _jsx(Text, _objectSpread(_objectSpread({\n          \"marginL-s2\": true,\n          \"marginR-s5\": true,\n          text80M: true\n        }, labelProps), {}, {\n          color: activeTextColor,\n          style: labelStyle,\n          children: label\n        }))\n      })\n    });\n  }, [flatListWidth, labelContainerStyle, label, labelProps, activeTextColor, labelStyle]);\n  var fader = useMemo(function () {\n    return function (position) {\n      return _jsx(Fader, {\n        visible: true,\n        position: position,\n        size: 60\n      });\n    };\n  }, []);\n  var separators = useMemo(function () {\n    return _jsx(View, {\n      absF: true,\n      centerV: true,\n      pointerEvents: \"none\",\n      children: _jsx(View, {\n        style: styles.separators\n      })\n    });\n  }, []);\n  return _jsxs(View, {\n    testID: testID,\n    \"bg-white\": true,\n    style: style,\n    children: [_jsx(View, {\n      row: true,\n      centerH: true,\n      children: _jsx(View, {\n        flexG: true,\n        children: _jsx(AnimatedFlatList, {\n          testID: testID + \".list\",\n          height: height,\n          data: items,\n          keyExtractor: keyExtractor,\n          scrollEventThrottle: 100,\n          onScroll: scrollHandler,\n          onMomentumScrollEnd: onValueChange,\n          showsVerticalScrollIndicator: false,\n          onLayout: scrollToPassedIndex,\n          ref: scrollView,\n          contentContainerStyle: contentContainerStyle,\n          snapToInterval: itemHeight,\n          decelerationRate: Constants.isAndroid ? 0.98 : 'normal',\n          renderItem: renderItem,\n          getItemLayout: getItemLayout,\n          initialScrollIndex: currentIndex,\n          onContentSizeChange: updateFlatListWidth,\n          centerContent: align === 'center' && Constants.isRTL\n        })\n      })\n    }), label && labelContainer, fader(FaderPosition.BOTTOM), fader(FaderPosition.TOP), separators]\n  });\n};\n\nWheelPicker.propTypes = {\n  items: _pt.array,\n  itemHeight: _pt.number,\n  numberOfVisibleRows: _pt.number,\n  activeTextColor: _pt.string,\n  inactiveTextColor: _pt.string,\n  label: _pt.string,\n  onChange: _pt.func,\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]),\n  testID: _pt.string\n};\nWheelPicker.alignments = WheelPickerAlign;\nWheelPicker.displayName = 'Incubator.WheelPicker';\nexport default asBaseComponent(WheelPicker);\nexport { ItemProps as WheelPickerItemProps };\nvar styles = StyleSheet.create({\n  separators: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: Spacings.s9,\n    borderColor: Colors.grey60\n  },\n  label: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/WheelPicker/index.js"],"names":["_pt","isFunction","isUndefined","React","useCallback","useRef","useMemo","useEffect","useState","Animated","useSharedValue","useAnimatedScrollHandler","Colors","Spacings","Constants","asBaseComponent","View","Fader","FaderPosition","Item","ItemProps","Text","usePresenter","WheelPickerAlign","AnimatedFlatList","createAnimatedComponent","FlatList","WheelPicker","propItems","items","itemHeight","numberOfVisibleRows","activeTextColor","primary","inactiveTextColor","textStyle","label","labelStyle","labelProps","onChange","align","CENTER","style","children","initialValue","testID","scrollView","offset","scrollHandler","e","value","contentOffset","y","preferredNumVisibleRows","height","currentIndex","index","getRowItemAtOffset","prevInitialValue","prevIndex","flatListWidth","setFlatListWidth","keyExtractor","item","scrollToIndex","_onChange","current","onValueChange","event","nativeEvent","onMomentumScrollEndAndroid","isAndroid","scrollToOffset","animated","getNode","setTimeout","scrollToPassedIndex","selectItem","renderItem","getItemLayout","_data","length","updateFlatListWidth","width","alignmentStyle","RIGHT","alignSelf","undefined","LEFT","contentContainerStyle","paddingVertical","labelContainerStyle","position","top","bottom","labelContainer","styles","fader","separators","isRTL","BOTTOM","TOP","propTypes","array","number","string","func","oneOfType","element","arrayOf","alignments","displayName","WheelPickerItemProps","StyleSheet","create","borderTopWidth","borderBottomWidth","s9","borderColor","grey60","right"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n// TODO: Support style customization\nimport { isFunction, isUndefined } from 'lodash';\nimport React, { useCallback, useRef, useMemo, useEffect, useState } from 'react';\nimport { FlatList, StyleSheet } from 'react-native';\nimport Animated, { useSharedValue, useAnimatedScrollHandler } from 'react-native-reanimated';\nimport { Colors, Spacings } from \"../../style\";\nimport { Constants, asBaseComponent } from \"../../commons/new\";\nimport View from \"../../components/view\";\nimport Fader, { FaderPosition } from \"../../components/fader\";\nimport Item, { ItemProps } from \"./Item\";\nimport Text from \"../../components/text\";\nimport usePresenter from \"./usePresenter\";\nimport { WheelPickerAlign } from \"./types\";\nconst AnimatedFlatList = Animated.createAnimatedComponent(FlatList);\n\nconst WheelPicker = ({\n  items: propItems,\n  itemHeight = 44,\n  numberOfVisibleRows = 5,\n  activeTextColor = Colors.primary,\n  inactiveTextColor,\n  textStyle,\n  label,\n  labelStyle,\n  labelProps,\n  onChange,\n  align = WheelPickerAlign.CENTER,\n  style,\n  children,\n  initialValue = 0,\n  testID\n}) => {\n  const scrollView = useRef();\n  const offset = useSharedValue(0);\n  const scrollHandler = useAnimatedScrollHandler(e => {\n    offset.value = e.contentOffset.y;\n  });\n  const {\n    height,\n    items,\n    index: currentIndex,\n    getRowItemAtOffset\n  } = usePresenter({\n    initialValue,\n    items: propItems,\n    children,\n    itemHeight,\n    preferredNumVisibleRows: numberOfVisibleRows\n  });\n  const prevInitialValue = useRef(initialValue);\n  const prevIndex = useRef(currentIndex);\n  const [flatListWidth, setFlatListWidth] = useState(0);\n  const keyExtractor = useCallback((item, index) => `${item}.${index}`, []);\n  useEffect(() => {\n    // This effect making sure to reset index if initialValue has changed\n    !isUndefined(initialValue) && scrollToIndex(currentIndex, true);\n  }, [currentIndex]);\n\n  const _onChange = useCallback((value, index) => {\n    if (prevInitialValue.current !== initialValue) {\n      // don't invoke 'onChange' if 'initialValue' changed\n      prevInitialValue.current = initialValue;\n    } else {\n      onChange?.(value, index);\n    }\n  }, [initialValue, onChange]);\n\n  const onValueChange = useCallback(event => {\n    const {\n      index,\n      value\n    } = getRowItemAtOffset(event.nativeEvent.contentOffset.y);\n\n    _onChange(value, index);\n  }, [_onChange, getRowItemAtOffset]);\n\n  const onMomentumScrollEndAndroid = index => {\n    // handle Android bug: ScrollView does not call 'onMomentumScrollEnd' when scrolled programmatically (https://github.com/facebook/react-native/issues/26661)\n    if (Constants.isAndroid && prevIndex.current !== index) {\n      prevIndex.current = index;\n\n      _onChange(items?.[index]?.value, index);\n    }\n  };\n\n  const scrollToOffset = (index, animated) => {\n    // TODO: we should remove this split (the getNode section) in V6 and remove support for reanimated 1\n    //@ts-expect-error for some reason scrollToOffset isn't recognized\n    if (isFunction(scrollView.current?.scrollToOffset)) {\n      //@ts-expect-error\n      scrollView.current?.scrollToOffset({\n        offset: index * itemHeight,\n        animated\n      });\n    } else {\n      //@ts-expect-error\n      scrollView.current?.getNode()?.scrollToOffset({\n        offset: index * itemHeight,\n        animated\n      });\n    }\n  };\n\n  const scrollToIndex = (index, animated) => {\n    onMomentumScrollEndAndroid(index);\n    setTimeout(() => scrollToOffset(index, animated), 100);\n  };\n\n  const scrollToPassedIndex = useCallback(() => {\n    scrollToIndex(currentIndex, false);\n  }, []);\n  const selectItem = useCallback(index => {\n    scrollToIndex(index, true);\n  }, [itemHeight]);\n  const renderItem = useCallback(({\n    item,\n    index\n  }) => {\n    return <Item index={index} itemHeight={itemHeight} offset={offset} activeColor={activeTextColor} inactiveColor={inactiveTextColor} style={textStyle} {...item} fakeLabel={label} fakeLabelStyle={labelStyle} fakeLabelProps={labelProps} centerH={!label} onSelect={selectItem} testID={`${testID}.item_${index}`} />;\n  }, [itemHeight]);\n  const getItemLayout = useCallback((_data, index) => {\n    return {\n      length: itemHeight,\n      offset: itemHeight * index,\n      index\n    };\n  }, [itemHeight]);\n  const updateFlatListWidth = useCallback(width => {\n    setFlatListWidth(width);\n  }, []);\n  const alignmentStyle = useMemo(() => {\n    return align === WheelPickerAlign.RIGHT ? {\n      alignSelf: undefined\n    } : align === WheelPickerAlign.LEFT ? {\n      alignSelf: 'flex-start'\n    } : {\n      alignSelf: 'center'\n    };\n  }, [align]);\n  const contentContainerStyle = useMemo(() => {\n    return [{\n      paddingVertical: height / 2 - itemHeight / 2\n    }, alignmentStyle];\n  }, [height, itemHeight, alignmentStyle]);\n  const labelContainerStyle = useMemo(() => {\n    return [{\n      position: 'absolute',\n      top: 0,\n      bottom: 0\n    }, alignmentStyle];\n  }, [alignmentStyle]);\n  const labelContainer = useMemo(() => {\n    return (// @ts-expect-error\n      <View style={labelContainerStyle} width={flatListWidth} pointerEvents=\"none\">\n        <View style={styles.label} centerV pointerEvents=\"none\">\n          <Text marginL-s2 marginR-s5 text80M {...labelProps} color={activeTextColor} style={labelStyle}>\n            {label}\n          </Text>\n        </View>\n      </View>\n    );\n  }, [flatListWidth, labelContainerStyle, label, labelProps, activeTextColor, labelStyle]);\n  const fader = useMemo(() => position => {\n    return <Fader visible position={position} size={60} />;\n  }, []);\n  const separators = useMemo(() => {\n    return <View absF centerV pointerEvents=\"none\">\n        <View style={styles.separators} />\n      </View>;\n  }, []);\n  return <View testID={testID} bg-white style={style}>\n      <View row centerH>\n        <View flexG>\n          <AnimatedFlatList testID={`${testID}.list`} height={height} data={items} // @ts-ignore reanimated2\n        keyExtractor={keyExtractor} scrollEventThrottle={100} onScroll={scrollHandler} onMomentumScrollEnd={onValueChange} showsVerticalScrollIndicator={false} onLayout={scrollToPassedIndex} // @ts-ignore\n        ref={scrollView} // @ts-expect-error\n        contentContainerStyle={contentContainerStyle} snapToInterval={itemHeight} decelerationRate={Constants.isAndroid ? 0.98 : 'normal'} renderItem={renderItem} getItemLayout={getItemLayout} initialScrollIndex={currentIndex} onContentSizeChange={updateFlatListWidth}\n        /* This fixes an issue with RTL when centering flatlist content using alignSelf */\n        centerContent={align === 'center' && Constants.isRTL} />\n        </View>\n      </View>\n      {label && labelContainer}\n      {fader(FaderPosition.BOTTOM)}\n      {fader(FaderPosition.TOP)}\n      {separators}\n    </View>;\n};\n\nWheelPicker.propTypes = {\n  /**\n     * Data source for WheelPicker\n     */\n  items: _pt.array,\n\n  /**\n     * Describe the height of each item in the WheelPicker\n     * default value: 44\n     */\n  itemHeight: _pt.number,\n\n  /**\n     * Describe the number of rows visible\n     * default value: 5\n     */\n  numberOfVisibleRows: _pt.number,\n\n  /**\n     * Text color for the focused row\n     */\n  activeTextColor: _pt.string,\n\n  /**\n     * Text color for other, non-focused rows\n     */\n  inactiveTextColor: _pt.string,\n\n  /**\n     * Additional label on the right of the item text\n     */\n  label: _pt.string,\n\n  /**\n     * Event, on active row change\n     */\n  onChange: _pt.func,\n\n  /**\n     * Support passing items as children props\n     */\n  children: _pt.oneOfType([_pt.element, _pt.arrayOf(_pt.element)]),\n  testID: _pt.string\n};\nWheelPicker.alignments = WheelPickerAlign;\nWheelPicker.displayName = 'Incubator.WheelPicker';\nexport default asBaseComponent(WheelPicker);\nexport { ItemProps as WheelPickerItemProps };\nconst styles = StyleSheet.create({\n  separators: {\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    height: Spacings.s9,\n    borderColor: Colors.grey60\n  },\n  label: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0\n  }\n});"]},"metadata":{},"sourceType":"module"}