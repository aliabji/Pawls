{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { forwardRef } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { default as KeyboardTrackingViewIOS } from \"./KeyboardTrackingView.ios\";\nimport { default as KeyboardTrackingViewAndroid } from \"./KeyboardTrackingView.android\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar isAndroid = Platform.OS === 'android';\nvar KeyboardTrackingView = forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      others = _objectWithoutProperties(_ref, _excluded);\n\n  var KeyboardTrackingViewContainer = isAndroid ? KeyboardTrackingViewAndroid : KeyboardTrackingViewIOS;\n  return _jsx(KeyboardTrackingViewContainer, _objectSpread(_objectSpread({}, others), {}, {\n    ref: ref,\n    children: children\n  }));\n});\nexport default KeyboardTrackingView;","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/lib/components/Keyboard/KeyboardTracking/KeyboardTrackingView/index.js"],"names":["React","forwardRef","default","KeyboardTrackingViewIOS","KeyboardTrackingViewAndroid","isAndroid","Platform","OS","KeyboardTrackingView","ref","children","others","KeyboardTrackingViewContainer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,SAASC,OAAO,IAAIC,uBAApB;AACA,SAASD,OAAO,IAAIE,2BAApB;;AACA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAlC;AACA,IAAMC,oBAAoB,GAAGP,UAAU,CAAC,gBAGrCQ,GAHqC,EAG7B;AAAA,MAFTC,QAES,QAFTA,QAES;AAAA,MADNC,MACM;;AACT,MAAMC,6BAA6B,GAAGP,SAAS,GAAGD,2BAAH,GAAiCD,uBAAhF;AACA,SAAO,KAAC,6BAAD,kCAAmCQ,MAAnC;AAA2C,IAAA,GAAG,EAAEF,GAAhD;AAAA,cACFC;AADE,KAAP;AAGD,CARsC,CAAvC;AASA,eAAeF,oBAAf","sourcesContent":["import React, { forwardRef } from 'react';\nimport { Platform } from 'react-native';\nimport { default as KeyboardTrackingViewIOS } from \"./KeyboardTrackingView.ios\";\nimport { default as KeyboardTrackingViewAndroid } from \"./KeyboardTrackingView.android\";\nconst isAndroid = Platform.OS === 'android';\nconst KeyboardTrackingView = forwardRef(({\n  children,\n  ...others\n}, ref) => {\n  const KeyboardTrackingViewContainer = isAndroid ? KeyboardTrackingViewAndroid : KeyboardTrackingViewIOS;\n  return <KeyboardTrackingViewContainer {...others} ref={ref}>\n      {children}\n    </KeyboardTrackingViewContainer>;\n});\nexport default KeyboardTrackingView;"]},"metadata":{},"sourceType":"module"}