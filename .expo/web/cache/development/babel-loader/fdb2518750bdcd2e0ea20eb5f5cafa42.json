{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _TOAST_PRESETS;\n\nimport React from 'react';\nimport { Colors } from \"../../../style\";\nimport { ToastPresets } from \"../types\";\n\nvar checkMarkIcon = require(\"../assets/checkmarkFlat.png\");\n\nvar exclamationIcon = require(\"../assets/exclamationFill.png\");\n\nvar infoIcon = require(\"../assets/info.png\");\n\nvar redCloudIcon = require(\"../assets/redCloud.png\");\n\nvar TOAST_PRESETS = (_TOAST_PRESETS = {}, _defineProperty(_TOAST_PRESETS, ToastPresets.GENERAL, {\n  icon: infoIcon,\n  iconColor: Colors.getColorTint(Colors.primary, 50),\n  accessibilityMessagePrefix: ''\n}), _defineProperty(_TOAST_PRESETS, ToastPresets.SUCCESS, {\n  icon: checkMarkIcon,\n  iconColor: Colors.green40,\n  accessibilityMessagePrefix: 'Success'\n}), _defineProperty(_TOAST_PRESETS, ToastPresets.FAILURE, {\n  icon: exclamationIcon,\n  iconColor: Colors.red40,\n  accessibilityMessagePrefix: 'Alert'\n}), _defineProperty(_TOAST_PRESETS, ToastPresets.OFFLINE, {\n  icon: redCloudIcon,\n  iconColor: Colors.getColorTint(Colors.primary, 50),\n  accessibilityMessagePrefix: 'Offline'\n}), _TOAST_PRESETS);\nexport default (function (_ref) {\n  var preset = _ref.preset,\n      icon = _ref.icon,\n      iconColor = _ref.iconColor,\n      message = _ref.message;\n  var toastPreset = preset ? TOAST_PRESETS[preset] : undefined;\n  return {\n    icon: icon != null ? icon : toastPreset == null ? void 0 : toastPreset.icon,\n    iconColor: iconColor != null ? iconColor : toastPreset == null ? void 0 : toastPreset.iconColor,\n    accessibilityMessage: (toastPreset == null ? void 0 : toastPreset.accessibilityMessagePrefix) + \" notification, \" + message\n  };\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/toast/helpers/useToastPresets.js"],"names":["React","Colors","ToastPresets","checkMarkIcon","require","exclamationIcon","infoIcon","redCloudIcon","TOAST_PRESETS","GENERAL","icon","iconColor","getColorTint","primary","accessibilityMessagePrefix","SUCCESS","green40","FAILURE","red40","OFFLINE","preset","message","toastPreset","undefined","accessibilityMessage"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT;AACA,SAASC,YAAT;;AAEA,IAAMC,aAAa,GAAGC,OAAO,+BAA7B;;AAEA,IAAMC,eAAe,GAAGD,OAAO,iCAA/B;;AAEA,IAAME,QAAQ,GAAGF,OAAO,sBAAxB;;AAEA,IAAMG,YAAY,GAAGH,OAAO,0BAA5B;;AAEA,IAAMI,aAAa,yDAChBN,YAAY,CAACO,OADG,EACO;AACtBC,EAAAA,IAAI,EAAEJ,QADgB;AAEtBK,EAAAA,SAAS,EAAEV,MAAM,CAACW,YAAP,CAAoBX,MAAM,CAACY,OAA3B,EAAoC,EAApC,CAFW;AAGtBC,EAAAA,0BAA0B,EAAE;AAHN,CADP,mCAMhBZ,YAAY,CAACa,OANG,EAMO;AACtBL,EAAAA,IAAI,EAAEP,aADgB;AAEtBQ,EAAAA,SAAS,EAAEV,MAAM,CAACe,OAFI;AAGtBF,EAAAA,0BAA0B,EAAE;AAHN,CANP,mCAWhBZ,YAAY,CAACe,OAXG,EAWO;AACtBP,EAAAA,IAAI,EAAEL,eADgB;AAEtBM,EAAAA,SAAS,EAAEV,MAAM,CAACiB,KAFI;AAGtBJ,EAAAA,0BAA0B,EAAE;AAHN,CAXP,mCAgBhBZ,YAAY,CAACiB,OAhBG,EAgBO;AACtBT,EAAAA,IAAI,EAAEH,YADgB;AAEtBI,EAAAA,SAAS,EAAEV,MAAM,CAACW,YAAP,CAAoBX,MAAM,CAACY,OAA3B,EAAoC,EAApC,CAFW;AAGtBC,EAAAA,0BAA0B,EAAE;AAHN,CAhBP,kBAAnB;AAsBA,gBAAgB,gBAKV;AAAA,MAJJM,MAII,QAJJA,MAII;AAAA,MAHJV,IAGI,QAHJA,IAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,MADJU,OACI,QADJA,OACI;AACJ,MAAMC,WAAW,GAAGF,MAAM,GAAGZ,aAAa,CAACY,MAAD,CAAhB,GAA2BG,SAArD;AACA,SAAO;AACLb,IAAAA,IAAI,EAAEA,IAAF,WAAEA,IAAF,GAAUY,WAAV,oBAAUA,WAAW,CAAEZ,IADtB;AAELC,IAAAA,SAAS,EAAEA,SAAF,WAAEA,SAAF,GAAeW,WAAf,oBAAeA,WAAW,CAAEX,SAFhC;AAGLa,IAAAA,oBAAoB,GAAKF,WAAL,oBAAKA,WAAW,CAAER,0BAAlB,wBAA8DO;AAH7E,GAAP;AAKD,CAZD","sourcesContent":["import React from 'react';\nimport { Colors } from \"../../../style\";\nimport { ToastPresets } from \"../types\";\n\nconst checkMarkIcon = require(\"../assets/checkmarkFlat.png\");\n\nconst exclamationIcon = require(\"../assets/exclamationFill.png\");\n\nconst infoIcon = require(\"../assets/info.png\");\n\nconst redCloudIcon = require(\"../assets/redCloud.png\");\n\nconst TOAST_PRESETS = {\n  [ToastPresets.GENERAL]: {\n    icon: infoIcon,\n    iconColor: Colors.getColorTint(Colors.primary, 50),\n    accessibilityMessagePrefix: ''\n  },\n  [ToastPresets.SUCCESS]: {\n    icon: checkMarkIcon,\n    iconColor: Colors.green40,\n    accessibilityMessagePrefix: 'Success'\n  },\n  [ToastPresets.FAILURE]: {\n    icon: exclamationIcon,\n    iconColor: Colors.red40,\n    accessibilityMessagePrefix: 'Alert'\n  },\n  [ToastPresets.OFFLINE]: {\n    icon: redCloudIcon,\n    iconColor: Colors.getColorTint(Colors.primary, 50),\n    accessibilityMessagePrefix: 'Offline'\n  }\n};\nexport default (({\n  preset,\n  icon,\n  iconColor,\n  message\n}) => {\n  const toastPreset = preset ? TOAST_PRESETS[preset] : undefined;\n  return {\n    icon: icon ?? toastPreset?.icon,\n    iconColor: iconColor ?? toastPreset?.iconColor,\n    accessibilityMessage: `${toastPreset?.accessibilityMessagePrefix} notification, ${message}`\n  };\n});"]},"metadata":{},"sourceType":"module"}