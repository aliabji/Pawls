{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport KeyboardTrackingView from \"./KeyboardTrackingView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar KeyboardAwareInsetsView = function KeyboardAwareInsetsView(props) {\n  return _jsx(KeyboardTrackingView, _objectSpread(_objectSpread({}, props), {}, {\n    pointerEvents: 'none',\n    style: styles.insetsView,\n    scrollToFocusedInput: true\n  }));\n};\n\nvar ScreenSize = Dimensions.get('window');\nvar styles = StyleSheet.create({\n  insetsView: {\n    width: ScreenSize.width,\n    height: 0.5,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'transparent'\n  }\n});\nKeyboardAwareInsetsView.displayName = 'KeyboardAwareInsetsView';\nexport default KeyboardAwareInsetsView;","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/lib/components/Keyboard/KeyboardTracking/KeyboardAwareInsetsView.js"],"names":["React","KeyboardTrackingView","KeyboardAwareInsetsView","props","styles","insetsView","ScreenSize","Dimensions","get","StyleSheet","create","width","height","position","bottom","left","backgroundColor","displayName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,oBAAP;;;AAQA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;AAAA,SAAI,KAAC,oBAAD,kCAA0BA,KAA1B;AAAiC,IAAA,aAAa,EAAE,MAAhD;AAAwD,IAAA,KAAK,EAAEC,MAAM,CAACC,UAAtE;AAAkF,IAAA,oBAAoB;AAAtG,KAAJ;AAAA,CAArC;;AAEA,IAAMC,UAAU,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAnB;AACA,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BL,EAAAA,UAAU,EAAE;AACVM,IAAAA,KAAK,EAAEL,UAAU,CAACK,KADR;AAEVC,IAAAA,MAAM,EAAE,GAFE;AAGVC,IAAAA,QAAQ,EAAE,UAHA;AAIVC,IAAAA,MAAM,EAAE,CAJE;AAKVC,IAAAA,IAAI,EAAE,CALI;AAMVC,IAAAA,eAAe,EAAE;AANP;AADmB,CAAlB,CAAf;AAUAd,uBAAuB,CAACe,WAAxB,GAAsC,yBAAtC;AACA,eAAef,uBAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Dimensions } from 'react-native';\nimport KeyboardTrackingView from \"./KeyboardTrackingView\";\n/**\n * @description: Used to add an inset when a keyboard is used and might hide part of the screen.\n *\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TextFieldScreen/InputsScreen.js\n * @notes: This view is useful only for iOS.\n */\n\nconst KeyboardAwareInsetsView = props => <KeyboardTrackingView {...props} pointerEvents={'none'} style={styles.insetsView} scrollToFocusedInput />;\n\nconst ScreenSize = Dimensions.get('window');\nconst styles = StyleSheet.create({\n  insetsView: {\n    width: ScreenSize.width,\n    height: 0.5,\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'transparent'\n  }\n});\nKeyboardAwareInsetsView.displayName = 'KeyboardAwareInsetsView';\nexport default KeyboardAwareInsetsView;"]},"metadata":{},"sourceType":"module"}