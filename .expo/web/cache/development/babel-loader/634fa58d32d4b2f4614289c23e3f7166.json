{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport ColorPalette from \"../colorPalette\";\nimport { SWATCH_MARGIN, SWATCH_SIZE } from \"../colorSwatch\";\nimport ColorPickerDialog from \"./ColorPickerDialog\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ACCESSIBILITY_LABELS = {\n  addButton: 'add custom color using hex code',\n  dismissButton: 'dismiss',\n  doneButton: 'done',\n  input: 'custom hex color code'\n};\n\nvar ColorPicker = function (_PureComponent) {\n  _inherits(ColorPicker, _PureComponent);\n\n  var _super = _createSuper(ColorPicker);\n\n  function ColorPicker() {\n    var _this;\n\n    _classCallCheck(this, ColorPicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      show: false\n    };\n\n    _this.showDialog = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    _this.hideDialog = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.onValueChange = function (value, options) {\n      _this.props.onValueChange == null ? void 0 : _this.props.onValueChange(value, options);\n    };\n\n    return _this;\n  }\n\n  _createClass(ColorPicker, [{\n    key: \"animatedIndex\",\n    get: function get() {\n      var _this$props = this.props,\n          animatedIndex = _this$props.animatedIndex,\n          colors = _this$props.colors;\n\n      if (animatedIndex === undefined) {\n        return colors.length - 1;\n      }\n\n      return animatedIndex;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          initialColor = _this$props2.initialColor,\n          colors = _this$props2.colors,\n          value = _this$props2.value,\n          testID = _this$props2.testID,\n          accessibilityLabels = _this$props2.accessibilityLabels;\n      var show = this.state.show;\n      return _jsxs(View, {\n        row: true,\n        testID: testID,\n        children: [_jsx(ColorPalette, {\n          value: value,\n          colors: colors,\n          style: styles.palette,\n          usePagination: false,\n          animatedIndex: this.animatedIndex,\n          onValueChange: this.onValueChange,\n          testID: testID + \"-palette\"\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(Button, {\n            color: Colors.grey10,\n            outlineColor: Colors.grey10,\n            style: styles.button,\n            round: true,\n            outline: true,\n            iconSource: Assets.icons.plusSmall,\n            onPress: this.showDialog,\n            testID: testID + \"-button\",\n            accessibilityLabel: accessibilityLabels == null ? void 0 : accessibilityLabels.addButton\n          })\n        }), _createElement(ColorPickerDialog, _objectSpread(_objectSpread({}, this.props), {}, {\n          key: initialColor,\n          visible: show,\n          onDismiss: this.hideDialog,\n          accessibilityLabels: {\n            dismissButton: accessibilityLabels == null ? void 0 : accessibilityLabels.dismissButton,\n            doneButton: accessibilityLabels == null ? void 0 : accessibilityLabels.doneButton,\n            input: accessibilityLabels == null ? void 0 : accessibilityLabels.input\n          }\n        }))]\n      });\n    }\n  }]);\n\n  return ColorPicker;\n}(PureComponent);\n\nColorPicker.propTypes = {\n  colors: _pt.arrayOf(_pt.string).isRequired,\n  value: _pt.string,\n  animatedIndex: _pt.number,\n  onValueChange: _pt.func,\n  accessibilityLabels: _pt.shape({\n    addButton: _pt.string,\n    dismissButton: _pt.string,\n    doneButton: _pt.string,\n    input: _pt.string\n  }),\n  testID: _pt.string\n};\nColorPicker.displayName = 'ColorPicker';\nColorPicker.defaultProps = {\n  accessibilityLabels: ACCESSIBILITY_LABELS\n};\nexport default asBaseComponent(ColorPicker);\nvar plusButtonContainerWidth = SWATCH_SIZE + 20 + 12;\nvar plusButtonContainerHeight = 92 - 2 * SWATCH_MARGIN;\nvar styles = StyleSheet.create({\n  palette: {\n    paddingLeft: plusButtonContainerWidth\n  },\n  buttonContainer: {\n    position: 'absolute',\n    left: 0,\n    width: plusButtonContainerWidth,\n    height: plusButtonContainerHeight,\n    marginTop: SWATCH_MARGIN,\n    marginBottom: SWATCH_MARGIN,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    paddingTop: 1,\n    backgroundColor: Colors.white\n  },\n  button: {\n    width: SWATCH_SIZE,\n    height: SWATCH_SIZE,\n    marginRight: 12\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/colorPicker/index.js"],"names":["_pt","React","PureComponent","asBaseComponent","Assets","Colors","View","Button","ColorPalette","SWATCH_MARGIN","SWATCH_SIZE","ColorPickerDialog","ACCESSIBILITY_LABELS","addButton","dismissButton","doneButton","input","ColorPicker","state","show","showDialog","setState","hideDialog","onValueChange","value","options","props","animatedIndex","colors","undefined","length","initialColor","testID","accessibilityLabels","styles","palette","buttonContainer","grey10","button","icons","plusSmall","propTypes","arrayOf","string","isRequired","number","func","shape","displayName","defaultProps","plusButtonContainerWidth","plusButtonContainerHeight","StyleSheet","create","paddingLeft","position","left","width","height","marginTop","marginBottom","alignItems","justifyContent","paddingTop","backgroundColor","white","marginRight"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\nimport React, { PureComponent } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { asBaseComponent } from \"../../commons/new\";\nimport Assets from \"../../assets\";\nimport { Colors } from \"../../style\";\nimport View from \"../view\";\nimport Button from \"../button\";\nimport ColorPalette from \"../colorPalette\";\nimport { SWATCH_MARGIN, SWATCH_SIZE } from \"../colorSwatch\";\nimport ColorPickerDialog from \"./ColorPickerDialog\";\nconst ACCESSIBILITY_LABELS = {\n  addButton: 'add custom color using hex code',\n  dismissButton: 'dismiss',\n  doneButton: 'done',\n  input: 'custom hex color code'\n};\n/**\n * @description: A color picker component\n * @example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ColorPickerScreen.tsx\n * @notes: This is a screen width component\n * @gif: https://github.com/wix/react-native-ui-lib/blob/master/demo/showcase/ColorPicker/ColorPicker.gif?raw=true\n */\n\nclass ColorPicker extends PureComponent {\n  static propTypes = {\n    /**\n       * Array of colors for the picker's color palette (hex values)\n       */\n    colors: _pt.arrayOf(_pt.string).isRequired,\n\n    /**\n       * The value of the selected swatch // TODO: rename prop 'selectedValue'\n       */\n    value: _pt.string,\n\n    /**\n       * The index of the item to animate at first render (default is last)\n       */\n    animatedIndex: _pt.number,\n\n    /**\n       * onValueChange callback for the picker's color palette change\n       */\n    onValueChange: _pt.func,\n\n    /**\n       * Accessibility labels as an object of strings, ex.\n       * {\n       *  addButton: 'add custom color using hex code',\n       *  dismissButton: 'dismiss',\n       *  doneButton: 'done',\n       *  input: 'custom hex color code'\n       * }\n       */\n    accessibilityLabels: _pt.shape({\n      addButton: _pt.string,\n      dismissButton: _pt.string,\n      doneButton: _pt.string,\n      input: _pt.string\n    }),\n    testID: _pt.string\n  };\n  static displayName = 'ColorPicker';\n  static defaultProps = {\n    accessibilityLabels: ACCESSIBILITY_LABELS\n  };\n  state = {\n    show: false\n  };\n\n  get animatedIndex() {\n    const {\n      animatedIndex,\n      colors\n    } = this.props;\n\n    if (animatedIndex === undefined) {\n      return colors.length - 1;\n    }\n\n    return animatedIndex;\n  }\n\n  showDialog = () => {\n    this.setState({\n      show: true\n    });\n  };\n  hideDialog = () => {\n    this.setState({\n      show: false\n    });\n  };\n\n  render() {\n    const {\n      initialColor,\n      colors,\n      value,\n      testID,\n      accessibilityLabels\n    } = this.props;\n    const {\n      show\n    } = this.state;\n    return <View row testID={testID}>\n        <ColorPalette value={value} colors={colors} style={styles.palette} usePagination={false} animatedIndex={this.animatedIndex} onValueChange={this.onValueChange} testID={`${testID}-palette`} />\n        <View style={styles.buttonContainer}>\n          <Button color={Colors.grey10} outlineColor={Colors.grey10} style={styles.button} round outline iconSource={Assets.icons.plusSmall} onPress={this.showDialog} testID={`${testID}-button`} accessibilityLabel={accessibilityLabels?.addButton} />\n        </View>\n        <ColorPickerDialog {...this.props} key={initialColor} visible={show} onDismiss={this.hideDialog} accessibilityLabels={{\n        dismissButton: accessibilityLabels?.dismissButton,\n        doneButton: accessibilityLabels?.doneButton,\n        input: accessibilityLabels?.input\n      }} />\n      </View>;\n  } // ColorPalette\n\n\n  onValueChange = (value, options) => {\n    this.props.onValueChange?.(value, options);\n  };\n}\n\nexport default asBaseComponent(ColorPicker);\nconst plusButtonContainerWidth = SWATCH_SIZE + 20 + 12;\nconst plusButtonContainerHeight = 92 - 2 * SWATCH_MARGIN;\nconst styles = StyleSheet.create({\n  palette: {\n    paddingLeft: plusButtonContainerWidth\n  },\n  buttonContainer: {\n    position: 'absolute',\n    left: 0,\n    width: plusButtonContainerWidth,\n    height: plusButtonContainerHeight,\n    marginTop: SWATCH_MARGIN,\n    marginBottom: SWATCH_MARGIN,\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n    paddingTop: 1,\n    backgroundColor: Colors.white\n  },\n  button: {\n    width: SWATCH_SIZE,\n    height: SWATCH_SIZE,\n    marginRight: 12\n  }\n});"]},"metadata":{},"sourceType":"module"}