{"ast":null,"code":"export var isLoggedIn = function isLoggedIn() {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/logged_in\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    return res;\n  });\n};\nexport var logIn = function logIn(credentials) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/login\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(credentials)\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    if (res.logged_in === true) {\n      return res;\n    } else {\n      return res.errors;\n    }\n  }).catch(function (err) {\n    console.log(err);\n    console.log('error logging in up: ', err);\n  });\n};\nexport var signUp = function signUp(credentials) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/signup\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(credentials)\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    if (res.logged_in === true) {\n      return res;\n    } else {\n      return res.errors;\n    }\n  }).catch(function (err) {\n    console.log(err);\n    console.log('error logging in up: ', err);\n  });\n};\nexport var logOut = function logOut() {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/logout\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST'\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    if (res.logged_out) {\n      return true;\n    } else {\n      return 'log out failed';\n    }\n  }).catch(function (err) {\n    console.log(err);\n    console.log('error logout failed: ', err);\n  });\n};\nexport var getDogs = function getDogs(userId) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/users/\" + userId + \"/dogs\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    console.log('error checking dogs: ', err);\n  });\n};\nexport var createDog = function createDog(dog) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/dogs/create\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(dog)\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    if (res.dog) {\n      console.log(res.dog.name + \" was successfully added to your profile \", res.dog);\n    } else {\n      console.log(\"dog submission failed \", res.errors);\n    }\n\n    return res;\n  }).catch(function (err) {\n    console.log(err);\n    console.log('error logging in up: ', err);\n  });\n};\nexport var getParks = function getParks() {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/parks\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    console.log('error checking parks: ', err);\n  });\n};\nexport var createPark = function createPark(park) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/parks/create\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(park)\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    if (res.park) {\n      console.log(res.park);\n      console.log(res.park.name + \" was successfully added to your profile \");\n      return res;\n    } else {\n      console.log(\"park creation failed \", res.errors);\n    }\n\n    return res;\n  }).catch(function (err) {\n    console.log(err);\n    console.log('error adding park: ', err);\n  });\n};\nexport var getFriends = function getFriends(userId) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/friends/\" + userId, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    console.log('error checking friends: ', err);\n  });\n};\nexport var createVisit = function createVisit(visit) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/park_visits\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'POST',\n    body: JSON.stringify(visit)\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    return res;\n  }).catch(function (err) {\n    console.log(err);\n    console.log('error adding visit: ', err);\n  });\n};\nexport var getVisit = function getVisit(visitId) {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/park_visits/\" + visitId, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    console.log(res);\n    return res;\n  }).catch(function (err) {\n    console.log('error checking visit: ', err);\n  });\n};\nexport var getVisits = function getVisits() {\n  return fetch(\"https://0598-76-69-64-101.ngrok.io\" + \"/park_visits/\", {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    method: 'GET'\n  }).then(function (data) {\n    return data.json();\n  }).then(function (res) {\n    console.log(res);\n    return res;\n  }).catch(function (err) {\n    console.log('error checking visit: ', err);\n  });\n};","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/utils/apiService.ts"],"names":["isLoggedIn","fetch","headers","method","then","data","json","res","logIn","credentials","body","JSON","stringify","logged_in","errors","catch","err","console","log","signUp","logOut","logged_out","getDogs","userId","createDog","dog","name","getParks","createPark","park","getFriends","createVisit","visit","getVisit","visitId","getVisits"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport {RAILS_API_ENDPOINT} from '@env'\n\nexport const isLoggedIn = () => {\n    return fetch(`${RAILS_API_ENDPOINT}/logged_in`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'GET'\n        }).then((data) => data.json()).then((res) =>{\n            return res\n        })\n}\n\nexport const logIn = (credentials: any) => {\n    return fetch(`${RAILS_API_ENDPOINT}/login`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'POST',\n        body: JSON.stringify(credentials)\n        }).then((data) => data.json()).then((res) =>{\n          if (res.logged_in === true) {\n            return res\n          } else {\n            return res.errors\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n          console.log('error logging in up: ', err)\n        })\n}\n\nexport const signUp = (credentials: any) => {\n    return fetch(`${RAILS_API_ENDPOINT}/signup`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'POST',\n        body: JSON.stringify(credentials)\n        }).then((data) => data.json()).then((res) =>{\n          if (res.logged_in === true) {\n            return res\n          } else {\n            return res.errors\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n          console.log('error logging in up: ', err)\n        })\n}\n\nexport const logOut = () => {\n    return fetch(`${RAILS_API_ENDPOINT}/logout`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'POST',\n        }).then((data) => data.json()).then((res) =>{\n          if (res.logged_out) {\n            return true\n          } else {\n              return 'log out failed'\n          }\n        })\n        .catch((err) => {\n          console.log(err)\n          console.log('error logout failed: ', err)\n        })\n}\n\nexport const getDogs = (userId: number) => {\n    return fetch(`${RAILS_API_ENDPOINT}/users/${userId}/dogs`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'GET'\n        }).then((data) => data.json()).then((res) =>{\n            return res\n        })\n        .catch((err) => {\n          console.log('error checking dogs: ', err)\n        })\n}\n\nexport const createDog = (dog: any) => {\n    return fetch(`${RAILS_API_ENDPOINT}/dogs/create`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'POST',\n        body: JSON.stringify(dog)\n        }).then((data) => data.json()).then((res) =>{\n            if (res.dog) {\n                console.log(`${res.dog.name} was successfully added to your profile `, res.dog)\n              } else {\n                console.log(\"dog submission failed \", res.errors)\n            }\n            return res\n        })\n        .catch((err) => {\n          console.log(err)\n          console.log('error logging in up: ', err)\n        })\n}\n\nexport const getParks = () => {\n    return fetch(`${RAILS_API_ENDPOINT}/parks`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'GET'\n        }).then((data) => data.json()).then((res) =>{\n            return res\n        })\n        .catch((err) => {\n          console.log('error checking parks: ', err)\n    })\n}\n\nexport const createPark = (park: any) => {\n    return fetch(`${RAILS_API_ENDPOINT}/parks/create`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'POST',\n        body: JSON.stringify(park)\n        }).then((data) => data.json()).then((res) =>{\n          if (res.park) {\n              console.log(res.park)\n            console.log(`${res.park.name} was successfully added to your profile `)\n            return res\n          } else {\n            console.log(\"park creation failed \", res.errors)\n          }\n          return res\n        })\n        .catch((err) => {\n          console.log(err)\n          console.log('error adding park: ', err)\n        })\n}\n\nexport const getFriends = (userId: string) => {\n    return fetch(`${RAILS_API_ENDPOINT}/friends/${userId}`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'GET'\n        }).then((data) => data.json()).then((res) =>{\n            return res\n        })\n        .catch((err) => {\n          console.log('error checking friends: ', err)\n    })\n}\n\nexport const createVisit = (visit: any) => {\n    return fetch(`${RAILS_API_ENDPOINT}/park_visits`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'POST',\n        body: JSON.stringify(visit)\n        }).then((data) => data.json()).then((res) =>{\n          return res\n        })\n        .catch((err) => {\n          console.log(err)\n          console.log('error adding visit: ', err)\n        })\n}\n\nexport const getVisit = (visitId: string) => {\n    return fetch(`${RAILS_API_ENDPOINT}/park_visits/${visitId}`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'GET'\n        }).then((data) => data.json()).then((res) =>{\n            console.log(res)\n            return res\n        })\n        .catch((err) => {\n          console.log('error checking visit: ', err)\n    })\n}\n\nexport const getVisits = () => {\n    return fetch(`${RAILS_API_ENDPOINT}/park_visits/`, {\n        headers: { 'Content-Type': 'application/json' },\n        method: 'GET'\n        }).then((data) => data.json()).then((res) =>{\n            console.log(res)\n            return res\n        })\n        .catch((err) => {\n          console.log('error checking visit: ', err)\n    })\n}"]},"metadata":{},"sourceType":"module"}