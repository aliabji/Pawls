{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Typography, Colors } from \"../../style\";\nimport Assets from \"../../assets\";\nimport { BaseComponent } from \"../../commons\";\nimport Modal from \"../modal\";\nimport View from \"../view\";\nimport Icon from \"../icon\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar PickerModal = function (_BaseComponent) {\n  _inherits(PickerModal, _BaseComponent);\n\n  var _super = _createSuper(PickerModal);\n\n  function PickerModal() {\n    var _this;\n\n    _classCallCheck(this, PickerModal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      scrollHeight: undefined,\n      scrollContentHeight: undefined\n    };\n\n    _this.keyExtractor = function (_item, index) {\n      return index.toString();\n    };\n\n    _this.renderItem = function (_ref) {\n      var index = _ref.index;\n      var children = _this.props.children;\n      return React.Children.toArray(children)[index];\n    };\n\n    return _this;\n  }\n\n  _createClass(PickerModal, [{\n    key: \"generateStyles\",\n    value: function generateStyles() {\n      this.styles = createStyles(this.props);\n    }\n  }, {\n    key: \"renderSearchInput\",\n    value: function renderSearchInput() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          showSearch = _this$props.showSearch,\n          searchStyle = _this$props.searchStyle,\n          searchPlaceholder = _this$props.searchPlaceholder,\n          onSearchChange = _this$props.onSearchChange,\n          renderCustomSearch = _this$props.renderCustomSearch,\n          testID = _this$props.testID;\n\n      if (showSearch) {\n        if (_.isFunction(renderCustomSearch)) {\n          return renderCustomSearch(this.props);\n        }\n\n        return _jsxs(View, {\n          style: this.styles.searchInputContainer,\n          children: [_jsx(Icon, {\n            style: this.styles.searchIcon,\n            source: searchStyle.icon || Assets.icons.search\n          }), _jsx(TextInput, {\n            testID: testID,\n            ref: function ref(r) {\n              return _this2.search = r;\n            },\n            style: [this.styles.searchInput, {\n              color: searchStyle.color\n            }],\n            placeholderTextColor: searchStyle.placeholderTextColor,\n            selectionColor: searchStyle.selectionColor,\n            placeholder: searchPlaceholder,\n            onChangeText: _.throttle(onSearchChange, 300),\n            autoCorrect: false,\n            underlineColorAndroid: \"transparent\"\n          })]\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          topBarProps = _this$props2.topBarProps,\n          listProps = _this$props2.listProps,\n          children = _this$props2.children;\n      return _jsxs(_Fragment, {\n        children: [_jsx(Modal.TopBar, _objectSpread({}, topBarProps)), this.renderSearchInput(), _jsx(FlatList, _objectSpread({\n          data: _.times(React.Children.count(children)),\n          renderItem: this.renderItem,\n          keyExtractor: this.keyExtractor\n        }, listProps))]\n      });\n    }\n  }]);\n\n  return PickerModal;\n}(BaseComponent);\n\nPickerModal.displayName = 'IGNORE';\nPickerModal.propTypes = _objectSpread(_objectSpread({}, Modal.propTypes), {}, {\n  topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n  scrollPosition: PropTypes.number,\n  showSearch: PropTypes.bool,\n  searchStyle: PropTypes.shape({\n    color: PropTypes.string,\n    placeholderTextColor: PropTypes.string,\n    selectionColor: PropTypes.string,\n    icon: PropTypes.object\n  }),\n  searchPlaceholder: PropTypes.string,\n  onSearchChange: PropTypes.func,\n  renderCustomSearch: PropTypes.elementType,\n  listProps: PropTypes.object,\n  pickerModalProps: PropTypes.object\n});\nPickerModal.defaultProps = {\n  searchPlaceholder: 'Search...',\n  searchStyle: {}\n};\n\nfunction createStyles() {\n  return StyleSheet.create({\n    modalBody: {},\n    searchInputContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingLeft: 16,\n      borderBottomWidth: StyleSheet.hairlineWidth,\n      borderBottomColor: Colors.grey60\n    },\n    searchIcon: {\n      marginRight: 12\n    },\n    searchInput: _objectSpread({\n      height: 60,\n      paddingRight: 16,\n      flex: 1\n    }, Typography.text70)\n  });\n}\n\nexport default PickerModal;","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/components/picker/PickerModal.js"],"names":["_","PropTypes","React","Typography","Colors","Assets","BaseComponent","Modal","View","Icon","PickerModal","state","scrollHeight","undefined","scrollContentHeight","keyExtractor","_item","index","toString","renderItem","children","props","Children","toArray","styles","createStyles","showSearch","searchStyle","searchPlaceholder","onSearchChange","renderCustomSearch","testID","isFunction","searchInputContainer","searchIcon","icon","icons","search","r","searchInput","color","placeholderTextColor","selectionColor","throttle","topBarProps","listProps","renderSearchInput","times","count","displayName","propTypes","shape","TopBar","scrollPosition","number","bool","string","object","func","elementType","pickerModalProps","defaultProps","StyleSheet","create","modalBody","flexDirection","alignItems","paddingLeft","borderBottomWidth","hairlineWidth","borderBottomColor","grey60","marginRight","height","paddingRight","flex","text70"],"mappings":"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","sourcesContent":["// TODO: This should be renamed to PickerOverlayContent cause it's\n// not responsible for rendering the Modal anymore \nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport {StyleSheet, FlatList, TextInput} from 'react-native';\nimport {Typography, Colors} from '../../style';\nimport Assets from '../../assets';\nimport {BaseComponent} from '../../commons';\nimport Modal from '../modal';\nimport View from '../view';\nimport Icon from '../icon';\n\nclass PickerModal extends BaseComponent {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    ...Modal.propTypes,\n    topBarProps: PropTypes.shape(Modal.TopBar.propTypes),\n    scrollPosition: PropTypes.number,\n    showSearch: PropTypes.bool,\n    searchStyle: PropTypes.shape({\n      color: PropTypes.string,\n      placeholderTextColor: PropTypes.string,\n      selectionColor: PropTypes.string,\n      icon: PropTypes.object\n    }),\n    searchPlaceholder: PropTypes.string,\n    onSearchChange: PropTypes.func,\n    renderCustomSearch: PropTypes.elementType,\n    listProps: PropTypes.object,\n    pickerModalProps: PropTypes.object\n  };\n\n  static defaultProps = {\n    searchPlaceholder: 'Search...',\n    searchStyle: {}\n  };\n\n  state = {\n    scrollHeight: undefined,\n    scrollContentHeight: undefined\n  };\n\n  keyExtractor = (_item, index) => index.toString();\n\n  generateStyles() {\n    this.styles = createStyles(this.props);\n  }\n\n  renderSearchInput() {\n    const {showSearch, searchStyle, searchPlaceholder, onSearchChange, renderCustomSearch, testID} = this.props;\n\n    if (showSearch) {\n      if (_.isFunction(renderCustomSearch)) {\n        return renderCustomSearch(this.props);\n      }\n\n      return (\n        <View style={this.styles.searchInputContainer}>\n          <Icon style={this.styles.searchIcon} source={searchStyle.icon || Assets.icons.search}/>\n          <TextInput\n            testID={testID}\n            ref={r => (this.search = r)}\n            style={[this.styles.searchInput, {color: searchStyle.color}]}\n            placeholderTextColor={searchStyle.placeholderTextColor}\n            selectionColor={searchStyle.selectionColor}\n            placeholder={searchPlaceholder}\n            onChangeText={_.throttle(onSearchChange, 300)}\n            autoCorrect={false}\n            underlineColorAndroid=\"transparent\"\n          />\n        </View>\n      );\n    }\n  }\n\n  renderItem = ({index}) => {\n    const {children} = this.props;\n    return React.Children.toArray(children)[index];\n  };\n\n  render() {\n    const {/* visible, enableModalBlur,  */topBarProps, listProps, children/* , onShow, pickerModalProps */} = this.props;\n    return (\n      <>\n        {/* <Modal\n         animationType={'slide'}\n         transparent={Constants.isIOS && enableModalBlur}\n         enableModalBlur={Constants.isIOS && enableModalBlur}\n         visible={visible}\n         onRequestClose={topBarProps.onCancel}\n         onShow={onShow}\n         {...pickerModalProps}\n       > */}\n        <Modal.TopBar {...topBarProps}/>\n        {this.renderSearchInput()}\n\n        <FlatList\n          data={_.times(React.Children.count(children))}\n          renderItem={this.renderItem}\n          keyExtractor={this.keyExtractor}\n          {...listProps}\n        />\n      </>\n      // </Modal>\n    );\n  }\n}\n\nfunction createStyles() {\n  return StyleSheet.create({\n    modalBody: {},\n    searchInputContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      paddingLeft: 16,\n      borderBottomWidth: StyleSheet.hairlineWidth,\n      borderBottomColor: Colors.grey60\n    },\n    searchIcon: {\n      marginRight: 12\n    },\n    searchInput: {\n      height: 60,\n      paddingRight: 16,\n      flex: 1,\n      ...Typography.text70\n    }\n  });\n}\n\nexport default PickerModal;\n"]},"metadata":{},"sourceType":"module"}