{"ast":null,"code":"import { isEmpty } from 'lodash';\nimport React, { useMemo, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { extractAlignmentsValues } from \"../../../commons/modifiers\";\nexport var AlignmentType;\n\n(function (AlignmentType) {\n  AlignmentType[\"DEFAULT\"] = \"default\";\n  AlignmentType[\"BOTTOM\"] = \"bottom\";\n  AlignmentType[\"TOP\"] = \"top\";\n})(AlignmentType || (AlignmentType = {}));\n\nvar useAlignmentStyle = function useAlignmentStyle(props) {\n  var alignmentType = useRef(AlignmentType.DEFAULT);\n\n  var getAlignments = function getAlignments() {\n    var alignments = extractAlignmentsValues(props);\n\n    if (isEmpty(alignments)) {\n      return styles.defaultAlignment;\n    } else {\n      alignmentType.current = props != null && props.bottom ? AlignmentType.BOTTOM : AlignmentType.TOP;\n      return alignments;\n    }\n  };\n\n  var alignments = getAlignments();\n  var alignmentStyle = useMemo(function () {\n    return [styles.container, alignments];\n  }, [alignments]);\n  return {\n    alignmentType: alignmentType.current,\n    alignmentStyle: alignmentStyle\n  };\n};\n\nexport default useAlignmentStyle;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  defaultAlignment: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/aliabji/code/dogs/Pawls/node_modules/react-native-ui-lib/src/incubator/Dialog/helpers/useAlignmentStyle.js"],"names":["isEmpty","React","useMemo","useRef","extractAlignmentsValues","AlignmentType","useAlignmentStyle","props","alignmentType","DEFAULT","getAlignments","alignments","styles","defaultAlignment","current","bottom","BOTTOM","TOP","alignmentStyle","container","StyleSheet","create","flex","justifyContent","alignItems"],"mappings":"AAAA,SAASA,OAAT,QAAwB,QAAxB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,EAAyBC,MAAzB,QAAuC,OAAvC;;AAEA,SAASC,uBAAT;AACA,OAAO,IAAIC,aAAJ;;AAEP,CAAC,UAAUA,aAAV,EAAyB;AACxBA,EAAAA,aAAa,CAAC,SAAD,CAAb,GAA2B,SAA3B;AACAA,EAAAA,aAAa,CAAC,QAAD,CAAb,GAA0B,QAA1B;AACAA,EAAAA,aAAa,CAAC,KAAD,CAAb,GAAuB,KAAvB;AACD,CAJD,EAIGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CAJhB;;AAMA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,KAAK,EAAI;AACjC,MAAMC,aAAa,GAAGL,MAAM,CAACE,aAAa,CAACI,OAAf,CAA5B;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,UAAU,GAAGP,uBAAuB,CAACG,KAAD,CAA1C;;AAEA,QAAIP,OAAO,CAACW,UAAD,CAAX,EAAyB;AACvB,aAAOC,MAAM,CAACC,gBAAd;AACD,KAFD,MAEO;AACLL,MAAAA,aAAa,CAACM,OAAd,GAAwBP,KAAK,QAAL,IAAAA,KAAK,CAAEQ,MAAP,GAAgBV,aAAa,CAACW,MAA9B,GAAuCX,aAAa,CAACY,GAA7E;AACA,aAAON,UAAP;AACD;AACF,GATD;;AAWA,MAAMA,UAAU,GAAGD,aAAa,EAAhC;AACA,MAAMQ,cAAc,GAAGhB,OAAO,CAAC,YAAM;AACnC,WAAO,CAACU,MAAM,CAACO,SAAR,EAAmBR,UAAnB,CAAP;AACD,GAF6B,EAE3B,CAACA,UAAD,CAF2B,CAA9B;AAGA,SAAO;AACLH,IAAAA,aAAa,EAAEA,aAAa,CAACM,OADxB;AAELI,IAAAA,cAAc,EAAdA;AAFK,GAAP;AAID,CAtBD;;AAwBA,eAAeZ,iBAAf;AACA,IAAMM,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,SAAS,EAAE;AACTG,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BT,EAAAA,gBAAgB,EAAE;AAChBU,IAAAA,cAAc,EAAE,QADA;AAEhBC,IAAAA,UAAU,EAAE;AAFI;AAJa,CAAlB,CAAf","sourcesContent":["import { isEmpty } from 'lodash';\nimport React, { useMemo, useRef } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { extractAlignmentsValues } from \"../../../commons/modifiers\";\nexport let AlignmentType;\n\n(function (AlignmentType) {\n  AlignmentType[\"DEFAULT\"] = \"default\";\n  AlignmentType[\"BOTTOM\"] = \"bottom\";\n  AlignmentType[\"TOP\"] = \"top\";\n})(AlignmentType || (AlignmentType = {}));\n\nconst useAlignmentStyle = props => {\n  const alignmentType = useRef(AlignmentType.DEFAULT);\n\n  const getAlignments = () => {\n    const alignments = extractAlignmentsValues(props);\n\n    if (isEmpty(alignments)) {\n      return styles.defaultAlignment;\n    } else {\n      alignmentType.current = props?.bottom ? AlignmentType.BOTTOM : AlignmentType.TOP;\n      return alignments;\n    }\n  };\n\n  const alignments = getAlignments();\n  const alignmentStyle = useMemo(() => {\n    return [styles.container, alignments];\n  }, [alignments]);\n  return {\n    alignmentType: alignmentType.current,\n    alignmentStyle\n  };\n};\n\nexport default useAlignmentStyle;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  defaultAlignment: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});"]},"metadata":{},"sourceType":"module"}